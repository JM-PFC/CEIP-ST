{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pad",
				"padding-right"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"border",
				"border"
			],
			[
				"mar",
				"margin"
			],
			[
				"remo",
				"removeClass	.removeClass()"
			],
			[
				"R",
				"ROLE_JEFE_ESTUDIO"
			],
			[
				"te",
				"text-align"
			],
			[
				"remove",
				"removeClass	.removeClass()"
			],
			[
				"bo",
				"border-top"
			],
			[
				"font",
				"font-weight"
			],
			[
				"min",
				"min-width"
			],
			[
				"border-ri",
				"border-right"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"border-col",
				"border-color"
			],
			[
				"alrt",
				"alert"
			],
			[
				"bord",
				"border-radius"
			],
			[
				"padd",
				"padding"
			],
			[
				"no",
				"nowrap"
			],
			[
				"paddin",
				"padding"
			],
			[
				"padding",
				"padding-bottom"
			],
			[
				"color_",
				"color_rojo"
			],
			[
				"num",
				"numOrden"
			],
			[
				"Pa",
				"parseInt"
			],
			[
				"fon",
				"font-size"
			],
			[
				"marg",
				"margin-right"
			],
			[
				"margin-",
				"margin-bottom"
			],
			[
				"margi",
				"margin-bottom"
			],
			[
				"MARGIN",
				"margin-top"
			],
			[
				"pa",
				"padding"
			],
			[
				"in",
				"inline-block"
			],
			[
				"max",
				"max-width"
			],
			[
				"setFecha",
				"setFechaActualizada"
			],
			[
				"fecha",
				"fechaActualizada"
			],
			[
				"tex",
				"text-align"
			],
			[
				"borde",
				"border"
			],
			[
				"chil",
				"nth-child"
			],
			[
				"cl",
				"clear"
			],
			[
				"tabl",
				"table-cell"
			],
			[
				"getAs",
				"getAccesoSeguimientos"
			],
			[
				"z",
				"z-index"
			],
			[
				"e",
				"each	.each()"
			],
			[
				"pas",
				"password"
			],
			[
				"ten",
				"text-align"
			],
			[
				"else",
				"else	Twig : Else"
			],
			[
				"if",
				"if	Twig : If"
			],
			[
				"bac",
				"background"
			],
			[
				"border-",
				"border-right"
			],
			[
				"pos",
				"position"
			],
			[
				"border-co",
				"border-color"
			],
			[
				"trans",
				"transparent"
			],
			[
				"PA",
				"padding-top"
			],
			[
				"ma",
				"margin-bottom"
			],
			[
				"add",
				"addClass	.addClass()"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"cur",
				"cursor"
			],
			[
				"has",
				"hasClass	.hasClass()"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/config/config.yml",
			"settings":
			{
				"buffer_size": 4990,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing.yml",
			"settings":
			{
				"buffer_size": 2481,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing/alumno.yml",
			"settings":
			{
				"buffer_size": 3546,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing/festivos.yml",
			"settings":
			{
				"buffer_size": 2671,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/config/routing.yml",
			"settings":
			{
				"buffer_size": 397,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/AppKernel.php",
			"settings":
			{
				"buffer_size": 1794,
				"line_ending": "Unix"
			}
		},
		{
			"file": "composer.json",
			"settings":
			{
				"buffer_size": 2479,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/config/security.yml",
			"settings":
			{
				"buffer_size": 3079,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/services.yml",
			"settings":
			{
				"buffer_size": 202,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Default/index.html.twig",
			"settings":
			{
				"buffer_size": 26626,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/views/Default/index.html.twig",
			"settings":
			{
				"buffer_size": 2195,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Resources/views/frontend.html.twig",
			"settings":
			{
				"buffer_size": 16745,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Security/login.html.twig",
			"settings":
			{
				"buffer_size": 1717,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Controller/DefaultController.php",
			"settings":
			{
				"buffer_size": 1082,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Resources/views/base.html.twig",
			"settings":
			{
				"buffer_size": 969,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/config/parameters.yml",
			"settings":
			{
				"buffer_size": 395,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/ImparteController.php",
			"settings":
			{
				"buffer_size": 31470,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/AsignaturaController.php",
			"settings":
			{
				"buffer_size": 23943,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/index.html.twig",
			"settings":
			{
				"buffer_size": 29328,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/perfil.html.twig",
			"settings":
			{
				"buffer_size": 11373,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/seleccion.html.twig",
			"settings":
			{
				"buffer_size": 5175,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/confirmar.html.twig",
			"settings":
			{
				"buffer_size": 14471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/perfil.html.twig",
			"settings":
			{
				"buffer_size": 6852,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Form/TareaType.php",
			"settings":
			{
				"buffer_size": 2553,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/public/js/intranet.js",
			"settings":
			{
				"buffer_size": 92033,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/public/css/intranet.css",
			"settings":
			{
				"buffer_size": 80059,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/config/routing.yml",
			"settings":
			{
				"buffer_size": 549,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/SecurityController.php",
			"settings":
			{
				"buffer_size": 1003,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Security/restablecerPassword.html.twig",
			"settings":
			{
				"buffer_size": 3051,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Security/noencontrada.html.twig",
			"settings":
			{
				"buffer_size": 1245,
				"line_ending": "Unix",
				"name": "asdas"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Security/denegada.html.twig",
			"settings":
			{
				"buffer_size": 1229,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/translations/messages.en.yml",
			"settings":
			{
				"buffer_size": 20560,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/translations/messages.es.yml",
			"settings":
			{
				"buffer_size": 503,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/AlumnoController.php",
			"settings":
			{
				"buffer_size": 57177,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Alumno.php",
			"settings":
			{
				"buffer_size": 23896,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/ProfesorController.php",
			"settings":
			{
				"buffer_size": 90608,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Equipamiento.php",
			"settings":
			{
				"buffer_size": 4313,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Horario.php",
			"settings":
			{
				"buffer_size": 5575,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Padres.php",
			"settings":
			{
				"buffer_size": 13955,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/Tarea.php",
			"settings":
			{
				"buffer_size": 5110,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Grupo.php",
			"settings":
			{
				"buffer_size": 6668,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Administrativo/new.html.twig",
			"settings":
			{
				"buffer_size": 2432,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Administrativo/edit.html.twig",
			"settings":
			{
				"buffer_size": 4104,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing/profesor.yml",
			"settings":
			{
				"buffer_size": 3777,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/ProfesorController.php",
			"settings":
			{
				"buffer_size": 31250,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/CursoController.php",
			"settings":
			{
				"buffer_size": 17546,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Profesor.php",
			"settings":
			{
				"buffer_size": 25336,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Administrativo.php",
			"settings":
			{
				"buffer_size": 13659,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/PadresController.php",
			"settings":
			{
				"buffer_size": 12431,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/AlumnoController.php",
			"settings":
			{
				"buffer_size": 44077,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/HorarioController.php",
			"settings":
			{
				"buffer_size": 11331,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/AusenciaController.php",
			"settings":
			{
				"buffer_size": 9522,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "*{\n    margin: 0;\n    padding: 0;\n}\na {\n    text-decoration: none !important;\n    color: #001F51 !important;\n    outline: none !important;\n}\na:focus {\n    text-decoration: underline;\n}\na:hover {\n    color: #496a9f !important ;\n}\nbody {\n    background-color: #FFF;\n    border: 0px none;\n    width: 100%;\n    height: 100%;\n    font-size: 16px !important;\n    font-family: Trebuchet MS,Tahoma,Verdana,sans-serif !important;\n    color: #001F51;\n}\n.cab_sup {\n    position: relative;\n    float: left;\n    padding: 0.2em 0 ;\n    width: 100%;\n    background-color: #001F51;\n    color: #FFF;\n    z-index: 0;\n}\n.cab_sup a{\n    color: #FFF;\n}\n.centrado {\n    clear: both;\n    position: relative;\n    /*max-width: 74.0625em;*/\n    max-width: 70em;\n    margin: 0px auto;\n}\n.cab_sup .centrado {\n    z-index: 10;\n    overflow: visible;\n}\n.menu_sup_izq {\n    position: relative;\n    float: left;\n    font-family: \"Times New Roman\", Times, serif;\n    padding-top: 6px;\n}\n.menu_sup_izq img{\n    margin: 2px 5px;\n}\n.menu_sup_izq li {\n    list-style-type: none;\n    float: left;\n    position: relative;\n}\n.menu_sup_izq li a{\n        color: #E3E7EB !important;\n    }\n.menu_sup_izq a:hover{\n    text-decoration: underline;\n}\n.primero,.siguiente{\n    text-transform: uppercase;\n    padding:0 0.25em;\n    border: medium green;\n}\n.primero a,.siguiente a{\n        padding:0 0.25em;\n}\n.siguiente{\n    border-left: 1px solid;\n}\n\n#logotipo {\n    position: absolute;\n    top: 0px;\n    left: 43%;\n    width: 189px;\n    height: 179px;\n    overflow: hidden;\n    font-size: 1em;\n    z-index: 5;\n}\n#logotipo span {\n    position: relative;\n    float: left;\n    width: 189px;\n    height: 179px;\n    cursor: pointer;\n    z-index: 2;\n}\n/*----------Menú superior derecha--------------*/\n.menu_sup_der{\n    position: relative;\n    float: right;\n    width: 10em; /* Aumentar el tamaño de la caja para añadir más redes sociales*/\n    text-align: right;\n    padding-left: 4px;\n    padding-top: 7px;\n}\n.menu_sup_der>div{\n        position: relative;\n        float: left;\n}\n.usuariologin{\n    padding: 0.15em 0px 0.15em 2em;\n    background: url(\"../images/cabecera//fnd_login.png\") no-repeat scroll left center transparent;\n    cursor: pointer;\n    font-family: \"Times New Roman\", Times, serif;\n    color: #E3E7EB;\n    text-transform: uppercase;\n}\n.caja_login {\n    position: absolute;\n    top: 26px;\n    left: -2.5em;\n    padding: 2px;\n    width: 200px;\n    z-index: 60;\n    background-color: #001F51;\n}\n.caja_login #login{\n    height: 90px;\n}\n.caja_login .recuperar a{\n    color: white !important;\n}\n.caja_login .recuperar p{\n    margin: 0;\n}\n.login label{\n    width: 13em;\n}\n.oculto {\n    display: none;\n}\n.bloque_login {\n    position: relative;\n    float: left;\n    margin: 0px;\n    padding: 0px;\n    clear: both;\n    width: 100%;\n    font-size: 0.8em;\n    text-align: center;\n}\n.bloque_login>h2{\n    position: relative;\n    margin: 0px;\n    padding: 10px;\n    font-size: 1.8em !important;\n    font-family:\"Times New Roman\",serif;;\n    font-weight: normal;\n    color: #FFF;\n    line-height: 100%;\n    padding-bottom: 0.25em;\n    text-align: right;\n}\n.bloque_login>form div{\n\n    margin: 6px;\n}\n.bloque_login input[type=\"text\"],.bloque_login input[type=\"password\" ] {\n        background:  #b1cce7;\n        border: grey solid 1px;\n        color: #001f51;\n        padding: 0px 5px;\n        width: 100%;\n        margin-bottom: 2px;\n        float: right;\n        border-radius: 3px;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        box-sizing: border-box;\n\n}\n.bloque_login label{\n    margin-right: 4px;\n    padding: 3px 0px;\n    font-size: 0.9em;\n}\n.bloque_login .recordar{\n    float: left;\n    margin-top: 8px;\n    font-size: 15px;\n}\n.recordar label input{\n    margin: 0  1px!important;\n    vertical-align: sub;\n    cursor: pointer;\n}\n\n.bloque_login input[type=\"submit\"]{\n    width: 40%;\n    margin: 6px 5px 6px 0;\n    float: right;\n    color: grey ;\n}\n.bloque_login div:last-child:hover{\ntext-decoration: underline;\n}\n\nfieldset.fsetoculto {\n    border: medium none;\n}\n\n.bl_izq {\n    position: relative;\n    float: left;\n    margin: 0;\n    padding: 0;\n}\n\n.redes_soc_sup,.redes_soc_sup a{\n    position: relative;\n    float: left;\n    margin-left: 0.25em;\n}\n\n.icon_face, .icon_twitter{\n    width: 25px;\n}\n.icon_twitter{\n    background: transparent url(\"../images/menu/twitter.png\") no-repeat scroll right top;\n}\n.icon_facebook{\n    background: transparent url(\"../images/menu/facebook.png\") no-repeat scroll right top;\n}\n}\n/*---------------------------------------*/\n.cabecera {\n    position: relative;\n    float: left;\n    width: 100%;\n    height: 150px;\n    z-index: -2;\n}\n\n.titulo{\n    position: relative;\n    float: left;\n    margin-top: 1em;\n    font-family: \"Comic Sans MS\", cursive;\n    font-size: 1.40em;\n    color: #001F51;\n    line-height: 150%;\n}\n.titulo>strong{\n        font-size:1.2em;\n}\n\n.carrusel{\n    position: relative;\n    float: right;\n    width: 400px;\n    height: 145px;\n    margin: 0   auto;\n    z-index: -1;\n}\n.carrusel>div{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n}\n\n.carrusel>img{\n    position: relative;\n    float: right;\n    width: 447px;\n    height: 200px;\n    z-index: 30;\n    margin: 0px;   \n    padding: 0px;\n\n\n}\n.fondo_menu{\n    position: absolute;\n    width: 100%;\n    top: 190px;\n    height: 7em;\n    background-color: #b1cce7;\n    color: #FFF;\n    opacity: 0.3;\n    z-index:2;\n\n}\n/* Estilo Páginas Restringida*/\n\n#div_restringida{\n    width: 80%;\n    min-height: 150px;\n    background: #b1cce7 none repeat scroll 0 0;\n    border-radius: 10px;\n    box-shadow: 5px 5px 15px black;\n    padding: 7px;\n    margin: 3.8% auto;\n    overflow: auto;\n}\n#div_restringida h3{\n    color: #001f51;\n    margin-bottom: 15px !important;\n    margin: 0;\n    padding: 5px 0;\n    text-align: center;\n}\n#div_restringida img{\n    display: inline;\n    float: left;\n    width: 85px;\n}\n#div_restringida p{\n    display: inline;\n    float: left;\n    font-family: \"Comic Sans MS\";\n    font-size: 14px;\n    line-height: 25px;\n    padding: 0;\n}\n\n/* Menú Principal*/\n.barra_menu{\n    width: 93%;\n    z-index: 50;\n    position: relative;\n    float: left;\n    height: 60px;\n    margin: 5px 40px;\n    padding-top: 10px;\n}\n.menu{\n    width: 100%;\n    position: relative;\n    float: left;\n    color: white;\n    list-style: none;\n    z-index: 21;\n    height: 45px;\n    background-color:  #001F51;\n    -moz-box-shadow:  black 5px 5px 15px;\n    -webkit-box-shadow:  black 5px 5px 15px;\n    box-shadow:  black 5px 5px 15px;\n    z-index: 10;\n}\n.barra_menu:before, .barra_menu:after{\n    content: \"\";\n    position: absolute;\n    display: block;\n    bottom: -10px;\n    border: 1.59em solid #001c4a;\n    z-index: -1;\n}\n.barra_menu:before{\n    left: -2.1em;\n    border-right-width: 1.5em;\n    border-left-color: transparent;\n}\n.barra_menu:after {\n    right: -2.1em;\n    border-left-width: 1.5em;\n    border-right-color: transparent;\n}\n.menu:before, .menu:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    border-style: solid;\n    border-color: #000c20 transparent transparent transparent;\n    bottom: -1em;\n}\n.menu:before {\n    left: 0;\n    top:45px;\n    border-width: 0.96em 0 0 1em;\n}\n.menu:after {\n    right: 0;\n    border-width: 1em 1em 0.06em 0;\n}\n.menu > li{ \n    list-style: none;\n    display: inline-block;\n    position:relative;\n    float: left;\n    border-radius: 10px 10px 0px 0px;\n    text-align: center;\n    width: 13%;\n    height: 40px;\n    font-family: Helvetica,Arial,sans-serif;\n    -webkit-transition: all 0.2s ease-in;\n    -moz-transition: all 0.2s ease-in;\n    -o-transition: all 0.2s ease-in;\n     background-color:  #001F51;\n    display: table;\n}\n.menu > li a{\n    height: 45px;\n    display: inline-block;\n    font-size: 0.9em;\n    color: white !important;\n    display: table-cell;\n    vertical-align: middle; \n}\n.menu li:hover a{\n    color: #001F51;\n}\n.menu > li a:hover{\n        display: table-cell;\n        vertical-align: middle;\n        color: #001F51 ;\n}\n.submenu{\n    list-style: none;\n    position: absolute;\n    text-align: left;\n    padding: 1px;\n    top: 30px;\n    left: 50%;\n    margin-left: -83px;\n    width: 160px;\n    opacity: 0;\n    visibility: hidden;\n    -moz-transition: all .3s .02s;\n    -webkit-transition: all .3s .02s;\n    -o-transition: all .3s .02s;\n    transition: all .3s .02s;\n     z-index: -3;\n}\n.menu > li:hover >ul{\n    opacity: 1;\n    top:45px;\n    visibility: visible;\n}\n.submenu > li, .submenu  ul li{\n    background-color:  #f26e26;\n    width: 100%;\n    display: table;\n    border: 2px ridge #CCC;\n    border-top: none;\n    border-bottom: none;\n    border-top: 1px solid white !important;\n}\n.submenu li a, .submenu  ul li a{\n    height: auto;\n    min-width: 10px;\n    color:#fff !important;\n    text-decoration:none !important;\n    display:block;\n    padding: 6px 3px;\n}\n.submenu li:hover>a, .submenu  ul li:hover>a{\n        color: #001F51 !important;\n}\n\n.submenu li:first-child, .submenu  ul li:first-child{\n    border-radius:5px 5px 0 0;\n    margin-top:15px;\n    position:relative;\n    border: 2px ridge #CCC;\n    border-top: 2px ridge #CCC !important;\n    border-bottom: none;\n}\n.submenu li:last-child, .submenu  ul li:last-child{\n    border: 2px ridge #CCC;\n    border-radius: 0 0 5px 5px;\n}\n.submenu li:first-child:before{ \n    content:'';\n    position:absolute;\n    width:0.5px;\n    border:8px solid transparent ;\n    border-bottom-color:#001F51;\n    left:50%;\n    top:-16px;\n    margin-left:-8px;\n}\n.menu > li:hover {\n    border-radius: 10px 10px 0px 0px;\n    height: 50px;\n    -moz-transform: translate(0px, -5px);\n    -webkit-transform: translate(0px, -5px);\n    transform: translate(0px, -5px);\n    border: 2px ridge #CCC;\n        \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}   \n.submenu  ul {\n    list-style: none;\n    position: absolute;\n    text-align: left;\n    padding: 16px 0px 0px 0px;\n    top: -31px;\n    left: 259px;\n    margin-left: -79px;\n    width: 170px;\n    opacity: 0;\n    visibility: hidden;\n    -moz-transition: all .3s .02s;\n    -webkit-transition: all .3s .02s;\n    -o-transition: all .3s .02s;\n    transition: all .3s .02s;\n}\n.submenu li:hover ul{\n    opacity: 1;\n    visibility: visible;\n}\n .submenu li ul li:first-child:before{ \n    content:'';\n    position:absolute;\n    width:0.5px;\n    border:8px solid transparent ;\n    border-right-color:#001F51;\n    left:-8px;\n    top:20%;\n}\n.submenu li{\n    position: relative;\n}\n\n/* Botones del menú principal*/\n\n.boton_inicio{\n\n    width: 80px !important;\n}\n.boton_inicio a:hover{\n\n    color: #f26e26 !important;\n}\n.boton_inicio:hover{\n    -moz-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n    border: none !important;\n    height: 40px !important;\n}\n/*Colores botones menú*/\n\n.boton_naranja:hover{\n    background-color:  #f26e26;\n}\n.boton_azul:hover{\n    background-color:  #327AFF;\n}\n.boton_amarillo:hover{\n    background-color:  #f8ad48;\n}\n.boton_verde:hover{\n    background-color:  #37db45;\n}\n.boton_rojo:hover{\n    background-color:  #dc3f36;\n}\n.boton_lila:hover{\n    background: #b067a9;\n}\n        /*Colores botones submenú*/\n.boton_naranja ul li{\n    background-color:  #f26e26;\n}\n.boton_azul ul li{\n    background-color:  #327AFF;\n}\n.boton_amarillo ul li{\n    background-color:  #f8ad48;\n}\n.boton_verde ul li{\n    background-color:  #37db45;\n}\n.boton_rojo ul li{\n    background-color:  #dc3f36;\n}\n.boton_lila ul li{\n    background: #b067a9;\n}\n.boton_naranja ul li:hover{\n    background:#FDB358;\n}\n.boton_azul ul li:hover{\n    background-color:  #7BAAFF;\n}\n.boton_amarillo ul li:hover{\n    background-color:  #FFED8F;\n}\n.boton_verde ul li:hover{\n    background-color:  #A1FF90;\n}\n.boton_rojo ul li:hover{\n    background-color:  #FF7575;\n}\n.boton_lila ul li:hover{\n    background: #EC9DFF;\n}\n.migas{\n    margin-top: 70px;\n    color: #496A9F;\n    font-size: 0.95em;\n    height: 30px;\n}\n.migas > span{\n    float: right;\n}\n.migas > :first-child{\n    float: left !important;\n}\n.main{\n    width: 100%;\n    float: left;\n    text-align: left;\n    font-size: 0.8em;\n    margin-top: 35px;\n    padding-top: 10px;\n    min-height: 190px;\n}\n.contenido{\n    width: 68.5%;\n    float: left;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.main aside{\n    padding: 10px;\n    width: 30%;\n    float: left;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    margin-left: 10px;\n}\n.contenido, .main aside{\n    display: inline-block;\n    vertical-align: top;\n}\n.aside_columna{\n    text-align: justify;\n    margin-bottom: 25px;\n}\n.aside_columna h3{\n    font-size: 1.2em;\n    font-family: Helvetica, Arial, sans-serif;\n    border-radius: 0 0 5px 5px;\n    box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.5);\n    letter-spacing: 0.2px;\n    color: #001F51;\n    padding: 5px 25px;\n    background: #DBE6F1;\n    border-top: 1.5px solid blue;\n    margin: 0 10px 10px 10px;\n    text-align: center;\n}\n.aside_columna p,.aside_columna span{\n    font-size: 12px;\n    margin-bottom: 5px;\n    padding:0;\n    color: #001F51;\n}\n#img_calendario{\n    display: block;\n    margin-bottom: -16px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 13px !important;\n    text-align: center;\n}\n.horarios p span{\n    display: block;\n    text-align: center;\n    border-left: #334c73 2px solid;\n    border-right: #334c73 2px solid;\n}\n.aside_columna p strong{\n    background: #334c73;\n    color: white;\n    text-align: center;\n    display: block;\n}\n.aside_columna p .dias{\n    font-weight: bold;\n    margin-bottom: 0;\n    padding-bottom: 5px;\n}\n.aside_columna p .horas{\n    margin-bottom: 0;\n    padding-bottom: 5px;\n}\n.aside_columna p[id^='cont_']{\n    margin: 7px !important;\n    border-radius: 5px;\n}\n.aside_columna p[id^='cont_'] span:last-child{\n   border-bottom: 2px solid #334c73;\n   border-radius: 0 0 5px 5px;\n}\n.aside_columna p[id^='cont_'] span:nth-child(2){\n   padding-top: 5px !important;\n}\n.aside_columna p[id^='cont_'] strong{\n   padding: 2px;\n   border-radius: 5px 5px 0 0;\n   font-family: serif;\n}\n.aside_twiter>div{\n    padding: 0 3%;\n}\n/*Noticias portada*/\n\n.contenedor_noticia{\n    padding:10px;\n    display:inline-block;\n    width: 100%;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    border-bottom: 2px solid rgb(51, 76, 115);\n    border-bottom: 2px solid rgba(51, 76, 115, .2);\n    -webkit-background-clip: padding-box; /* for Safari */\n    background-clip: padding-box; /* for IE9+, Firefox 4+, Opera, Chrome */\n    min-height: 160px;\n    overflow: hidden;\n}\n.noticia h2{\n    margin-top: 10px !important;\n    margin-bottom: 15px !important;\n}\n.main .contenedor_noticia:last-child{\n    border: none !important;\n}\n.fecha_publicada{\n    position: relative;\n    display: inline-block;\n    float: left;\n    background-color: #001F51 !important;\n    color: #FFF !important;\n    width: 8.2%;\n    height: 145px;\n    background-image: url(\"../images/mascara_publicada.png\");\n    background-repeat: no-repeat;\n    padding: 15px 10px 20px;\n    text-align: center;\n    line-height: 1.2;\n    margin-right: 10px;\n    font-size: 15px;\n    border-radius: 3px;\n    box-shadow: 2px 2px 1px #888888;\n}\n.valor_day{\n    font-size: 30px;\n    font-weight: bold;\n}\n.valor_month{\n    font-size: 16px;\n    margin-top: 4px;\n    text-transform: uppercase;\n}\n.valor_year{\n    font-size: 14px;\n    margin-top: 2px;\n}\n\n.contenido_noticia{\n    display: inline-block;\n    float: left;\n    width: 100%;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    word-wrap: break-word;\n}\n.contenido_noticia p{\n    margin: 0!important;\n\n}\n#recientes{\n    padding: 20px 10px;\n}\n#recientes .contenido_noticia img{\n    display: none;\n}\n#recientes .contenido_noticia{\n    width: 89%;\n}\n#recientes .contenido_noticia p{\n    margin-top: 0px !important;\n\n}\n.imgLiquidFill{\n    position: relative;\n    display: block;\n    width:100%; \n    height:180px;\n    margin-bottom: 10px;\n    border-radius: 3px !important;\n    box-shadow: 2px 2px 5px #888888;\n}\n.img-small{\n    width:150px !important; \n    height:130px !important;\n    float: left;\n    margin-right: 20px;\n    margin-bottom: 20px;\n    border-radius: 3px !important;\n    background-position: center;/*Se centra la imagen pequeña de la noticia*/\n}\n.normal{\n    width:530px !important; \n    height:300px !important;\n    margin: 30px auto;\n    border-radius: 3px !important;\n    background-position: center;/*Se centra la imagen pequeña de la noticia*/\n}\n/*.no_foto{\n    padding-left: 170px;\n}*/\n.no-seleccion-foto:hover{\n    opacity: 0 !important;\n}\n.no-seleccion:hover{\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: default;\n}\n.contenido_noticia>div>a:hover{\n    width: 100%;\n    opacity: 0.1;\n    background-color: white;\n}\n.contenido_noticia h2{\n    position: relative;\n    /*display: block;\n    clear: both;*/\n    margin-bottom: 3px;\n    margin-top: -5px;\n    font-size: 25px;\n    font-family: serif;\n    text-transform: capitalize;\n}\n.contenido_noticia p{\n    font-size: 14px;\n}\n#nuevo{\n    margin-top: 10px;\n}\n#calendar{\n    clear: both;\n    display: inline-block;\n    height: auto !important;\n    width: 100%;\n}\n#calendar .c-grid{\n    background: #eff4f9 none repeat scroll 0 0;\n    clear: both;\n    display: block;\n    \n    margin: 0 5%;\n    width: 90%;\n    border-radius: 5px 5px 0 0;\n}\n#calendar .c-event-item{\n    margin: 5px !important;\n    padding-left: 0 !important;\n}\n#calendar .c-event-item > div{\n    white-space: pre-wrap;\n}\n#calendar .c-event-item span{\n    padding: 0 8px;\n    margin-left: 5px;\n    border-radius: 8px;\n    background: #5cb85c;\n    white-space: nowrap;\n}\n#calendar .c-grid div[class*=\"c-week-day\"], #calendar .c-grid div[class*=\"c-grid-title\"]{\n    padding-top: 1% !important;\n    background: #001f51 none repeat scroll 0 0;\n    opacity: 0.8;\n    height: 24px;\n}\n#calendar .c-grid div[class*=\"c-grid-title\"]{\n    border-bottom: 1px solid white;\n    font-size: 1.2em;\n    padding: 0 6px !important;\n}\n#calendar .c-grid div[class*=\"c-day\"]{\n    padding: 3px 0 !important;\n    font-size: 13px;\n}\n#calendar .c-grid .c-day:not(.c-event){\n    pointer-events: none !important ;\n    cursor: none !important;\n}\n#calendar .c-event-grid{\n    background: #eff4f9 none repeat scroll 0 0;\n    border-radius: 0 0 5px 5px;\n    box-shadow: 2px 2px 5px #888888;\n    clear: both;\n    display: block;\n    margin: 0 5%;\n    min-height: 60px;\n    padding-bottom: 5px;\n    width: 90%;\n}\n#calendar .c-event-grid .c-event-title {\n    color: white;\n    font-weight: bold;\n    height: 12%;\n    margin-left: 0;\n    text-align: center;\n    width: 100%;\n    background: #001f51 none repeat scroll 0 0;\n    padding: 1% !important;\n    opacity: 0.8;\n}\n#calendar .c-grid .c-event {\n    border-radius: 25px;\n    margin: 0 2.65%;\n    width: 9%;\n    background: #001f51;\n    opacity: 0.8;\n}\n#calendar .c-grid .c-event-over {\n    background: #fa8258 !important;\n    color: #001f51 !important;\n}\n#calendar .c-event-grid .c-event-body {\n    background-color: #eff4f9;\n    max-height: 170px;\n    overflow: auto;\n}\n#calendar .c-today {\n    background-color: #abd0d5;\n    border-radius: 25px;\n    margin: 0 2.6%;\n    width: 9.1%;\n    text-decoration: underline;\n    font-weight: bold;\n}\n#calendar .c-month {\n    width: 82%;\n}\n#calendar .c-next {\n    width: 9%;\n    border-radius: 0 5px 0 0;\n}\n#calendar .c-previous {\n    width: 9%;\n    border-radius: 5px 0 0 0;\n}\n#calendar .div-over {\n    margin: 0 auto;\n    margin-top: 3%;\n    text-align: center;\n    opacity: 0.5\n}\n#calendar .weekend {\n    background: lightgray none repeat scroll 0 0;\n    border-radius: 0;\n    margin: 0;\n    width: 14.28%;\n}\n.dia_select{\n    background: #5cb85c !important;\n    color: #001f51 !important;   \n}\n.icon {\n    background-repeat: no-repeat;\n    display: inline-block;\n    margin-top: -0.25em;\n    overflow: hidden;\n    position: relative;\n    text-indent: -99999px;\n    vertical-align: middle;\n    height: 16px;\n    width: 16px;\n    background-image: url(\"../images/menu/ui-icons_334c73_256x240.png\");\n}\n.icon-triangle-1-e {\n    background-position: -32px -16px;\n}\n.calendar .description{\n    background: #abd0d5;\n    border-top: 1px solid #001f51 !important;\n    padding: 10px;\n    border-radius: 5px;\n}\n.arrow-right{\n    width: 0 !important;\n    height: 0!important;\n    border-top: 5px solid transparent !important;\n    border-bottom: 5px solid transparent !important;\n    border-left: 5px solid #001f51 !important;\n    float: left !important;\n    margin-top: 3px !important;\n    margin-right: 3px !important;\n}\n.arrow-down{\n    width: 0 !important;\n    height: 0 !important;\n    border-top: 5px solid #001f51 !important;\n    border-right: 5px solid transparent !important;\n    border-left: 5px solid transparent !important;\n    float: left !important;\n    margin-top: 6px !important;\n    margin-right: 3px !important;\n}\n.calendar .c-event-list .title:hover{\n    pointer-events: auto !important;\n    cursor: pointer !important;\n}\n#gallery{\n    margin: 50px auto;\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px grey\n}\n#pre_footer{\n    margin: 0 auto -25px;\n    height: 250px;\n}\n#bg_white{\n    background-color: #fff;\n    height: 30px;\n    position: absolute;\n    top: 0;\n    width: 100%;\n}\n#pre_footer #redes_sociales{\n    display: block;\n}\n.footer_wrapper{\n    background: #e6e6e6 none repeat scroll 0 0;\n    border-bottom: 2px outset floralwhite;\n    border-top: 2px inset floralwhite;\n    color: #001f51 !important;\n    padding: 2px;\n    margin-top: 35px;\n}\n#pre_footer .region h2 .icono{\n    display: block;\n    height: 32px;\n    left: -5px;\n    position: absolute;\n    top: -10px;\n    width: 32px;\n}\n.col-rs{\n    width: 35%;\n    font-size: 9px !important;\n    font-family: Helvetica,Arial,sans-serif;\n    text-transform: uppercase;\n    font-weight: normal !important;\n    color: black;\n    float: left;\n    min-height: 1px;\n    margin: 0 7%;\n    position: relative;\n    letter-spacing: 1px;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    height: 250px;\n    background: white;\n\n}\n.col-rs h2{\n    background: lightgrey;\n    border-radius: 5px 5px 0 0;\n    font-size: 18px !important;\n    margin: 0;\n    padding: 5px 0;\n}\n.col-rs .content{\n    box-shadow: 2px 2px 5px black;\n    height: 220px;\n}\nfooter{\n    position: relative;\n    float: left;\n    padding-bottom: 5px;\n    width: 100%;\n    background-color: #001F51;\n    text-align: center;\n    color: #88BAED;\n    font-size: 0.8em;\n    z-index: -5;\n}\nfooter a{\n    padding: 2px 5px;\n    display: inline-block;\n}\nfooter a:hover{\n    text-decoration: underline;\n}\nthead tr th {\n    background: #334C73;\n    min-width: 80px !important;\n    text-align: left;\n    padding: 0 5px;\n    font: 1em solid ;\n    color:white;\n}\ntbody:not(.lista_alumnos) tr td{\n    background: #b1cce7;\n    min-width: 80px !important;\n    /*text-align: left;*/\n    padding: 0 5px;\n}\n\n.horario_alumno_intranet .aula_horario_intranet{\n    font-size: 17px;\n    vertical-align: middle;\n}\n.horario_alumno_intranet #alumno{\n    clear: none;\n    float: left;\n    font-size: 17px;\n    margin-bottom: 5px;\n    margin-top: 15px;\n    width: 100%;\n}\n.horario_alumno_intranet #alumno .label{\n    display: block;\n    float: left;\n    font-weight: bold;\n    height: 26px;\n    margin-left: 30px;\n    margin-right: 7px;\n}\n\nthead{display: table-header-group;}\ntfoot {display: table-row-group;}\ntr {page-break-inside: avoid;}\n\n.cabecera_listado .horario_grupo_pdf  img{\n    height: 30px;\n    vertical-align: middle;\n    width: 30px;\n    float: left;\n}\n#cabecera_listado #logo{\n    float: left;\n    width: 80px !important;\n    height: 80px !important;\n    margin-top: 13px !important;\n}\n#cabecera_listado .titulo{\n    font-size: 1em !important;\n    float:left!important;\n}\n#cabecera_listado #curso{\n    margin-top: 20px !important;\n    font-size: 1.4em !important;\n    float:right!important;\n    margin-right: 10px;\n    text-align: right;\n    width: 300px;\n}\n#cabecera_listado #curso h6{\n    font-weight: normal;\n    margin-bottom: 5px !important;\n    margin-top: -3px;\n}\n#cabecera_listado .subtitulo{\n    margin-top: 5px !important;\n}\n/*Se usa para mostrar diferentes subtitulos en varias páginas (Ej. Lista de alumnos por optativas)*/\n.subtitulo_pdf{\n    color: #e57200;\n    font-size: 1.1em !important;\n    float:right!important;\n    margin-right: 10px;\n    text-align: right;\n    width: 100%;\n    font-weight: bold;\n}\n\n#cabecera_listado #grupo{\n    clear: both;\n    text-align: center;\n}\n\n.lista_pdf tr th:first-child,.lista_pdf tr td:first-child{\n    text-align: center !important;\n    width: 100px !important;\n}\n.lista_pdf tr th:last-child,.lista_pdf tr td:last-child{\n    padding-left: 10px;\n}\n\n.lista_pdf tr th{\n    line-height: 0.9 !important;\n    padding-top: 7px !important;\n    padding-bottom: 7px !important;\n    font-size: 14px !important;\n}\n.lista_pdf tr td{\n    line-height: 0.9 !important;\n    padding-top: 6px !important;\n    padding-bottom: 6px !important;\n    font-size: 13px !important;\n}\n.lista_pdf tr:nth-child(2n+1){\n    background: #eff3f9 !important;\n}\n.lista_pdf tr td, .lista_pdf thead tr{\n    border: 1px solid grey ;\n}\n.lista_pdf tr th{\n    border: none ;\n}\n.lista_pdf tr th:first-child{\n    border-right: 1px solid #ddd !important;\n}\n.c-grid-title {\n    height: 28px !important;\n}\n#recuperarPassword p:first-child{\n    margin: 0 !important;\n    margin-bottom: 35px !important;\n}\n#recuperarPassword p{\n    margin: 15px 0;\n}\n#recuperar{\n    clear: both;\n    margin: 0 auto;\n    display: block;\n\n    width: 100px !important;\n}\n#recuperarPassword .mensaje_error{\n    height: 20px !important;\n    clear: both;\n    display: block;\n}\n#recuperarPassword  #passolvidado{\n    height: 35px;\n}\n#recuperarPassword #dni{\n    padding-left: 9px !important;\n    text-transform: uppercase !important;\n    height: 34px;\n}\n#recuperarPassword #tipo_user{\n    margin: 0 auto;\n    max-width: 196px;\n    text-align: center;\n}\n\n#recuperarPassword #dni_user {\n    max-width: 145px;\n    margin: 0 auto;\n}\n#recuperarPassword .input-group-addon{\n    min-width: 20px !important;\n}\n#container_restPass{\n    border: 1px solid grey;\n    padding: 0;\n    padding-bottom: 5px !important;\n    border-radius: 5px;\n    -moz-box-shadow:  1px 2px 4px black;\n    -webkit-box-shadow: 1px 2px 4px black;\n    box-shadow:  1px 2px 4px black;\n    margin-top: 35px;\n    margin-bottom: 27px;\n}\n#container_restPass .titulo-bloque{\n    border: none;\n    border-bottom: 1px solid grey !important;\n    border-radius: 5px 5px 0 0 !important;\n}\n#restablecerPassword_submit{\n    margin-bottom: 10px;\n    min-width: 100px;\n}\n\n#boletin_evaluacion_pdf #grupo{\n    color: #001f51 !important;\n    text-align: center !important;\n    margin-top: 100px;\n    margin-bottom: 50px;\n    font-weight: bold !important;\n    text-decoration: underline;\n}\n#boletin_evaluacion_pdf span,#boletin_evaluacion_pdf label {\n    color: #001f51 !important;\n    font-size: 15px;\n}\n#boletin_evaluacion_pdf th{\n    color: #001f51 !important;\n    background: #b1cce7;\n    border: 1px solid  grey !important;\n    text-align: center;\n}\n#boletin_evaluacion_pdf td{\n    background: white !important;\n    text-align: center;\n    min-width: 80px !important;\n    padding: 0!important;\n}\n#boletin_evaluacion_pdf td:first-child{\n    background: white !important;\n    text-align: left !important;\n    padding: 8px !important;\n}\n#boletin_evaluacion_pdf td span{\n    display: inline-block;\n    padding: 8px 10px!important;\n    max-width: 52px;\n}\n#boletin_evaluacion_pdf td span:first-child{\n    border-right: 1px solid grey;\n}\n.contenedor_nota {\n    float: left;\n    padding: 8px 0;    \n    width: 49%;\n    margin: 0;\n}\n#boletin_evaluacion_pdf td .contenedor_nota:first-child {\n    border-right: 1px solid grey;\n}\n\n\n#boletin_evaluacion_pdf .table {\n    margin: 3% 5%;\n    width: 90%;\n}\n#boletin_evaluacion_pdf .faltas {\n    width: 55%;\n}\n.div_datos {\n    margin-left: 10% !important;\n    width: 90%!important;\n}\n#boletin_evaluacion_pdf .table #completo td:last-child {\n    background: lightgrey !important;\n}\n.saluda_tutor{\n    margin-top: 80px;\n}\n.footer_boletin label,.footer_boletin span {\n    margin-left: 10% !important;\n}\n.footer_boletin{\n    float: left;\n    width: 50%; \n}\n.footer_boletin .horario p {\n    margin-left: 50px !important;\n}\n.saluda_tutor label {\n    width: 15% !important;\n    float: left;\n}\n.saluda_tutor p {\n    float: left !important;\n    margin-left: 0 !important;\n    width: 60% !important;\n}\n#boletin_evaluacion_pdf .horarios{\n    margin-top: 100px;\n}\n\n@media (max-width: 1100px){\n    .carrusel{\n        clear: both;\n        position: relative;\n        float: left;\n\n        margin-top: 80px;\n    }\n        #logotipo{\n        left: 70%;\n        top: 30px;\n    }\n        #logo{\n             width: 80%;\n            height: 80%;\n    }\n        .main{\n        margin-top: 250px;\n    }\n    .barra_menu{\n    padding-top: 0;\n    }\n  \n}\n@media (max-width: 820px){\n\n\n\n}\n@media (max-width: 650px){\n\n    #logotipo{\n        left: 70%;\n        top: 40px;\n    }\n    #logo{\n             width: 60%;\n            height: 60%;\n    }\n    .titulo{\n            font-size: 1.1em;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			"file": "src/Cole/ColeBundle/Resources/public/css/estilo.css",
			"file_size": 29328,
			"file_write_time": 1500578344000000,
			"settings":
			{
				"buffer_size": 29315,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/public/js/load.js",
			"settings":
			{
				"buffer_size": 9683,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/public/js/e-calendar-master/js/jquery.e-calendar.js",
			"settings":
			{
				"buffer_size": 11854,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/DefaultController.php",
			"settings":
			{
				"buffer_size": 25657,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "src/Cole/BackendBundle/Resources/views/Log/listalog.html.twig",
			"file_size": 255,
			"file_write_time": 1499038192000000,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing.yml",
			"settings":
			{
				"buffer_size": 2784,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/tutorias.yml",
			"settings":
			{
				"buffer_size": 1355,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/seguimiento.yml",
			"settings":
			{
				"buffer_size": 2866,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/alumnos.yml",
			"settings":
			{
				"buffer_size": 3675,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/profesores.yml",
			"settings":
			{
				"buffer_size": 7355,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/index.html.twig",
			"settings":
			{
				"buffer_size": 6136,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/index.html.twig",
			"settings":
			{
				"buffer_size": 17126,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/curso.html.twig",
			"settings":
			{
				"buffer_size": 18558,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/asistencia.html.twig",
			"settings":
			{
				"buffer_size": 5805,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/calificaciones.html.twig",
			"settings":
			{
				"buffer_size": 6389,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/calificacionesTareas.html.twig",
			"settings":
			{
				"buffer_size": 440,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/cursos.html.twig",
			"settings":
			{
				"buffer_size": 15751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/datos_alumnos_grupo.html.twig",
			"settings":
			{
				"buffer_size": 20632,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/noticias.html.twig",
			"settings":
			{
				"buffer_size": 9487,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/noticias.html.twig",
			"settings":
			{
				"buffer_size": 8973,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/noticia.html.twig",
			"settings":
			{
				"buffer_size": 2104,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/noticia.html.twig",
			"settings":
			{
				"buffer_size": 2092,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/lista_alumnos_grupo.html.twig",
			"settings":
			{
				"buffer_size": 1965,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/lista_alumnos_optativas.html.twig",
			"settings":
			{
				"buffer_size": 2095,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/datos_horarios.html.twig",
			"settings":
			{
				"buffer_size": 3808,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/datos_horario.html.twig",
			"settings":
			{
				"buffer_size": 3080,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/datos_horario_grupo.html.twig",
			"settings":
			{
				"buffer_size": 4309,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/horario_de_clase.html.twig",
			"settings":
			{
				"buffer_size": 6757,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/header.html.twig",
			"settings":
			{
				"buffer_size": 1802,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Default/header_boletin.html.twig",
			"settings":
			{
				"buffer_size": 1727,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/SeguimientoController.php",
			"settings":
			{
				"buffer_size": 24789,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Curso/ratio.html.twig",
			"settings":
			{
				"buffer_size": 12511,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/ReservaController.php",
			"settings":
			{
				"buffer_size": 15426,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Form/ReservaType.php",
			"settings":
			{
				"buffer_size": 2236,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing/reserva.yml",
			"settings":
			{
				"buffer_size": 1633,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/tutorias.html.twig",
			"settings":
			{
				"buffer_size": 29993,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/tutorias.html.twig",
			"settings":
			{
				"buffer_size": 33600,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Tutorias/new.html.twig",
			"settings":
			{
				"buffer_size": 7550,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Form/TutoriasType.php",
			"settings":
			{
				"buffer_size": 3327,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Form/ConfirmacionType.php",
			"settings":
			{
				"buffer_size": 1094,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/TutoriasController.php",
			"settings":
			{
				"buffer_size": 15318,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/TareaController.php",
			"settings":
			{
				"buffer_size": 27742,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/alumnos_grupo_asignatura.html.twig",
			"settings":
			{
				"buffer_size": 1083,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Form/CursaType.php",
			"settings":
			{
				"buffer_size": 968,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Controller/CursaController.php",
			"settings":
			{
				"buffer_size": 6066,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/cursa.yml",
			"settings":
			{
				"buffer_size": 789,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/tarea.yml",
			"settings":
			{
				"buffer_size": 1603,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Reserva/index.html.twig",
			"settings":
			{
				"buffer_size": 10386,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing/horario.yml",
			"settings":
			{
				"buffer_size": 1705,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/config/routing/ausencia.yml",
			"settings":
			{
				"buffer_size": 1021,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/public/css/backend.css",
			"settings":
			{
				"buffer_size": 171871,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/views/Noticias/index.html.twig",
			"settings":
			{
				"buffer_size": 6744,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "$(document).ready(function () {\n  $('.dni').mask('A0000000-S',\n  {'translation': {A: {pattern: /[X-Zx-z]|[0-9]/}},\n     placeholder: \"________-__\"});\n  $('.telefono').mask('000 00 00 00'); \n  $('.fecha').mask('00/00/0000', {placeholder: \"__/__/____\"});\n  $('.dni').css( \"text-transform\", \"uppercase\");\n\n  $(\"input[id^='año_acamedico']\").mask('0000');\n  $(\"input[id^='año_profesional']\").mask('00');\n  $(\"input[id^='edit_año_acamedico']\").mask('0000');\n  $(\"input[id^='edit_año_profesional']\").mask('00');\n  $(\"input[type='time']\").mask('00:00', {placeholder: \"__:__\"});  \n  $(\"#registro_ratio input\").mask('00');\n\n  //Se evita arrastar los enlaces del menú.\n  $( \".barra_menu a, .barra_menu li\" ).attr(\"onmousedown\",\"return false;\");\n\n  //Se establece el color del botón de confirmación de las notificaciones para usar con swal().\n  color=\"#5A88B6\";\n  color_rojo=\"#DE5757\";\n  // Se establece el estilo para pNotify\n  //PNotify.prototype.options.styling = \"jqueryui\";\n\n  // Se establece la pila de los avisos de PNotify\n  var right_Stack = {\"dir1\": \"up\", \"dir2\": \"left\", \"context\": $(\".contenido_main\"), \"push\": \"top\", \"firstpos1\": 20, \"firstpos2\":20};\n  var left_Stack = {\"dir1\": \"up\", \"dir2\": \"right\", \"context\": $(\".contenido_main\"), \"push\": \"top\",\"firstpos1\": 20, \"firstpos2\":20};\n  var left_Stack_dialog = {\"dir1\": \"up\", \"dir2\": \"right\", \"context\": $(\"body\"), \"push\": \"top\",\"firstpos1\": 20, \"firstpos2\":30};\n  var right_Stack_dialog = {\"dir1\": \"up\", \"dir2\": \"left\", \"context\": $(\"body\"), \"push\": \"top\", \"firstpos1\": 20, \"firstpos2\":40};\n\n  // Se establece las variables con los audios para las notificaciones.\n  if (navigator.userAgent.search(\"Firefox\") >= 0) { //Firefox solo admite archivos .ogg\n    var aviso = new Audio();\n    aviso.src = \"/Symfony/web/bundles/backend/sounds/aviso.ogg\";\n    var ok = new Audio();\n    ok.src = \"/Symfony/web/bundles/backend/sounds/ok.ogg\"\n    var exito = new Audio();\n    exito.src = \"/Symfony/web/bundles/backend/sounds/exito.ogg\";\n    var error = new Audio();\n    error.src = \"/Symfony/web/bundles/backend/sounds/error.ogg\";\n    var errorPNotify = new Audio();\n    errorPNotify.src = \"/Symfony/web/bundles/backend/sounds/errorPNotify.ogg\";\n    var blocker = new Audio();\n    blocker.src = \"/Symfony/web/bundles/backend/sounds/blocker.ogg\";   \n  }\n  else{\n    var aviso = new Audio();\n    aviso.src = \"/Symfony/web/bundles/backend/sounds/aviso.mp3\";\n    var ok = new Audio();\n    ok.src = \"/Symfony/web/bundles/backend/sounds/ok.mp3\"\n    var exito = new Audio();\n    exito.src = \"/Symfony/web/bundles/backend/sounds/exito.mp3\";\n    var error = new Audio();\n    error.src = \"/Symfony/web/bundles/backend/sounds/error.mp3\";\n    var errorPNotify = new Audio();\n    errorPNotify.src = \"/Symfony/web/bundles/backend/sounds/errorPNotify.mp3\";\n    var blocker = new Audio();\n    blocker.src = \"/Symfony/web/bundles/backend/sounds/blocker.mp3\";\n  }\n\n  // Se convierte los caracteres con acentos a los mismos sin acentos en la busqueda de DataTable().\n  jQuery.fn.DataTable.ext.type.search.string = function ( data ) {\n    return ! data ?\n        '' :\n        typeof data === 'string' ?\n            data\n                .replace( /έ/g, 'ε' )\n                .replace( /[ύϋΰ]/g, 'υ' )\n                .replace( /ό/g, 'ο' )\n                .replace( /ώ/g, 'ω' )\n                .replace( /ά/g, 'α' )\n                .replace( /[ίϊΐ]/g, 'ι' )\n                .replace( /ή/g, 'η' )\n                .replace( /\\n/g, ' ' )\n                .replace( /á/g, 'a' )\n                .replace( /é/g, 'e' )\n                .replace( /í/g, 'i' )\n                .replace( /ó/g, 'o' )\n                .replace( /ú/g, 'u' )\n                .replace( /ê/g, 'e' )\n                .replace( /î/g, 'i' )\n                .replace( /ô/g, 'o' )\n                .replace( /è/g, 'e' )\n                .replace( /ï/g, 'i' )\n                .replace( /ü/g, 'u' )\n                .replace( /ã/g, 'a' )\n                .replace( /õ/g, 'o' )\n                .replace( /ç/g, 'c' )\n                .replace( /ì/g, 'i' ) :\n            data;\n  };\n\n  //Para el caso de que las celdas de las tablas contengan elemento html que contenga texto a buscar.\n  // Se configurar un tipo de columna personalizado para quitar etiquetas html y normalizar los caracteres para la búsqueda\n  $.fn.dataTableExt.ofnSearch['html-string'] = function(sData) {\n  // Etiquetas de tira html (you will need to test this regex for your needs. Source from http://stackoverflow.com/a/25885923/1544886)\n    sData = sData.replace(/(&nbsp;|<([^>]+)>)/ig, \"\");\n  // Aplicar carácter normalizador a este tipo de columna\n    return jQuery.fn.DataTable.ext.type.search.string(sData);\n  }\n\n\n  /////////////////////////////\n  // Métodos para validación //\n  /////////////////////////////\n  function validateEmpty(field) {\n    if ($(field).val() == null) {\n      return false;\n    }\n    if ($(field).val().trim().length == 0) {  \n      $(field).prev().append(\"<span class='error'>Dato Requerido</span>\");\n      return false;\n    }\n      return true;\n  }\n\n  function validateEmpty_(field) {\n    if ($(field).val() == null) {\n      return false;\n    }\n    if ($(field).val().trim().length == 0) {  \n      $(field).prev().append(\"<span class='error'>Dato Requerido</span>\");\n      return false;\n    }\n      return true;\n  }\n  \n\n  function validateWords(field) {\n    if(!$(field).val()){\n      return true;\n    }\n    var filter = /^[A-Za-záéíóúÁÉÍÓÚüÜñÑ]{2,}([\\s][A-Za-záéíóúÁÉÍÓÚüÜñÑ.\\(\\)]+)*$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateLetters(field) {\n    if(!$(field).val()){\n      return true;\n    }\n    var filter = /^[^0-9]{2,}$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n    function validateLetterInitial(field) {\n    if(!$(field).val()){\n      return true;\n    }\n    var filter = /^[A-Za-záéíóúÁÉÍÓÚüÜñÑ]/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateNumbers(field) {\n    if(!$(field).val()){\n      return true;\n    }\n    var filter = /^[0-9]+$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateLength(field) {\n    if(!$(field).val()){\n        return true;\n    }\n    min =  $(field).attr(\"lengthmin\");\n    max =  $(field).attr(\"maxlength\");\n\n    if ($(field).val().length==max || $(field).val().length==min ) {\n      return true;\n    }\n    else{\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false;\n    }\n  }\n\n\n  function validateDni(field) {\n    var filter = /(^([X-Zx-z]{1})([0-9]{7})([-]?)([A-Za-z]{1})$)|((^[0-9]{8})[-]?([A-Za-z]{1}$))/;\n\n    var numero;\n    var letr;\n    var letra;\n    var expresion_regular_dni;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false;\n    }\n    //Se comprueba que la letra del NIF sea la correcta.\n    else{\n      /*  Hay que descomentar ésto para que compruebe la letra del DNI (cuando acabemos)!!!!!!!!!!!!!!!!\nut\n      //Se le quita el separador para pasar el dni.\n      dni=$(field).val().replace(\"-\",\"\");\n\n      numero = dni.substr(0,dni.length-1);\n      letr = dni.substr(dni.length-1,1);\n      numero = numero % 23;\n      //Se crea una string con las letras del abecedario ( sin la ñ) en ese orden.\n      letra='TRWAGMYFPDXBNJZSQVHLCKET';\n      //Se coge un substring de un solo caracter de esa cadena de letras que empiece en la posición marcada \n      // por el número que conseguimos al hacer la operación de módulo anterior.\n      letra=letra.substring(numero,numero+1);\n      if (letra!=letr.toUpperCase()) {\n        $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n        return false;\n      }else{\n        return true;\n      }\n\n      Hay que borrar el return siguiente cuando al descomentar esto*/  \n        return true;\n\n    }\n  }\n\n  function validateFecha(field) {\n    var filter = /^(0[1-9]|[12][0-9]|3[01])[\\/](0[1-9]|1[012])[\\/](19|20|21)[0-9]{2,}$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n  \n  var actual= new Date();\n\n  function validateFecha_Adulto(field) {\n    fecha=$(field).val().split('/');\n    if(fecha[2]<(actual.getFullYear()-80) || fecha[2]>(actual.getFullYear()-18)){\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateFecha_Niño(field) {\n    fecha=$(field).val().split('/');\n    if(fecha[2]<(actual.getFullYear()-18) || fecha[2]>(actual.getFullYear()-2)){\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateAño(field) {\n    if(!$(field).val()){\n      return true;\n    }\n    if($(field).val()<(actual.getFullYear()-60) || $(field).val()>(actual.getFullYear())){\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n  function validateCP(field) {\n    var filter = /^([1-9]{2}|[0-9][1-9]|[1-9][0-9])[0-9]{3}$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n  \n  function validateTelefono(field) {\n    if(!$(field).val()){\n        return true;\n    }\n    var filter = /^\\d{3}([- .]?\\d{2}){3}$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateEmail(field) {\n    if(!$(field).val()){\n        return true;\n    }\n    var filter = /^[_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,3})$/;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n  function validateWeb(field) {\n    if(!$(field).val()){\n        return true;\n    }\n    var filter = /^(www|http:\\/\\/)(.*\\.(com$|es$|net$|org$))$/ ;\n    if (!filter.test($(field).val())) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateEqual(field) {\n    if(!$(field).val()){\n        return true;\n    }\n    if (($(field).attr(\"id\")==\"alumno_responsable2_dni\" && $(field).val()==$(\"#alumno_responsable1_dni\").val()) ||\n         $(field).attr(\"id\")==\"alumno_responsable1_dni\" && $(field).val()==$(\"#alumno_responsable2_dni\").val()) {\n      $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n      return false\n    }\n    else{\n      return true;\n    }\n  }\n\n  function validateMaxSize(field) {\n    if (($(field))[0].files.length > 0) {\n      var sizeByte = ($(field))[0].files[0].size;\n      var siezekiloByte = parseInt(sizeByte / 1024);\n    }\n    if(!$(field).val()){\n        return true;\n    }\n    if(siezekiloByte > $(field).attr('size')){\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  /*\n\n  if (($(field))[0].files.length > 0) {\n\n      var sizeByte = ($(field))[0].files[0].size;\n      var siezekiloByte = parseInt(sizeByte / 1024);\n             alert(siezekiloByte);\n      if(siezekiloByte > $(field).attr('size')){\n\n        $(field).prev().append(\"<span class='error'>Dato inválido</span>\");\n        return false\n      }\n      else{\n        return true;\n      }\n    }\n    else{\n      return true;\n    }  \n  */\n\n  function validateMimeTypes(field) {\n\n    extensiones_permitidas = $(field).attr('mimeTypes').split(\",\");\n    extension = ($(field).val().substring($(field).val().lastIndexOf(\".\"))).toLowerCase();\n    // Se comprueba si la extensión está entre las permitidas.\n    permitida = false;\n    for (var i = 0; i < extensiones_permitidas.length; i++) {\n      if (extensiones_permitidas[i] == extension) {\n        permitida = true;\n        break;\n      }\n    } \n    if(!$(field).val()){\n        return true;\n    }\n    if(permitida){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  var message = {\n    \"Empty\":\"Este campo no puede estar vacío.\",\n    \"Words\":\"Contiene caracteres inválidos o insuficientes.\",\n    \"Letters\":\"Este campo no puede contener números.\",\n    \"LetterInitial\":\"Este campo debe empezar con una letra\",\n    \"Numbers\":\"Este campo solo puede contener números\",\n    \"Length\":\"La longitud del campo es incorrecta.\",\n    \"Dni\":\"No es un DNI o NIE válido.\",\n    \"Fecha\":\"No es una fecha válida.<br> Formato válido: 31/12/2000\",\n    \"Fecha_Adulto\":\"No es una fecha válida.<br> Introduzca un año del \"+ (actual.getFullYear()-80) + \" al \"+(actual.getFullYear()-18)+\".\",\n    \"Fecha_Niño\":\"No es una fecha válida.<br> Introduzca un año del \"+ (actual.getFullYear()-18) + \" al \"+(actual.getFullYear()-2)+\".\",\n    \"Año\":\"No es un año válido.<br> Introduzca un año del \"+ (actual.getFullYear()-60) + \" al \"+(actual.getFullYear())+\".\",\n    \"CP\":\"No es un código postal válido.\",\n    \"Telefono\":\"No es un número de teléfono válido.\",\n    \"Email\":\"No es un email válido.\",\n    \"Web\":\"No es una direccion web válida.\",\n    \"Equal\":\"Ya existe este representante del alumno.\",\n    \"MaxSize\":\"El tamaño supera el limite permitido.\",\n    \"MimeTypes\":\"No es un archivo válido.\",\n  };\n\n    function validation(field) {\n \n    $(field).prev().find(\".error\").remove();\n    $(field).next(\".mensaje\").remove();\n\n    var values = $(field).attr('validation').split(\",\");\n    for (var i=0; i<values.length; i++) {\n      validate = 'validate' + values[i].trim()+'('+$(field).attr(\"id\")+')';\n      isValid=eval(validate);\n       \n      if (isValid) {\n        $(field).removeClass(\"invalid\");\n        $(field).attr(\"validated\", true);\n        //Se comprueba si hay algún error para habilitar/deshabilitar el botón (submit).\n        if($(field).closest(\"form[id$='_edit']\").size()==0){\n          if($(field).closest(\"form\").find(\":input[class='invalid']\").size()>0){\n            $(field).closest(\"form\").find(\"button[id$='_submit']\").prop(\"disabled\",true);\n          }\n          else{\n            $(field).closest(\"form\").find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          }\n        }\n        else{\n\n          if($(field).closest(\"form\").find(\":input[class='invalid']\").size()==0 && $(field).closest(\"form\").find(\":input[class='modified']\").size()>0){\n            $(field).closest(\"form\").find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          }\n          else{\n            $(field).closest(\"form\").find(\"button[id$='_submit']\").prop(\"disabled\",true);\n          }\n        }\n      } \n      else {\n        $(field).addClass(\"invalid\");   \n        $(field).attr(\"validated\", false);\n        if(values[i].trim()!=\"Empty_\"){\n          $(field).after(\"<span class='mensaje'>\"+message[values[i].trim()]+\"</span>\");\n        }\n        $(field).focus();\n        //Se deshabilita el botón (submit).\n        $(field).closest(\"form\").find(\"button[id$='_submit']\").prop(\"disabled\",true);\n      \n        return false;\n      }\n    }\n  }\n\n    function limpiarForm(form) {\n    form.each (function(){ \n      this.reset();\n    });\n    form.find(\"input[type='radio']\").prop(\"checked\", true);\n\n    form.find(\":input\").prev().find(\".error\").remove();\n    form.find(\":input\").next(\".mensaje\").remove();\n    form.find(\":input\").removeClass(\"invalid\");\n    form.find(\"input[validated='true']\").attr(\"validated\", \"\");\n    form.find(\"#leyenda p\").empty();\n    form.find(\"input[id$='sexo_0']\").prop(\"checked\", true);\n\n\n    if(form.attr(\"id\")==\"alumno_nuevo\"){\n      $(\"#foto_no\").prop(\"checked\", true);\n      $(\"#alumno_foto\").prop(\"disabled\", true);  \n      $(\"#alumno_responsable2_dni\").keyup();\n    }\n\n    if(form.attr(\"id\").indexOf(\"busqueda_\") >= 0){\n      form.find(\"#contenedor_lista div[id^='lista_']\").empty();\n    }\n\n    if(form.attr(\"id\").indexOf(\"padres_nuevo\") >= 0){\n      form.find(\"input:first\").focus();\n    }\n\n    // Si contiene pestañas se activa la primera pestaña.\n    if($(\"div[id='tab-container']\").length )\n      {\n        mostrarTab(form,\"tab1\");\n      }\n  }\n\n  // Función para limpiar los campos del formulario.\n  $(document).on(\"click\",\".limpiar\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    limpiarForm(form);\n  });\n\n  // Función para mostrar una pestaña de un formulario dado el formulario y el id del tab.\n  function mostrarTab(form, tab) {\n    $(\"form #content-form-menu\").find(\"[id^='tab']\").hide(); //Oculta todo el contenido\n    $(\"form #tab-container li\").attr(\"class\",\"\"); //Resetea el valor de los id\n    $(\"form li a[name=\"+tab+\"]\").parent().attr(\"class\",\"selected\"); //Activa la españa actual\n    $(\"form #content-form-menu #\"+ tab).css(\"display\",\"inline\"); //Muestra el contenido de la pestaña actual\n    $(\"form #\" +tab+\" input:first\").focus();\n  }\n\n  //Se valida en línea los campos de los formularios al salir de ellos.\n  $(document).on('blur','form :input[type!=file]' ,function() {\n    if ($(this).attr('validation')) {    \n      validation($(this));\n    }\n  });\n\n  // Se valida en línea los campos de los formularios con errores para no tener que esperar en abandonar el campo.\n  $(document).on('keyup','form :input[type!=file][class*=\"invalid\"]' ,function() {\n    if ($(this).attr('validation')) {    \n      validation($(this));\n    }\n  });\n\nsetInterval(function(){\n    // Se añade un índice de tabuláción a todos los input.\n  $(\"form\").find(\":input[class!='readonly']\").each(function(i){\n    $(this).attr(\"tabindex\",i+1);\n  });\n}, 500);\n\n\nsetInterval(function(){\n    // Se añade un índice de tabuláción a todos los input.\n  $(\"#tabs #asignar_aula\").find(\":input\").each(function(i){\n    $(this).attr(\"tabindex\",i+1);\n  });\n}, 500);\n\n\n  // Se muestra y se oculta el mensaje de error en los campos del formulario.\n  $(document).on(\"mouseover\",\"form :input\", function () {\n      if($(this).next().prop(\"tagName\")==\"SPAN\"){\n        $(this).next().css(\"display\", \"block\");\n      }\n    });\n  $(document).on(\"mouseout\",\"form :input[type!=radio]\", function () {\n      if($(this).next().prop(\"tagName\")==\"SPAN\"){\n        $(this).next().css(\"display\", \"none\");\n      }\n    });\n\n  // Para no ocultar el button\n  $(document).on(\"mouseover\",\"form :button\", function () {\n    $(this).next().css(\"display\", \"block\");\n    }\n  );\n\n  // Se obliga a guardar en mayuscula la letra del Dni con el guión de separación de la máscara del campo.\n  $(document).on('blur','form .dni' ,function() {\n    $(this).val($(this).val().toUpperCase());\n  });\n\n\n\n  //Efecto para cambiar de pestañas de opciones en el formulario.\n  $(document).on(\"click\",'#tab-container a',function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    if ($(this).closest(\"li\").attr(\"class\") == \"selected\"){ //Se detecta la pestaña actual.\n      //Se elimina el foco del elemento.\n      $(this).blur();\n      return;       \n    }\n    else{            \n      form.find(\"#content-form-menu div[id^='tab']\").hide(); // Se oculta todo el contenido.\n      form.find(\"#tab-container li\").attr(\"class\",\"\"); // Se resetea el valor de los id.\n      $(this).parent().attr(\"class\",\"selected\"); // Se activa la españa actual.\n      form.find('#content-form-menu #'+ $(this).attr('name')).css(\"display\",\"inline\"); // Se muestra el contenido de la pestaña actual.\n      //$('#' + $(this).attr('name')).fadeIn(); \n      //$(\"#\"+$(this).attr(\"name\")+\" input:first\").focus();  Se selecciona el primer campo de la pestaña actual.\n    }\n    //Se elimina el foco del elemento.\n    $(this).blur();\n  });\n\n\n  $(document).on(\"keydown\",'#tab-container a', function(e){\n\n    tab=$(this).attr(\"name\");\n    if(e.keyCode == 9 || (e.keyCode == 13 ))\n    {\n      va=$(\"#\"+tab).find(\":input\").attr(\"id\");\n      $(\"#\"+va).focus()\n    }\n    e.preventDefault();\n  });\n\n  // Transforma el texto con capitalize para guardarlo en la base de datos.\n  $(document).on(\"keyup\",'input:not([class*=\"text_transform_none\"])', function(){\n    var txt = $(this).val();\n    $(this).val(txt.replace(/^(.)/g, function($1){ return $1.toUpperCase(); }));\n    $(this).css(\"text-transform\", \"none\");\n      if($(this).val().length==0 && !$(this).attr('placeholder')){\n        $(this).css(\"text-transform\", \"capitalize\");\n      }\n      else if($(this).val().length==2){\n        $(this).css(\"text-transform\", \"capitalize\");\n      }\n  });\n\n  // Al presionar cualquier tecla en cualquier elemento del formulario se ejectua la siguiente función\n  // Función para desplazarse mediante teclado por los campos.\n  $(document).on(\"keydown\",':input', function(e){\n    // Solo importa si las teclas presionadas fueron TAB o ENTER. (Para ver el código de otras teclas: http://www.webonweboff.com/tips/js/event_key_codes.aspx)\n    // Y que no sean botones o textarea.\n    if(e.keyCode == 9 || (e.keyCode == 13 && (!($(this).is(\"textarea\")) && !($(this).is(\"button\"))&& ($(this).attr(\"type\")!=(\"file\")) )))\n    {\n      // Se obtiene el número del tabindex del campo actual.\n      var currentTabIndex = $(this).attr('tabindex');\n      // Se le suma 1 para tener el siguiente.\n      var nextTabIndex    = parseInt(currentTabIndex) + 1;\n      // Se obtiene (si existe) el siguiente elemento usando la variable nextTabIndex\n      // Se comprueba si estan en una ventana modal o no, para obtenerlo según el div que los contiene.\n      if($(this).closest(\"div[class^='ui-dialog']\").attr(\"class\")!=undefined){ //:not(:button)  \n        var nextField= $(this).closest(\"div[class^='ui-dialog']\").find(':input[tabindex='+nextTabIndex+']');\n      }\n      else{\n        var nextField= $(this).closest(\"div[id^='tabs-']\").find(':input[tabindex='+nextTabIndex+']');\n      }\n\n      // Se salta los elementos no activos.\n      while(nextField.attr(\"disabled\")==\"disabled\")\n      {\n      var nextTabIndex= parseInt(nextTabIndex) + 1;\n      var nextField= $('[tabindex='+nextTabIndex+']');\n      }\n      // Comprobar si se encontró el elemento.\n      if(nextField.length > 0 && nextField.attr(\"type\")!=\"hidden\")\n      {\n        // Se marca la primera opción del radio de la foto al pasar a ese campo.\n        if( $(this).attr(\"type\")!=\"radio\" && nextField.attr(\"type\")==\"radio\")\n        {\n          if(!nextField.prop('checked')&& !nextField.nextAll(\"input\").prop('checked')){\n            nextField.prop('checked', true);\n          }\n          else if(nextField.prop('checked')){\n            nextField.focus();\n            return false;\n          }\n          else{\n            nextField.nextAll(\"input\").focus();\n            return false;\n          }\n        }\n        // Comprobar que se pasa al segundo radio de la foto.\n        if( $(this).attr(\"type\")==\"radio\" && nextField.attr(\"type\")==\"radio\")\n        { \n          // Se pasa al siguiente campo si no se sube foto sumando 2 al Tabindex.\n          if(nextField.nextAll(\"input\").attr(\"type\")==\"file\")\n          {\n            nextTabIndex++;      \n          }\n          // Se salta al campo file si está habilitado sumando 1 al Tabindex.\n          nextTabIndex++;            \n          nextField= $(this).closest(\"div[id^='tabs-']\").find(':input[tabindex='+nextTabIndex+']');\n        }\n        // Se salta al campo file si está habilitado sumando 1 al Tabindex.\n        if(nextField.attr(\"id\")==\"editar_responsable2_modal\" && nextField.closest(\"div[id='responsable']\").hasClass(\"block-one oculto\") ){\n          nextTabIndex+=9;\n          nextField= $(this).closest(\"div[id^='tabs-']\").find(':input[tabindex='+nextTabIndex+']');\n        }\n        // Se salta al campo file si está habilitado sumando 1 al Tabindex.\n        if(nextField.attr(\"id\")==\"editar_responsable2_modal\" && nextField.closest(\"div[id='noresponsable']\").hasClass(\"block-one oculto\") ){\n          nextTabIndex++;\n          nextField= $(this).closest(\"div[id^='tabs-']\").find(':input[tabindex='+nextTabIndex+']');\n        }\n\n        if($(this).attr(\"id\")==$(this).closest(\"form\").find(\"div[id='botones_form'] div:last button\").attr(\"id\")){\n          nextField=$(this).closest(\"form\").find(\"div[id='botones_form'] div:first button\");\n        }\n        // Se muestra el tab que contiene el siguiente campo si es diferente al actual.\n        tab= $(this).closest(\"div[id^='tab']\").attr(\"id\");\n        next_tab=nextField.closest(\"div[id^='tab']\").attr(\"id\");\n        if(tab!=next_tab && nextField.attr(\"type\")!=\"submit\")\n        {\n          mostrarTab($(this).closest(\"form\"),next_tab);\n        }\n        // Se selecciona el siguiente campo.\n        nextField.focus();\n      }\n      else{\n        nextField=$(this).closest(\"form\").find(\"div[id='botones_form'] div:first button\");  \n        nextField.focus();    \n      }\n       // Ignorar el funcionamiento predeterminado (enviar el formulario)\n      e.preventDefault();\n    }\n  });\n\n\n\n//////////////////////////////////\n//   Formularios de Creacción   //\n//////////////////////////////////\n\n// Marcamos el input DNi cuando se modifique para lanzar comprobar_padre.\n$(document).on('change',\"input[id$='_dni']\",function(event){\n  $(this).attr(\"edit\",\"true\");\n});\n\n$(document).on(\"blur\",\"input[id$='responsable1_dni']\",function() {\n    form= $(this).closest(\"form\");\n    // Se evita repetirlo al hacer submit con la clase \"class\" que se ha añadido en el submit.\n    // Se comprueba si se ha modificado el input DNI para comprobar si existe. \n    if(!($(this).find(\"div[id$='alumno_submit']\").attr('class')) && $(this).attr(\"edit\")==\"true\")\n    {\n      var dni = $(this).val();\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('comprobar_padre'),\n        data: {dni:dni},\n        dataType: 'json',\n        success: function(response) {\n         if((!($(this).find(\"#tab2\").length) || ($(\"#tab2\").attr(\"style\")==\"display: inline;\"))&& response.success==true )\n         {\n           /*setTimeout(function() {\n              $(\".confirm\").focus();\n            }, 300);       Modal dialog does not focus correctly when show option is set*/\n          aviso.play();\n          swal({\n            title: \"Responsable registrado en el sistema\",\n            html: \"El DNI introducido pertenece al responsable: <br><br><h3>\"+response.name+\"</h3><br>¿Desea obtener sus datos?\",\n            type: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonColor: color,\n            confirmButtonText: \"¡Adelante!\",\n            }).then(function () {\n              $.ajax({\n                type: 'POST',\n                url: Routing.generate('obtenerdatos_responsable'),\n                data: {dni:dni},\n                dataType: 'json',\n                success: function(response) {   \n                form.find(\"input[id$='responsable1_nombre']\").focus().val(response.data['nombre']).prop('readonly', true);\n                form.find(\"input[id$='responsable1_fechaNacimiento']\").focus().val(response.data['fechaNacimiento']).prop('readonly', true);\n                form.find(\"input[id$='responsable1_profesion']\").focus().val(response.data['profesion']).prop('readonly', true);\n                form.find(\"input[id$='responsable1_estadoCivil']\").focus().val(response.data['estadoCivil']).prop('readonly', true);\n                form.find(\"input[id$='responsable1_movil']\").focus().val(response.data['movil']).prop('readonly', true);\n                form.find(\"input[id$='responsable1_email']\").focus().val(response.data['email']).prop('readonly', true);\n                form.find(\"input[id$='responsable2_dni']\").focus();\n                }\n              })\n            }, function (dismiss) {\n\n              if(form.find(\"input[id$='responsable1_nombre']\").val()==''){\n                form.find(\"input[id$='responsable1_nombre']\").removeClass(\"invalid\");\n                form.find(\"input[id$='responsable1_nombre']\").prev().find(\".error\").remove();\n                form.find(\"input[id$='responsable1_nombre']\").next(\".mensaje\").remove();         \n              }\n              form.find(\"input[id$='responsable1_dni']\").focus();\n              form.find(\"input[id$='responsable1_dni']\").val('');\n              form.find(\"input[id$='responsable1_dni']\").keyup();\n            }\n          );\n         }   \n        } \n      })\n      $(this).attr(\"edit\",false);\n    }\n  });\n\n$(document).on('keyup',\"input[id$='responsable1_dni']\",function(e){\n  form= $(this).closest(\"form\");\n    if($(this).val().trim().length == 0){\n        form.find(\"input[id*='responsable1']\").each(function(){\n          $(this).val(\"\");\n          $(this).prev().find(\".error\").remove();\n          $(this).next(\".mensaje\").remove();\n          $(this).removeClass(\"invalid\");\n          $(this).attr(\"validated\", false);\n          $(this).prop(\"readonly\", false);\n        });      \n        form.find(\"input[id$='responsable1_estadoCivil']\").prop(\"readonly\", false);  \n        form.find(\"input[id$='responsable1_dni']\").prop(\"disabled\", false);\n    }\n    if(($(this).val().trim().length == 10)){\n      form.find(\"input[id*='responsable1']\").each(function(){\n        $(this).attr(\"validated\", \"\");\n        $(this).prop(\"disabled\", false);\n      });\n    }\n    if(($(this).val().trim().length < 10) && form.find(\"input[id$='responsable1_nombre']\").attr(\"readonly\")=='readonly'){\n        var dni=form.find(\"input[id$='responsable1_dni']\").val();\n        form.find(\"input[id*='responsable1']\").each(function(){\n          $(this).val(\"\");\n          $(this).prev().find(\".error\").remove();\n          $(this).next(\".mensaje\").remove();\n          $(this).removeClass(\"invalid\");\n          $(this).attr(\"validated\", false);\n          $(this).prop(\"readonly\", false);\n        });   \n        form.find(\"input[id$='responsable1_dni']\").val(dni);   \n        form.find(\"input[id$='responsable1_estadoCivil']\").prop(\"readonly\", false);  \n        form.find(\"input[id$='responsable1_dni']\").prop(\"disabled\", false);\n    }\n  });\n\n\n$(document).on('keyup',\"input[id$='responsable2_dni']\",function(e){\n  form= $(this).closest(\"form\");\n\n    if($(this).val().trim().length == 0){\n        form.find(\"input[id^='alumno_responsable2_']\").each(function(){\n          $(this).val(\"\");\n          $(this).prev().find(\".error\").remove();\n          $(this).next(\".mensaje\").remove();\n          $(this).removeClass(\"invalid\");\n          $(this).attr(\"validated\", true);\n          $(this).prop(\"disabled\", true);\n        });      \n        form.find(\":input[id$='responsable2_estadoCivil']\").prop(\"disabled\", true);  \n        form.find(\"input[id$='responsable2_dni']\").prop(\"disabled\", false);\n    }\n    if(($(this).val().trim().length == 10)){\n      form.find(\":input[id^='alumno_responsable2_']\").each(function(){\n        $(this).attr(\"validated\", \"\");\n        $(this).prop(\"disabled\", false);\n      });\n    }\n    if(($(this).val().trim().length < 10) && form.find(\"input[id$='responsable2_nombre']\").attr(\"readonly\")=='readonly'){\n        var dni=form.find(\"input[id$='responsable2_dni']\").val();\n        form.find(\"input[id^='alumno_responsable2_']\").each(function(){\n          $(this).val(\"\");\n          $(this).prev().find(\".error\").remove();\n          $(this).next(\".mensaje\").remove();\n          $(this).removeClass(\"invalid\");\n          $(this).attr(\"validated\", false);\n          $(this).prop(\"readonly\", false);\n          $(this).prop(\"disabled\", true);\n        });   \n        form.find(\"input[id$='responsable2_dni']\").val(dni);   \n        form.find(\"input[id$='responsable2_estadoCivil']\").prop(\"readonly\", false);  \n        form.find(\"input[id$='responsable2_dni']\").prop(\"disabled\", false);\n    }\n  });\n \n $(document).on('blur',\"#alumno_responsable2_dni\",function() {\n  //Se elimina la validación Empty, puesto que este campo puede estar vacío.\n  validaciones= $(this).attr(\"validation\");\n  validaciones = validaciones.replace(\"Empty,\", \"\");\n  $(this).attr(\"validation\", validaciones);\n\n    if(($(this).val().trim().length == 0)){\n      $(\"#tab2\").find(\":input[id^='alumno_responsable2_']\").each(function(){\n        $(this).prev().find(\".error\").remove();\n        $(this).next(\".mensaje\").remove();\n        $(this).removeClass(\"invalid\");\n        $(this).attr(\"validated\", true);\n      });\n    }\n  //Se evita repetirlo al hacer submit.\n    if(!$('div #alumno_submit').attr('class') && $(this).attr(\"edit\")==\"true\")\n    {\n      var dni = $(\"#alumno_responsable2_dni\").val();\n              //$(document.body).css({'cursor' : 'wait'});   //para cambiar el cursor mientras se carga\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('comprobar_padre'),\n        data: {dni:dni},\n        dataType: 'json',\n        success: function(response) {\n                        //$(document.body).css({'cursor' : 'auto'});\n\n         if((!($(this).find(\"#tab2\").length) || ($(\"#tab2\").attr(\"style\")==\"display: inline;\"))&& response.success==true )\n         {\n\n          aviso.play();\n          swal({\n            title: \"Responsable registrado en el sistema\",\n            html: \"El DNI introducido pertenece al responsable: <br><br><h3>\"+response.name+\"</h3><br>¿Desea obtener sus datos?\",\n            type: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonColor: color,\n            confirmButtonText: \"¡Adelante!\"\n            }).then(function () {\n              $.ajax({\n                type: 'POST',\n                url: Routing.generate('obtenerdatos_responsable'),\n                data: {dni:dni},\n                dataType: 'json',\n                success: function(response) {    \n                  $(\"#alumno_responsable2_nombre\").focus().val(response.data['nombre']).prop('readonly', true);\n                  $(\"#alumno_responsable2_fechaNacimiento\").focus().val(response.data['fechaNacimiento']).prop('readonly', true);\n                  $(\"#alumno_responsable2_profesion\").focus().val(response.data['profesion']).prop('readonly', true);\n                  $(\"#alumno_responsable2_estadoCivil\").focus().val(response.data['estadoCivil']).prop('readonly', true);\n                  $(\"#alumno_responsable2_movil\").focus().val(response.data['movil']).prop('readonly', true);\n                  $(\"#alumno_responsable2_email\").focus().val(response.data['email']).prop('readonly', true); \n                }\n              })\n            }, function (dismiss) {\n              $(\"#alumno_responsable2_dni\").focus();\n              $(\"#alumno_responsable2_dni\").val('');\n              $(\"#alumno_responsable2_dni\").keyup();\n            }\n          );\n         }   \n        }\n      })\n      $(this).attr(\"edit\",false);\n    }\n  });\n\n\n $(document).on(\"submit\",\".formulario_alumno\",function(event){\n    event.preventDefault();\n\n    $('div #alumno_submit').addClass(\"no\"); //Se utiliza en el evento blur de DNI para no duplicar la validación.\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    $(this).find(\"div[id^='tab']\").each(function(){\n      $(this).find(\":input\").each(function(){\n        //No se valida el campos DNI del segundo responsable si está vacío y ninguno de sus campos deshabilitados.\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false) && !$(this).is(':disabled') && !($(this).attr(\"id\")==\"alumno_responsable2_dni\" && $(this).val()==\"\")){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n    });\n\n    //\":input\"añade a los input radio,select...\n    $(this).find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        tab= $(this).closest(\"div[id^='tab']\").attr(\"id\");\n        mostrarTab($(this).closest(\"form\"),tab);\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n          \n    var formdata=new FormData($(this)[0]);\n    //Se obtiene el curso de ingreso para actualizar la pestaña de asignar grupo si está mostrado ese grupo.\n    curso=$(\"#alumno_nuevo #alumno_cursoIngreso\").val();\n\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('alumno_create'),//url: $(this).attr('action')\n        data:formdata, //$(this).serialize()\n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        //async: false, \n\n        // Mostramos un mensaje con la respuesta de PHP\n        success: function(response) {  \n          limpiarForm(form);\n          //Actualizamos la tabla de alumnos y padres. (Está en alumnos_antiguo de prueba)\n          $(\"#alumnos_antiguo\").update_tab();\n          // Antiguo aviso de confirmación\n             //form.find(\"div[id='result']\").html(\"<div id='message'></div>\");\n             //form.find(\"div[id='message']\").html(\"<h2> Usuario guardado</h2>\").hide();\n             //form.find(\"div[id='message']\").fadeIn('slow').delay(5000).fadeOut('slow');\n          alumno=response.alumno;\n          $.ajax({\n            type: 'POST',\n            url: Routing.generate('matricular_alumno'),\n            data: {alumno:alumno},\n            dataType: 'json',\n            success: function(response) {\n              // Notificación de confirmación.\n              exito.play();\n              new PNotify({\n                text:\"Alumno matriculado\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              //Actualización de pestañas.\n              $(\"#anular_matricula\").update_tab();\n              //Se actualiza la pestaña de asignar grupos si está abierta y tiene seleccionado el curso actualizado.\n              if($(\"#asignar_grupos #lista_cursos select option:selected\").attr(\"value\")==curso){\n                $(\"#asignar_grupo\").update_tab();   \n              }\n              $(\"#asignar_optativa\").update_tab();\n              $(\"#ficha_alumno\").update_tab();\n            }\n          })\n          event.stopPropagation();   \n        },\n        error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {          \n            if(response.responseJSON.result == 0) {\n              //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n              form.find(\":input\").each(function(i){  \n                $(this).prev().find(\".error\").remove();\n                $(this).next(\".mensaje\").remove();\n                $(this).removeClass(\"invalid\");\n                $(this).attr(\"validated\", true);\n              });\n              //Se muestra los campos inválidos.        \n              for (var key in response.responseJSON.data) { \n                form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");   \n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n                form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n              //Se muestra el primer campo inválido.\n              for (var key in response.responseJSON.data) { \n                //form=$(\"form\").find(\":input[id='\"+key+\"']\").closest(\"form\");\n                tab= form.find(\":input[id='\"+key+\"']\").closest(\"div[id^='tab']\").attr(\"id\");\n                mostrarTab(form, tab);\n                form.find(\":input[id='\"+key+\"']\").focus();\n                return false;\n              }\n            } \n            //alert(response.responseJSON.message);\n          } \n          else {\n            error.play();\n            swal({\n              title: \"Error en el sistema\",\n              html: \"Se ha producido un error en el sistema, por favor cierra la pestaña <span>Nuevo Alumno</span> y vuelva a intentarlo de nuevo.\",\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n          }\n        }\n      })\n    }\n    $('div #alumno_submit').removeClass(\"no\");\n      return false;\n  });\n\n\n$(document).on(\"submit\",\".formulario_profesor\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    //Se comrpueba si el dni existe en el sistema con la funcion comprobar dni al salir del input.\n    $(\"#profesor_dni\").blur();\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        tab= $(this).closest(\"div[id^='tab']\").attr(\"id\");\n        mostrarTab($(this).closest(\"form\"),tab);\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    var perfilAcad='';\n    var perfilProf='';\n    // Se guarda el contenido del perfil Académico en su variable.   \n    $(this).find(\"#tab2 :input\").each(function(){\n      if(($(this).val()==\"\")) {\n        perfilAcad+=\"~\";\n      }\n      else{\n        perfilAcad+=$(this).val();\n      }\n      perfilAcad+=\"|\";\n    });\n\n    // Se guarda el contenido del perfil Profesional en su variable.   \n    $(this).find(\"#tab3 #perfil :input\").each(function(){\n      if(($(this).val()==\"\")) {\n        perfilProf+=\"~\";\n      }\n      else{\n        perfilProf+=$(this).val();\n      }\n      perfilProf+=\"|\";\n    });\n\n    $(\"#profesor_perfilAcademico\").val(perfilAcad);     \n    $(\"#profesor_perfilProfesional\").val(perfilProf); \n          \n    var formdata=new FormData($(this)[0])\n    //Se le pasa el valor de las horas de jornada laboral manualmente por el problema de representar decimales en input number.\n    formdata.append('horas',$(\"#profesor_horas\").val());\n    formdata.append('lectivas', $(\"#profesor_horasLectivas\").val());\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('profesor_create'),//url: $(this).attr('action')\n        data:formdata, //$(this).serialize()\n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        //async: false, \n\n        // Mostramos un mensaje con la respuesta de PHP\n        success: function(response) {\n        \n          limpiarForm(form);\n          //Hay que actualizar la pestaña que contiene la tabla de profesores.\n          form.find(\"div[id='message']\").remove();\n          \n          //form.find(\"div[id='result']\").html(\"<div id='message'></div>\");\n          //form.find(\"div[id='message']\").html(\"<h2> Profesor guardado</h2>\").hide();\n          //form.find(\"div[id='message']\").fadeIn('slow').delay(5000).fadeOut('slow');\n\n          // Notificación de confirmación.\n          exito.play();\n          new PNotify({\n            text:\"Profesor registrado\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          \n          //Actualización de pestañas.\n          $(\"#tutor_grupo\").update_tab();\n          $(\"#clases_impartidas\").update_tab();\n          $(\"#ficha_profesor\").update_tab();\n          $(\"#profesor_antiguo\").update_tab();\n          $(\"#equipo_directivo\").update_tab();\n\n          event.stopPropagation();   \n        },\n        error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {\n            if(response.responseJSON.result == 0) {\n              //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n               form.find(\":input\").each(function(i){  \n                $(this).prev().find(\".error\").remove();\n                $(this).next(\".mensaje\").remove();\n                $(this).removeClass(\"invalid\");\n                $(this).attr(\"validated\", true);\n              });\n              //Se muestra los campos inválidos.        \n              for (var key in response.responseJSON.data) { \n                form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");   \n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n                form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n            } \n            alert(response.responseJSON.message);\n          } \n          else {\n            alert(desc);\n          }\n        }\n      })\n    }\n      return false;\n  });\n\n\n  $(document).on(\"submit\",\"#padres_nuevo\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n     \n    if(val==0){\n      aviso.play();\n      swal({\n        title: \"Nueva asignación de responsable\",\n        html: \"<p class='justificado'>Se va a asignar un nuevo responsable al alumno y no se podrá recuperar el anterior.</p><br>¿Estas seguro de realizar la nueva asignación?\",\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: \"Cancelar\",\n        confirmButtonColor: color,\n        confirmButtonText: \"¡Adelante!\"\n        }).then(function () {\n\n          $.ajax({\n            type: 'POST',\n            url: form.attr('action'),\n            data:form.serialize(), \n            dataType: 'json',\n  \n            // Mostramos un mensaje con la respuesta de PHP\n            success: function(response) {\n              var id_alumno = $(\"#padres_nuevo\").attr(\"alumno\");\n              var id_responsable = response.responsable;\n              var responsable = $(\"#padres_nuevo\").attr(\"responsable\");\n              $(\"#padres_dialog\").dialog('close');\n              limpiarForm(form);\n\n              if(response.responsableDni!=$(\"#edit_alumno_responsable_dni_1\").val() && response.responsableDni!=$(\"#edit_alumno_responsable_dni_2\").val()){\n                $.ajax({\n                  type: 'POST',\n                  url: Routing.generate('asignar_responsable'),\n                  data: {id_alumno:id_alumno,id_responsable:id_responsable,responsable:responsable},\n                  dataType: 'json',\n                  success: function(response) {\n                  //Se actualiza la información del responsable añadido en los formularios cuyo alumno sea el actual. \n                  $(\"form[action*='\"+id_alumno+\"']\").each (function(){\n                  form=$(this); \n                    if(responsable==\"responsable1\"){\n                      form.find(\"#edit_alumno_responsable_dni_1\").focus().val(response.data['dni']);\n                      form.find(\"#edit_alumno_responsable1_nombre\").focus().val(response.data['nombre']);\n                      form.find(\"#edit_alumno_responsable1_fechaNacimiento\").focus().val(response.data['fechaNacimiento']);\n                      form.find(\"#edit_alumno_responsable1_profesion\").focus().val(response.data['profesion']);\n                      form.find(\"#edit_alumno_responsable1_estadoCivil\").focus().val(response.data['estadoCivil']);\n                      form.find(\"#edit_alumno_responsable1_movil\").focus().val(response.data['movil']);\n                      form.find(\"#edit_alumno_responsable1_email\").focus().val(response.data['email']); \n                    }\n                    else{\n                      form.find(\"#edit_alumno_responsable_dni_2\").focus().val(response.data['dni']);\n                      form.find(\"#edit_alumno_responsable2_nombre\").focus().val(response.data['nombre']);\n                      form.find(\"#edit_alumno_responsable2_fechaNacimiento\").focus().val(response.data['fechaNacimiento']);\n                      form.find(\"#edit_alumno_responsable2_profesion\").focus().val(response.data['profesion']);\n                      form.find(\"#edit_alumno_responsable2_estadoCivil\").focus().val(response.data['estadoCivil']);\n                      form.find(\"#edit_alumno_responsable2_movil\").focus().val(response.data['movil']);\n                      form.find(\"#edit_alumno_responsable2_email\").focus().val(response.data['email']); \n                    }\n                    form.find(\"#noresponsable\").addClass(\"oculto\");\n                    form.find(\"#responsable\").removeClass(\"oculto\");\n                  });\n                  }\n                })  \n              }\n              else{\n                error.play();\n                swal({\n                  title: \"Responsable asignado al alumno\",\n                  text: \"Este responsable ya se encuentra asignado a este alumno.\",\n                  type: \"error\",\n                  showCancelButton: false,\n                  confirmButtonColor: color\n                });\n              }\n            },\n            error: function (response, desc, err){\n              if (response.responseJSON && response.responseJSON.message) {\n                if(response.responseJSON.result == 0) {\n                  //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n                  form.find(\":input\").each(function(i){  \n                    $(this).prev().find(\".error\").remove();\n                    $(this).next(\".mensaje\").remove();\n                    $(this).removeClass(\"invalid\");\n                    $(this).attr(\"validated\", true);\n                  });\n                  //Se muestra los campos inválidos.        \n                  for (var key in response.responseJSON.data) { \n                    form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");   \n                    form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n                    form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n                    form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n                  }\n                } \n                alert(response.responseJSON.message);\n              }    \n              else {\n                error.play();\n                swal({\n                  title: \"Error en el sistema\",\n                  text: \"Se ha producido un error en el sistema, por favor intentelo más tarde.\",\n                  type: \"error\",\n                  showCancelButton: false,\n                  confirmButtonColor: color\n                });\n              }\n            }\n          })\n        return false;\n        }\n      );\n    }\n  });\n\n\n  $(document).on('click',\"#botones_form button[id$='_restablecer']\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    //Se recupera el dir original antes de restablecer (se elimina _m del nombre)\n    if(form.attr(\"id\")==\"noticias_edit\"){\n      titulo=$(\"#noticias_edit #noticias_galeria\").val();\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('recuperar_galeria'),\n        data:{titulo:titulo}, \n        dataType: 'json',\n        success: function(response){\n        }\n      });\n    }\n\n    var arr = form.attr('action').split('/');\n    if($(this).closest(\".ui-dialog\").length){\n      div=$(this).closest(\"div[id$='_dialog']\");\n      $(div).load(Routing.generate(arr[4]+\"_edit\", {id:arr[5]}));\n    }\n    else{\n      div=$(this).closest(\"div[id^='tabs-']\");\n      $(div).load(Routing.generate(arr[4]+\"_edit\", {id:arr[5]})); \n    }\n\n  });\n\n  $(document).on('click',\"#botones_form button[id$=nuevaFicha]\", function(event){\n    event.preventDefault();\n    // Se cierra las notificaciones.\n    PNotify.removeAll();\n    form= $(this).closest(\"form\");\n\n    div=$(this).closest(\"div[id^='tabs-']\");\n    var arr = form.attr('id').split('_');\n    $(div).load(Routing.generate(arr[0]+'_search'));\n  });\n\n    // Añadir foto\n  $(document).on('click','#iconos_foto a', function(event){ \n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    if($(this).attr(\"id\") == \"icono_eliminar\"){\n\n      form.find(\"div[class='columna_foto'] div[id!='iconos_foto']\").each(function(){\n          $(this).addClass(\"oculto\");\n      });\n      form.find(\"#por_defecto\").removeClass(\"oculto\");\n      form.find(\"#icono_eliminar\").addClass(\"disable\");\n      form.find(\"input[type='file']\").attr(\"validated\",\"true\");\n      form.find(\"input[type='file']\").val(\"\");\n      form.find(\"#actualizada img\").attr(\"src\",form.find(\"#por_defecto img\").attr(\"src\"));\n\n      if(form.find(\"#actual img\").attr(\"src\").indexOf(\"SinFoto\") < 0){\n          form.find(\"#icono_restablecer\").removeClass(\"disable\"); \n      }\n    }\n    else if($(this).attr(\"id\") == \"icono_restablecer\"){\n\n      form.find(\"div[class='columna_foto'] div[id!='iconos_foto']\").each(function(){\n          $(this).addClass(\"oculto\");\n      });\n      form.find('#actual').removeClass(\"oculto\");\n      form.find(\"#actualizada img\").attr(\"src\",form.find(\"#actual img\").attr(\"src\"));\n      form.find(\"#icono_restablecer\").addClass(\"disable\");\n      if(form.find(\"#actual img\").attr(\"src\").indexOf(\"SinFoto\") >= 0)\n      {\n        form.find(\"#icono_eliminar\").addClass(\"disable\");\n      }\n      else{\n        form.find(\"#icono_eliminar\").removeClass(\"disable\");\n      }\n      \n      form.find(\"#error_foto\").empty();\n      form.find(\"#por_defecto img\").removeClass('invalid');\n\n      form.find(\"input[type='file']\").attr(\"validated\",\"true\");\n      form.find(\"input[type='file']\").val(\"\");\n    }\n    else{\n      form.find(\".columna_foto #actualizada\").addClass(\"modif\");\n      form.find(\".columna_foto #actualizada\").removeClass(\"oculto\");\n      form.find(\".columna_foto #actual\").addClass(\"oculto\");\n      form.find(\".columna_foto #por_defecto\").addClass(\"oculto\");\n      form.find(\"input[type='file']\").trigger('click');\n      //form.find('#actual').addClass(\"oculto\");\n    }\n\n    comprobarEditForm(form);\n\n    event.stopPropagation(); \n  });\n  // Se deshabilita los botones del formulario al insertar una nueva foto.\n  $(document).on('change','.columna_foto input[type=\"file\"]',function() {\n    form= $(this).closest(\"form\");\n    form.find(\"#botones_form button[id$='_submit']\").prop(\"disabled\",false); \n    form.find(\"#botones_form button[id$='_restablecer']\").prop(\"disabled\",false); \n    \n  });\n\n\n/////////////////////////////////\n// Busqueda en los formularios //\n/////////////////////////////////\n  \n  $(document).on(\"click\",\"#contenedor_lista td\", function(event){ \n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    \n    var arr = form.attr('id').split('_');\n    var div= $(this).closest(\"div[id^='tabs-']\");\n\n    $(div).empty();\n    // Se añade un gif para la espera de la carga del contenido actualizado.\n    $(div).html('<div class=\"ajaxload\"><img src=\"/Symfony/web/bundles/backend/images/loading.gif\"/></div>');\n\n    $(div).load(Routing.generate(arr[1]+'_edit', {id:$(this).closest(\"tr\").attr(\"id\")}));\n  });\n\n  // Se muestra la lista de alumnos o profesores activos.\n  $(document).on('click',\"form[id^='busqueda_'] #btn_activos\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    form.find(\".activos\").removeClass(\"oculto\");\n    form.find(\".inactivos\").addClass(\"oculto\");\n\n    //Se restablece el buscador y la lista según la opción marcada en el select(o mostrar todo si no hay opción).\n    form.find(\"#buscador input\").val(\"\");\n    form.find(\"#buscador input\").keyup();\n    \n    form.find(\".block_search input\").val(\"\");\n    form.find(\".block_search input\").keyup();\n  });\n\n  // Se muestra la lista de alumnos o profesores inactivos.\n  $(document).on('click',\"form[id^='busqueda_'] #btn_inactivos\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    form.find(\".activos\").addClass(\"oculto\");\n    form.find(\".inactivos\").removeClass(\"oculto\");\n\n    //Se restablece el buscador y la lista según la opción marcada en el select(o mostrar todo si no hay opción).\n    form.find(\"#buscador input\").val(\"\");\n    form.find(\"#buscador input\").keyup();\n\n    form.find(\".block_search input\").val(\"\");\n    form.find(\".block_search input\").keyup();\n  });\n  //Búsqueda por curso\n  $(document).on('change','form[id^=\"busqueda_\"] #lista_cursos select',function() {\n    form= $(this).closest(\"form\");\n    select=$(this);\n\n    form.find(\"#contenedor_lista span\").remove();     \n    curso=$(this).find(\"option:selected\").text().replace(\"de\", \"\");\n\n    //Se elimina el contenido de la búsqueda si había.\n    form.find(\".block_search input\").val(\"\");\n    form.find(\".block_search input\").keyup();\n    \n    //Se elimina el contenido del buscador cuando se selecciona un curso para la búsqueda.\n    form.find(\"#buscador input\").val(\"\"); \n    form.find(\"#buscador input\").keyup(); \n    \n    //Se define el valor el select correspondiente al último curso .\n    id=1;\n\n    valor=form.find(\"#lista_cursos select option:selected\").val();\n\n    // Se modifica el valor en las dos listas.\n    if(form.find(\".activos select option:selected\").val()!= form.find(\".inactivos select option:selected\").val()){\n      form.find(\"#lista_cursos select\").val(valor).change();\n    }\n  \n    form.find(\".contenedor_registro\").each(function(){\n      // Se selecciona el option del select oculto con z-index para filtrar el curso.\n      if($(this).find(\"select[class='\"+id+\"'] option[value='\"+curso+\"']\").length){   \n        // Se selecciona y se muestra con change().\n        $(this).find(\"select[class='\"+id+\"']\").val(curso).change();\n      }\n      else if(select.find(\"option:selected\").text()==\"Todos los cursos\" || select.find(\"option:selected\").text()==\"Mostrar todo\"){\n        $(this).find(\"select[class='\"+id+\"']\").val(\"\").change();\n      }\n      else{\n        $(this).find(\"tbody\").empty();\n        $(this).find(\"tbody\").append(\"<tr class='odd no_cursor'><td class='dataTables_empty'>Actualmente no se han asignado \"+form.attr(\"tipo\")+\" en el curso seleccionado</td></tr>\");\n        $(this).find(\"thead tr th\").removeClass(\"sorting_asc\");\n      }\n    });\n\n    //Se muestra el botón de limpiar búsqueda.\n    form.find(\".limpiar_busqueda\").prop(\"disabled\",false);\n  });\n\n\n\n  $(document).on(\"click\",\".limpiar_busqueda\",function(event) {\n    event.preventDefault();\n    form=$(this).closest(\"form\");\n\n    //Se limpia el contenido de los input con la función limpiar definida anteriormente.\n\n    //Se muestra toda la lista al limpiar el filtro en buscador que esá oculto.\n    form.find(\"#lista_cursos select\").val(\"0\").change();// Se muestra la lista completa.\n    form.find(\"#lista_cursos select\").val(\"\").change();// Se restablece el valor inicial del select. \n    form.find(\".block_search input\").val(\"\");// Se elimina el valor del input.\n    form.find(\".block_search input\").keyup(); // Se elimina la busqueda.\n    $(this).prop(\"disabled\",true);\n  });\n\n//////////////////////////////////\n// Formularios de actualización //\n//////////////////////////////////\n\n  // Función para comprobar si se ha editado algo el formulario para mostrar los botones de guardar y restablecer.\n  function comprobarEditForm(form) {\n    var val=0;\n    // Se comprueba si se ha modificado el valor inicial de algún input.\n    form.find(\"input[type!='file']\").each(function(){\n\n      //Se omite que se compruebe los inputs de la hora en el formulario de editar eventos si la opción \"Todo el día\" está activa.\n      if(form.attr(\"id\")==\"eventos_edit\" && $(this).attr(\"class\")==\"timepicki-input\" && form.find(\"#all_day input\").is(':checked')){\n      }\n      else if(($(this).val()!=$(this).attr(\"value\") && $(this).attr(\"value\")!=undefined) || ($(this).val() && $(this).attr(\"value\")==undefined) ){\n        $(this).addClass(\"modified\");\n        form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n        if(form.find(\"button[id$='_restablecer']\").length){\n          form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n        }\n        else{\n          form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n        }\n        val=1;\n      }\n      else{\n        $(this).removeClass(\"modified\");\n      }\n    });\n\n    //Se comprueba si se ha cambiado la opción inicial del radio.\n      form.find(\"input[type='radio']\").each(function(){\n        if($(this).is(':checked') && $(this).attr(\"checked\")!=\"checked\"){\n          $(this).addClass(\"modified\");\n          form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          if(form.find(\"button[id$='_restablecer']\").length){\n            form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n          }\n          else{\n            form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n          }          \n          val=1;\n        }\n        else{\n          $(this).removeClass(\"modified\");\n        }  \n      });\n\n      //Se comprueba si se ha cambiado la opción inicial del checkbox.\n      form.find(\"input[type='checkbox']\").each(function(){\n        if($(this).is(':checked') && $(this).attr(\"checked\")!=\"checked\" || !($(this).is(':checked')) && $(this).attr(\"checked\")==\"checked\"){\n          $(this).addClass(\"modified\");\n          form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          if(form.find(\"button[id$='_restablecer']\").length){\n            form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n          }\n          else{\n            form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n          }          \n          val=1;\n        }\n        else{\n          $(this).removeClass(\"modified\");\n        }  \n      });\n\n      // Se comprueba si se ha modificado la foto inicial.\n      // Se actualiza la foto inicial.\n      if(form.find(\"#actualizada\").attr('class')==\"\" || form.find(\"#actualizada\").attr('class')==\"modif\" ){\n          form.find(\".columna_foto div[id!='iconos_foto'] img\").addClass(\"modified\");\n          form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          if(form.find(\"button[id$='_restablecer']\").length){\n            form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n          }\n          else{\n            form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n          }\n          val=1;\n      }\n      // Se elimina la foto inicial.\n      else if(form.find(\"#por_defecto\").attr('class')==\"\" && form.find(\"#actual img\").attr(\"src\")!=form.find(\"#por_defecto img\").attr(\"src\") ){\n          form.find(\".columna_foto div[id!='iconos_foto'] img\").addClass(\"modified\");\n          form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          if(form.find(\"button[id$='_restablecer']\").length){\n            form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n          }\n          else{\n            form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n          }\n          val=1;\n      }\n      else{\n        form.find(\".columna_foto div[id!='iconos_foto'] img\").removeClass(\"modified\");\n      }\n\n      // Se comprueba si se ha modificado el valor inicial de algún select.\n      form.find(\"select option:selected\").each(function(){\n        //$(this).attr(\"selected\")!=undefined\n        if($(this).attr(\"value\")!=$(this).closest(\"select\").attr(\"seleccionado\") && $(this).closest(\"select\").attr(\"seleccionado\")!=\"\"){\n          $(this).closest(\"select\").addClass(\"modified\");\n          form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          if($(this).closest(\"form\").find(\"button[id$='_restablecer']\").length){\n            form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n          }\n          else{\n            form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n          }\n          val=1;\n          if(form.attr(\"id\")==\"eventos_edit\"){\n            if($(this).parent().parent().attr(\"id\")==\"eventos_datetime_date\" ){\n              form.find(\".ui-datepicker td a\").removeClass(\"modified\");\n              form.find(\".ui-datepicker .ui-datepicker-current-day a\").addClass(\"modified\");\n            }\n          }\n        }\n        else{\n          $(this).closest(\"select\").removeClass(\"modified\");\n\n        }\n      });\n    \n    // Se comprueba si el formulario tiene textarea y si se ha modificado el valor inicial.\n    if(form.find(\"textarea\")){\n      if(form.find(\"textarea\").val()!=form.find(\"textarea\").attr(\"value\")){\n        form.find(\"textarea\").addClass(\"modified\");\n        form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n        if(form.find(\"button[id$='_restablecer']\").length){\n          form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n        }\n        else{\n          form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n        }\n        val=1;\n      }\n      else{\n        form.find(\"textarea\").removeClass(\"modified\");\n      }\n    }\n\n    //Se comprueba la opción \"Todo el día\" del formulario de editar eventos.\n    if(form.attr(\"id\")==\"eventos_edit\"){\n      if((form.find(\"#all_day input\").attr(\"value\")==\"checked\" && !form.find(\"#all_day input\").is(':checked')) || (form.find(\"#all_day input\").attr(\"value\")==\"\" && form.find(\"#all_day input\").is(':checked'))  ){\n          form.find(\"#all_day input\").addClass(\"modified\");\n          form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n          if(form.find(\"button[id$='_restablecer']\").length){\n            form.find(\"button[id$='_restablecer']\").prop(\"disabled\",false);\n          }\n          else{\n            form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n          }          \n          val=1;\n      }\n      else{\n        form.find(\"#all_day input\").removeClass(\"modified\");      \n      }\n      //Se elimina la clase modified a los input de la hora en timepicki.\n      if(form.find(\"#all_day input\").is(':checked')){\n        form.find(\".time input\").removeClass(\"modified\");\n        form.find(\".mins input\").removeClass(\"modified\");\n      }\n    }\n\n    // Si no se ha modificado nada se deshabilita los botones de nuevo.\n    if(val==0){\n      form.find(\"button[id$='_submit']\").prop(\"disabled\",true);\n      if(form.find(\"button[id$='_restablecer']\").length){\n        form.find(\"button[id$='_restablecer']\").prop(\"disabled\",true);\n      }\n      else{\n        form.find(\"button[id$='_rest']\").prop(\"disabled\",true);\n      }\n    }\n\n    //Se comprueba la lista de cursos si existe en el formulario de antiguos alumnos.\n    if(form.attr(\"id\")==\"antiguo_alumno_edit\"){\n      if(form.find(\"#lista_cursos\").length){\n        comprobarSelect(form);\n      }\n      else{\n      form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n      }\n    }\n\n    if(form.find(\":input[class*='invalid']\").size()>0){\n      form.find(\"button[id$='_submit']\").prop(\"disabled\",true);\n    }\n\n  }\n\n  //Función para comprobar si se ha editado algo el formulario para mostrar los botones de guardar y restablecer.\n  function comprobarSelect(form) {\n    // Se comprueba si se ha modificado el valor inicial de la lista de cursos.\n    lista=form.find(\"#lista_cursos select\")\n    if(lista.find(\"option:selected\").attr(\"value\")==\"\"){\n      form.find(\"button[id$='_submit']\").prop(\"disabled\",true);\n      lista.removeClass(\"modified\");\n    }\n    else{\n      form.find(\"button[id$='_submit']\").prop(\"disabled\",false);\n      form.find(\"button[id$='_rest']\").prop(\"disabled\",false);\n      lista.addClass(\"modified\");\n    }\n  }\n\n\n\n  // Se llama a la función de comprobar formulario editado, en el caso que se modifique algún elemento del formulario.\n  \n  $(document).on(\"blur keyup paste cut\",\"form[id$='_edit'] input\",function() {\n    //Se omite la validación en editar noticias.\n    if($(this).closest(\"form\").attr(\"id\")==\"noticias_edit\"){\n      return false;\n    }\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n  $(document).on(\"change\",\"form[id$='_edit'] input[type='number']\",function() {\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n  $(document).on(\"change\",\"form[id$='_edit'] input[type='radio']\",function() {\n    if($(this).closest(\"form\").attr(\"id\")==\"noticias_edit\"){\n      return false;\n    }\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n  $(document).on(\"change\",\"form[id$='_edit'] input[type='checkbox']\",function() {\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n  $(document).on(\"change\",\"form[id$='_edit'] select\",function() {\n    if($(this).closest(\"form\").attr(\"id\")==\"noticias_edit\"){\n      return false;\n    }\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n  $(document).on(\"change keyup paste click input blur cut\",\"form[id$='_edit'] textarea\",function() {\n    if($(this).closest(\"form\").attr(\"id\")==\"noticias_edit\"){\n      return false;\n    }\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n\n\n/*\n  $(document).on(\"keyup\",\"#profesor_edit input\",function() {\n    comprobarEditForm($(\"#profesor_edit\"));\n  });\n\n  $(document).on(\"change\",\"#profesor_edit input[type='radio']\",function() {\n    comprobarEditForm($(\"#profesor_edit\"));\n  });\n\n  $(document).on(\"keyup\",\"#alumno_edit input\",function() {\n    comprobarEditForm($(\"#alumno_edit\"));\n  });\n\n  $(document).on(\"change\",\"#alumno_edit input[type='radio']\",function() {\n    comprobarEditForm($(\"#alumno_edit\"));\n  });\n\n  $(document).on(\"change\",\"#alumno_edit select\",function() {\n    comprobarEditForm($(\"#alumno_edit\"));\n  });\n\n  $(document).on(\"keyup\",\"#alumno_edit textarea\",function() {\n    comprobarEditForm($(\"#alumno_edit\"));\n  });\n\n  $(document).on(\"keyup\",\"#centro_edit input\",function() {\n    comprobarEditForm($(\"#centro_edit\"));\n  });\n\n  $(document).on(\"keyup\",\"#antiguo_alumno_edit input\",function() {\n    comprobarEditForm($(\"#antiguo_alumno_edit\"));\n  });\n\n  $(document).on(\"change\",\"#antiguo_alumno_edit input[type='radio']\",function() {\n    comprobarEditForm($(\"#antiguo_alumno_edit\"));\n  });\n\n  $(document).on(\"change\",\"#antiguo_alumno_edit select\",function() {\n    comprobarEditForm($(\"#antiguo_alumno_edit\"));\n\n  });\n\n  $(document).on(\"keyup\",\"#antiguo_alumno_edit textarea\",function() {\n    comprobarEditForm($(\"#antiguo_alumno_edit\"));\n  });\n    */\n  //Se guarda el formulario alumno editado.\n  $(document).on(\"submit\",\"#alumno_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    form.find(\":input[type!='file']\").each(function(){\n      //Si no tiene segundo responsable se asigna true al valor de validated para que sean aceptados en la validación.\n      if( $(this).closest(\"div[id='responsable']\").hasClass(\"oculto\")){\n        $(this).attr(\"validated\",true);\n      }\n      if(!$(this).attr(\"validated\") || $(this).attr(\"validated\")==false){\n        if($(this).attr(\"validation\")){\n          validation($(this));\n        }\n      }\n    });\n\n    //\":input\"añade a los input radio,select...\n    form.find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    var estado= \"\";\n\n    if(!form.find(\"#actual\").hasClass(\"oculto\")){\n      estado= \"actual\";\n    }\n    else if(!form.find(\"#actualizada\").hasClass(\"oculto\")){\n      estado= \"actualizado\";\n    }\n    else{\n      estado= \"eliminado\";\n    }\n          \n    var formdata=new FormData($(this)[0]);\n    formdata.append('estado', estado);\n\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: $(this).attr('action'),\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function(response) {\n      \n          $(\"#icono_restablecer\").addClass(\"disable\");\n\n          //Actualización de pestañas.\n          $(\"#anular_matricula\").update_tab();\n          $(\"#alumnos_antiguo\").update_tab();\n          $(\"#asignar_optativa\").update_tab();\n          $(\"#ficha_alumno\").update_tab();\n          $(\"#asignar_grupo\").update_tab();   \n\n          var arr = form.attr('action').split('/');\n          div=form.closest(\"div[id^='tabs-']\");\n          $(div).load(Routing.generate('alumno_edit', {id:arr[5]}), function(responseTxt, statusTxt, xhr){\n            if(statusTxt == \"success\"){\n              form= $(\"#alumno_edit\");\n\n              // Antiguo aviso de confirmación\n              //form.find(\"div[id='message']\").remove();\n              //form.find(\"div[id='result']\").html(\"<div id='message'></div>\");\n              //form.find(\"div[id='message']\").html(\"<h2> Datos actualizados</h2>\").hide();\n              //form.find(\"div[id='message']\").fadeIn('fast').delay(5000).fadeOut('slow');\n\n              // Notificación de confirmación.\n              exito.play();\n\n              new PNotify({\n                text:\"Datos actualizados\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n            }\n\n            if(statusTxt == \"error\")\n              alert(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n          });\n        } \n      })\n \n    }\n  });\n\n  $(document).on('click',\"#tabs form[id$='alumno_edit'] button[id$='_modal']\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var resp= $(this).attr('id').split('_');\n    var alum = $(this).closest(form).attr('action').split('/');\n\n    $('#padres_dialog').load(Routing.generate(\"padres_new\"), function(){\n      $('#padres_dialog form').attr(\"responsable\",resp[1]);\n      $('#padres_dialog form').attr(\"alumno\",alum[5]);\n      $( '<div class=\"ui-widget-overlay ui-front\" style=\"z-index: 99;\"></div>' ).insertAfter($(\".ui-dialog[aria-describedby='padres_dialog']\"));\n    }).dialog('open'); \n  });\n\n  $(document).on(\"submit\",\"#profesor_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var perfilAcad='';\n    var perfilProf='';\n    // Se guarda el contenido del perfil Académico en su variable.   \n    form.find(\"div[id='perfil_acad'] :input\").each(function(){\n      if(($(this).val()==\"\")) {\n        perfilAcad+=\"~\";\n      }\n      else{\n        perfilAcad+=$(this).val();\n      }\n      perfilAcad+=\"|\";\n    });\n\n    // Se guarda el contenido del perfil Profesional en su variable.   \n    form.find(\"div[id='perfil_prof'] :input\").each(function(){\n      if(($(this).val()==\"\")) {\n        perfilProf+=\"~\";\n      }\n      else{\n        perfilProf+=$(this).val();\n      }\n      perfilProf+=\"|\";\n    });\n\n    $(\"#edit_profesor_perfilAcademico\").val(perfilAcad);     \n    $(\"#edit_profesor_perfilProfesional\").val(perfilProf); \n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    form.find(\":input[type!='file']\").each(function(){\n\n      if(($(this).attr(\"id\")!=\"edit_profesor_perfilAcademico\" && $(this).attr(\"id\")!=\"edit_profesor_perfilProfesional\")&&(!$(this).attr(\"validated\") || $(this).attr(\"validated\")==false)){\n        if($(this).attr(\"validation\")){\n          validation($(this));\n        }\n      }\n    });\n\n    //\":input\"añade a los input radio,select...\n    form.find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    var estado= \"\";\n\n    if(!form.find(\"#actual\").hasClass(\"oculto\")){\n      estado= \"actual\";\n    }\n    else if(!form.find(\"#actualizada\").hasClass(\"oculto\")){\n      estado= \"actualizado\";\n    }\n    else{\n      estado= \"eliminado\";\n    }\n          \n    var formdata=new FormData($(this)[0]);\n    formdata.append('estado', estado);\n    //Se le pasa el valor de las horas de jornada laboral manualmente por el problema de representar decimales en input number.\n    formdata.append('horas',$(\"#edit_profesor_horas\").val());\n    formdata.append('lectivas', $(\"#edit_profesor_horasLectivas\").val());\n\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: $(this).attr('action'),\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function(response) {\n      \n          $(\"#icono_restablecer\").addClass(\"disable\");\n\n          //Actualización de pestañas.\n          $(\"#consultar_instalaciones\").update_tab();\n          $(\"#profesor_antiguo\").update_tab();\n          $(\"#profesor_asignar_grupo\").update_tab();\n          $(\"#clases_impartidas\").update_tab();\n          $(\"#asignar_horario\").update_tab();\n          $(\"#listarlog\").update_tab();\n          $(\"#equipo_directivo\").update_tab();\n          \n\n          var arr = form.attr('action').split('/');\n          div=form.closest(\"div[id^='tabs-']\");\n          $(div).load(Routing.generate('profesor_edit', {id:arr[5]}), function(responseTxt, statusTxt, xhr){\n            if(statusTxt == \"success\"){\n              form= $(\"#profesor_edit\");\n\n              // Notificación de confirmación.\n              $(\".ui-pnotify\").remove();\n              exito.play();\n\n              new PNotify({\n                text:\"Datos actualizados\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n            }\n\n            if(statusTxt == \"error\")\n              alert(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n          });\n        } \n      })\n \n    }\n  });\n  //Se restablece la contraseña del responsable del alumno.\n  $(document).on(\"click\",\"#alumno_edit .restablecer_password\",function(event) {\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n    nombre=$(this).closest(\"div\").find(\".full_name_div input\").attr(\"value\");\n    aviso.play();\n    swal({\n      title: \"Restablecer contraseña del responsable\",\n      html: \"<p class='justificado'>Se va a restablecer la contraseña inicial del responsable <strong class='negrita'>\"+nombre+\"</strong> y no se podrá recuperar la contraseña actual. ¿Estas seguro de continuar?</p>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('restablecer_contraseña_responsable', {id:id}),\n          data:{id:id},\n          dataType: 'json',\n  \n          success: function(response) {\n            // Notificación de confirmación.\n            $(\".ui-pnotify\").remove();\n            exito.play();\n\n            new PNotify({\n              text:\"Contraseña restablecida.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    ); \n  });\n\n\n  //Se restablece la contraseña del profesor.\n  $(document).on(\"click\",\"#profesor_edit .btn_restablecer\",function(event) {\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n\n    aviso.play();\n    swal({\n      title: \"Restablecer contraseña del profesor\",\n      html: \"<p class='justificado'>Se va a restablecer la contraseña del profesor a la inicial y no se podrá recuperar la actual. ¿Estas seguro de continuar?</p>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('restablecer_contraseña_profesor', {id:id}),\n          data:{id:id},\n          dataType: 'json',\n  \n          success: function(response) {\n            // Notificación de confirmación.\n            $(\".ui-pnotify\").remove();\n            exito.play();\n\n            new PNotify({\n              text:\"Contraseña restablecida.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    ); \n  });\n\n  //Se comprueba que el DNI no existe en el sistema si se modifica a un responsable.\n  $(document).on(\"blur\",\"input[id^='edit_alumno_responsable_dni_']\",function() {\n    form= $(this).closest(\"form\");\n    input=$(this);\n    input_name=$(this).closest(\"div\").next().find(\"input\");\n\n    var arr = form.attr('action').split('/');\n\n    if($(this).val()!=''){\n      var dni=$(this).val();\n      var dni_anterior=$(this).attr(\"value\");\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('comprobar_dni_padre_editado'),\n        data: {dni:dni, dni_anterior:dni_anterior},\n        dataType: 'json',\n        success: function(response) {   \n          if(response.data!=null){\n            input.addClass(\"invalid\");   \n            input.attr(\"validated\", false);\n            input.after(\"<span class='mensaje'>Este DNI ya existe en el sistema.</span>\");\n            //Se comprueba que no exista el aviso de error para no repetirlo.\n              input.prev().find(\"span\").remove();\n              input.prev().append(\"<span class='error'>Dato inválido</span>\");\n\n            input_name.focus();\n            if(input_name.val()==''){\n              input_name.removeClass(\"invalid\");\n              input_name.prev().find(\".error\").remove();\n              input_name.next(\".mensaje\").remove();         \n            }\n          }\n        }  \n      })\n    }\n  });\n\n  $(document).on('click',\"#eliminar_responsable\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var alum = $(this).closest(form).attr('action').split('/');\n    var id_alumno =alum[5];\n\n    aviso.play();\n    swal({\n      title: \"Eliminación del responsable del alumno\",\n      text: \"Se va a eliminar el responsable del alumno y no se podrá recuperar. ¿Estas seguro de continuar?\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_responsable'),\n          data:{id_alumno:id_alumno},\n          dataType: 'json',\n  \n          success: function(response) {\n          //Se actualiza la información del responsable añadido en los formularios cuyo alumno sea el actual. \n          $(\"form[action*='\"+id_alumno+\"']\").each (function(){\n          form=$(this); \n            // Se borran los valores del segundo responsable y se oculta el formulario.\n            form.find(\"#responsable\").addClass(\"oculto\");\n            form.find(\"#responsable input\").val(\"\");\n            // Se muestra un aviso para indicar que solo hay un responsable.\n            form.find(\"#noresponsable\").removeClass(\"oculto\");\n          });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );  \n    return false;\n  });\n\n$(document).on(\"blur\",\"input[id='profesor_dni']\",function(event) {\n  form= $(this).closest(\"form\");\n\n  if($(this).val()!=''){\n    var dni=$(this).val();\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_dni_profesor'),\n      data: {dni:dni},\n      dataType: 'json',\n      success: function(response) {      \n        if(response.data!=null){\n          form.find(\"input[id$='profesor_dni']\").addClass(\"invalid\");   \n          form.find(\"input[id$='profesor_dni']\").attr(\"validated\", false);\n          form.find(\"input[id$='profesor_dni']\").after(\"<span class='mensaje'>Este DNI ya existe en el sistema.</span>\");\n          //Se comprueba que no exista el aviso de error para no repetirlo.\n          if(form.find(\"input[id$='profesor_dni']\").prev().find('span[class=\"error\"]').size()==0){\n            form.find(\"input[id$='profesor_dni']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n          }\n          form.find(\"input[id$='profesor_nombre']\").focus();\n          if(form.find(\"input[id$='profesor_nombre']\").val()==''){\n            form.find(\"input[id$='profesor_nombre']\").removeClass(\"invalid\");\n            form.find(\"input[id$='profesor_nombre']\").prev().find(\".error\").remove();\n            form.find(\"input[id$='profesor_nombre']\").next(\".mensaje\").remove();         \n          }\n        }\n      } \n    })\n  }\n  event.stopPropagation();  \n});\n  \n\n$(document).on(\"blur\",\"input[id='edit_profesor_dni']\",function(event) {\n  form= $(this).closest(\"form\");\n\n  var arr = form.attr('action').split('/');\n\n  if($(this).val()!=''){\n    var dni=$(this).val();\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_dni_profesor_editado'),\n      data: {dni:dni, id:arr[5]},\n      dataType: 'json',\n      success: function(response) {      \n        if(response.data!=null){\n          form.find(\"input[id$='profesor_dni']\").addClass(\"invalid\");   \n          form.find(\"input[id$='profesor_dni']\").attr(\"validated\", false);\n          form.find(\"input[id$='profesor_dni']\").after(\"<span class='mensaje'>Este DNI ya existe en el sistema.</span>\");\n          //Se comprueba que no exista el aviso de error para no repetirlo.\n          if(form.find(\"input[id$='profesor_dni']\").prev().find('span[class=\"error\"]').size()==0){\n            form.find(\"input[id$='profesor_dni']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n          }\n          form.find(\"input[id$='profesor_nombre']\").focus();\n          if(form.find(\"input[id$='profesor_nombre']\").val()==''){\n            form.find(\"input[id$='profesor_nombre']\").removeClass(\"invalid\");\n            form.find(\"input[id$='profesor_nombre']\").prev().find(\".error\").remove();\n            form.find(\"input[id$='profesor_nombre']\").next(\".mensaje\").remove();         \n          }\n        }\n      } \n    })\n  }\n  event.stopPropagation();\n});\n\n  // Función para mostrar imagen previa de un input file\n  function mostrarImagen(input) {\n    if (input.files && input.files[0]) {\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        $('#actualizada .img-small').attr('src', e.target.result);\n      }\n      reader.readAsDataURL(input.files[0]);\n    }\n  }\n\n  //Se muestra la misma foto que tiene inicialmente cuando se quiere añadir otra.\n  $(document).on(\"click\",\"#icono_añadir\",function() {\n    form= $(this).closest(\"form\");\n    if(!form.find(\"#actual\").hasClass('oculto')){\n      form.find(\"#actualizada img\").attr(\"src\",form.find(\"#actual img\").attr(\"src\"));\n    }\n    else if(!form.find(\"#por_defecto\").hasClass('oculto')){\n      form.find(\"#actualizada img\").attr(\"src\",form.find(\"#por_defecto img\").attr(\"src\"));\n    }\n  });\n\n  //Se comprueba que es válida la foto actualizada del usuario existente.\n  $(document).on(\"change\",\"form[id$='edit'] input[type='file']\",function() {\n    form= $(this).closest(\"form\");\n    mostrarImagen(this);\n\n    if (($(this))[0].files.length > 0) {\n      var sizeByte = ($(this))[0].files[0].size;\n      var siezekiloByte = parseInt(sizeByte / 1024);\n    }\n\n    extensiones_permitidas = new Array(\".png\", \".jpg\", \".jpeg\"); \n    extension = (form.find(\"input[type='file']\").val().substring(form.find(\"input[type='file']\").val().lastIndexOf(\".\"))).toLowerCase();\n    // Se comprueba si la extensión está entre las permitidas.\n    permitida = false;\n    for (var i = 0; i < extensiones_permitidas.length; i++) {\n      if (extensiones_permitidas[i] == extension) {\n        permitida = true;\n        break;\n      }\n    } \n\n    if(permitida && (siezekiloByte < $(this).attr('size')))\n    {\n      form.find(\"#error_foto\").empty();\n\n      form.find(\"div[class='columna_foto'] div[id!='iconos_foto']\").each(function(){\n        $(this).addClass(\"oculto\");\n      });\n      form.find(\"#actualizada\").removeClass(\"oculto\");\n      \n      if(form.find(\"#actual img\").attr(\"src\").indexOf(\"SinFoto\") >= 0)\n      {\n        form.find(\"#icono_eliminar\").removeClass(\"disable\");\n      }\n      else\n      {\n        form.find(\"#icono_restablecer\").removeClass(\"disable\");\n        form.find(\"#icono_eliminar\").removeClass(\"disable\");\n      }\n    }\n    else\n    {\n      form.find(\"#icono_eliminar\").addClass(\"disable\");\n      form.find(\"#icono_restablecer\").removeClass(\"disable\");\n      form.find(\"#actualizada img\").attr(\"src\",\"\");\n      form.find(\"div[class='columna_foto'] div[id!='iconos_foto']\").each(function(){\n        $(this).addClass(\"oculto\");\n      });\n      form.find('#por_defecto').removeClass(\"oculto\");\n      form.find(\"#error_foto\").empty();\n\n      if(!permitida)\n      {\n        form.find(\"#por_defecto img\").addClass('invalid');\n        form.find(\"#error_foto\").append(\"<p>- Archivo no válido.<br><br>Formatos válidos: .png / .jpg / .jpeg</p>\");\n      }\n      else\n      {\n        form.find(\"#por_defecto img\").addClass('invalid');\n        form.find(\"#error_foto\").append(\"<p>- El tamaño supera el limite permitido.<br><br>Tamaño máximo permitido: \"+$(this).attr('size')+\"KB</p>\");\n      }\n    }\n  });\n  \n  //Se comprueba que es válida la foto añadida al nuevo usuario.\n  $(document).on(\"change\",\"form[id$='nuevo'] input[type='file']\",function() {\n    form= $(this).closest(\"form\");\n    if(form.find(\"input[type='file']\")!= null)\n    {\n      form.find(\"#leyenda p\").remove();\n      form.find(\"#leyenda\").append(\"<p>\"+form.find(\"input[type='file']\").val()+\"</p>\");\n    }\n    if ($(this).attr('validation')) {    \n      validation($(this));\n    }\n  });\n\n  //////////////////////////////////\n  //           Centro             //\n  //////////////////////////////////\n\n  //Se actualiza los datos del centro\n  $(document).on(\"submit\",\"#centro_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    form.find(\":input[type!='file']\").each(function(){\n      if(!$(this).attr(\"validated\") || $(this).attr(\"validated\")==false){\n        if($(this).attr(\"validation\")){\n          validation($(this));\n        }\n      }\n    });\n\n    //\":input\"añade a los input radio,select...\n    form.find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    if(val==0){\n\n      $.ajax({\n        type: 'PUT',\n        url: $(this).attr('action'),\n        data:$(this).serialize(), \n  \n        success: function() {\n\n        var arr = form.attr('action').split('/');\n        tab=$(\".contenido_main\").find(\"div[aria-hidden='false']\");\n        $(tab).load(Routing.generate('centro_edit', {id:arr[5]}), function(responseTxt, statusTxt, xhr){\n            if(statusTxt == \"success\"){\n              form= $(\"#centro_edit\");\n\n              // Antiguo aviso de confirmación\n              //form.find(\"div[id='message']\").remove();\n              //form.find(\"div[id='result']\").html(\"<div id='message'></div>\");\n              //form.find(\"div[id='message']\").html(\"<h2> Datos actualizados</h2>\").hide();\n              //form.find(\"div[id='message']\").fadeIn('fast').delay(5000).fadeOut('slow');\n\n              // Notificación de confirmación.\n              $(\".ui-pnotify\").remove();\n              exito.play();\n\n              new PNotify({\n                text:\"Datos actualizados\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n            }\n\n            if(statusTxt == \"error\")\n              alert(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n          });\n        }\n      })\n      return false;\n    }\n  });\n\n  //Se abre la ventana modal para asignar horarios de atención del centro.\n  $(document).on('click',\"#centro_edit #horarios_atencion\",function(event){\n    event.preventDefault();\n   \n    $('#horarios_atencion_dialog').load(Routing.generate(\"horarios_atencion\"), function(){\n\n    }).dialog('open'); \n  });\n\n  //Se cierra la ventana modal de horarios de atención del centro.\n  $(document).on('click',\"#horarios_atencion_dialog #button_hora_centro\",function(event){\n    event.preventDefault();\n   \n    $('#horarios_atencion_dialog').dialog('close');\n    $('#horarios_atencion_dialog').empty();\n  });\n\n\n  function actualizarContenido(horario,div) {\n    array=horario.split(\"|\");\n\n    if(horario==\"\" || horario==null){\n      $(div).find(\"#show div[id*='hora_']>div\").append('<span class=\"no_horario\">Actualmente no existe ningún horario de contacto establecido.</span');\n    }\n    else{      \n      if(array[0].indexOf(\"-\")>0){\n        array[0]=reemplazarDatos(array[0]);\n        $(div).find(\"#show div[id*='hora_']>div\").append('<span class=\"dias\">De '+array[0]+'</span');\n      }\n      else{\n        array[0]=reemplazarDatos(array[0]);\n        $(div).find(\"#show div[id*='hora_']>div\").append('<span class=\"dias\">'+array[0]+'</span');\n      }\n\n      if(array[1].indexOf(\"/\")>0){\n        array[1]=array[1].replace(\"/\",\"  /  \");\n        array[1]=array[1].replace(/-/g,\"h. - \");\n        $(div).find(\"#show div[id*='hora_']>div\").append('<span class=\"horas\">'+array[1]+'</span');\n      }\n      else{\n        array[1]=array[1].replace(\"-\",\" - \");\n        $(div).find(\"#show div[id*='hora_']>div\").append('<span class=\"horas\">'+array[1]+'</span');\n      }\n    }\n  }\n  //Se guarda el nuevo horario en la base de datos.\n  $(document).on('click',\"#horarios_atencion_dialog .guardar\",function(event){\n    id=$(this).closest(\"div\").prev().prev();\n\n    // Se obtiene el horario.\n    contenido=\"\";\n    id.find(\"#list_added>span[class!='title']\").each(function(index, el) {\n      contenido+=$(this).find(\".color_day\").text();\n      contenido+=\"|\";\n      contenido+=$(this).find(\".color_hours\").text();\n      contenido+=\"*\";\n    });\n    contenido=contenido.substring(0,contenido.length-1);\n    contenido=contenido.replace(/ /g,\"\");\n    \n    // Se guarda el horario.\n    if(contenido==\"\"){\n      id.find(\".vacio\").removeClass('oculto');\n      id.next().next().find(\".guardar\").prop('disabled',true);\n      errorPNotify.play();\n      new PNotify({\n        title: \"Debe añadir un horario.\",\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        width: \"335px\",\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: left_Stack_dialog,\n        animate_speed: \"fast\",\n        animate: {\n          animate: true,\n          in_class: \"fadeInLeft\",\n          out_class: \"fadeOutLeft\",\n        }\n      });\n    }\n    else{\n      tipo=id.attr(\"id\");\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('registrar_horario_atencion'),\n        data:{tipo:tipo, contenido:contenido}, \n        dataType: 'json',\n        success: function(response){\n          exito.play();\n          new PNotify({\n            text:\"Nuevo horario registrado.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            animation: \"fade\",\n            animate_speed: 'fast',\n            delay: 4000,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack_dialog,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          //Se elimina el contenido que muestra el horario de atención.\n          $(id).find(\"#show div[id*='hora_']>div>span\").remove();\n         \n          //Se actualiza el nuevo horario de.\n          arr=contenido.split(\"*\");\n          for (var i = 0; i<arr.length; i++) {\n            actualizarContenido(arr[i],id);\n          }\n          id.next().next().find(\".volver\").click();\n        }\n      })\n    }\n  });\n  // Se elimina el horario actual de la base de datos.\n  $(document).on('click',\"#horarios_atencion_dialog .eliminar\",function(event){\n    id=$(this).closest(\"div\").prev();\n    aviso.play();\n    swal({\n      title: \"Eliminación del horario de atención.\",\n      text: \"¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        tipo=id.attr(\"id\");\n        contenido=\"\";\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('registrar_horario_atencion'),\n          data:{tipo:tipo, contenido:contenido}, \n          dataType: 'json',\n          success: function(response){\n            exito.play();\n            new PNotify({\n              text:\"Horario de atención eliminado.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack_dialog,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n\n            //Se elimina el contenido que muestra el horario de atención.\n            $(id).find(\"#show div[id*='hora_']>div>span\").remove();\n\n            //Se actualiza el aviso de horario de atención.\n            actualizarContenido(contenido,id);\n          }\n        })\n      }, function (dismiss) {\n        \n      }\n    );\n    return false;\n  });\n\n  //Se cambia de opción en la ventana modal de horarios de atención.\n  $(document).on(\"click\",\"#horarios_atencion_dialog #arrow_next_1\", function () {\n  $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'none' );\n    div=$(\"#horarios_atencion_dialog #formularios>div>div:visible\").attr(\"id\");\n\n   if(div==1){\n      $(\"#horarios_atencion_dialog #1\").hide(\"slide\",{ direction: \"left\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #2\").show(\"slide\", { direction: \"right\" }, 300, function() \n        { \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n    else if(div==2){\n      $(\"#horarios_atencion_dialog #2\").hide(\"slide\",{ direction: \"left\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #3\").show(\"slide\", { direction: \"right\" }, 300, function() \n        { \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n    else if(div==3){\n      $(\"#horarios_atencion_dialog #3\").hide(\"slide\",{ direction: \"left\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #4\").show(\"slide\", { direction: \"right\" }, 300, function() \n        { \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n    else{\n      $(\"#horarios_atencion_dialog #4\").hide(\"slide\",{ direction: \"left\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #1\").show(\"slide\", { direction: \"right\" }, 300, function() \n        { \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n  });\n\n  $(document).on(\"click\",\"#horarios_atencion_dialog #arrow_prev_1\", function () {\n    $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'none' );\n    div=$(\"#horarios_atencion_dialog #formularios>div>div:visible\").attr(\"id\");\n\n   if(div==1){\n      $(\"#horarios_atencion_dialog #1\").hide(\"slide\",{ direction: \"right\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #4\").show(\"slide\", { direction: \"left\" }, 300, function(){ \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n    else if(div==2){\n      $(\"#horarios_atencion_dialog #2\").hide(\"slide\",{ direction: \"right\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #1\").show(\"slide\", { direction: \"left\" }, 300, function(){ \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n    else if(div==3){\n      $(\"#horarios_atencion_dialog #3\").hide(\"slide\",{ direction: \"right\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #2\").show(\"slide\", { direction: \"left\" }, 300, function(){ \n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n    else{\n      $(\"#horarios_atencion_dialog #4\").hide(\"slide\",{ direction: \"right\" }, 300, function() \n      { \n        $(\"#horarios_atencion_dialog #3\").show(\"slide\", { direction: \"left\" }, 300, function() {\n          $(\"#horarios_atencion_dialog #formularios img\").css( 'pointer-events', 'auto' );\n        });\n      });\n    }\n  });\n\n\n  function restablecerDatos(div) {\n \n    $(div).find(\"input[type!='checkbox'][type!='radio']\").val(\"\"); \n    $(div).find(\"select\").val(\"\");\n    $(div).find(\"#tipo input:checked\").each(function() {\n      $(this).prop('checked', false);         \n    });\n    $(div).find(\"#selec\").click();\n    $(div).find(\"#simple\").click();\n    $(div).next().next().find(\".guardar\").prop(\"disabled\",true);\n\n    $(div).find(\".vacio\").addClass('oculto');\n  }\n\n  //Se añade un nuevo horario al contenedor seleccionado.\n  $(document).on('click',\"#horarios_atencion_dialog #add span\",function(event){\n    cont=$(this).closest(\".container_add\");\n    cont.find(\".vacio\").addClass(\"oculto\");\n\n    if($(this).parent().next().find(\"#list_added>span\").length<4){\n      horario=obtenerHorario(cont);\n      array=horario.split(\"|\");\n      cont.find(\"#list_added\").append('<span><p class=\"color_day\">'+array[0]+'</p><p class=\"color_hours\">'+array[1]+'</p><span></span></span>');\n      //Se deshabilita la opción de \"Añadir\" si hay 4 horarios añadidos.\n      if(cont.find(\"#list_added>span\").length==4){\n        cont.find(\"#add\").addClass('disab');\n      }\n      restablecerDatos(cont);\n      cont.next().next().find(\".guardar\").prop(\"disabled\",false);\n    }\n  });\n\n\n  //Opciones con los botones.\n  $(document).on('click',\"#horarios_atencion_dialog .nuevo\",function(event){\n    id=$(this).closest(\"div\").prev();\n    id.find(\"#edit\").removeClass('oculto');\n    id.find(\"#show\").addClass('oculto');\n    id.next().addClass('oculto');\n    id.next().next().removeClass('oculto');\n  });\n\n  $(document).on('click',\"#horarios_atencion_dialog .volver\",function(event){\n    id=$(this).closest(\"div\").prev().prev();\n    id.find(\"#edit\").addClass('oculto');\n    id.find(\"#show\").removeClass('oculto');\n    id.next().removeClass('oculto');\n    id.next().next().addClass('oculto');\n    id.find(\"#edit #add\").addClass('disab');\n    //Se restablece el contenedor.\n    restablecerDatos(id);\n    id.find(\"#list_added span[class!='title']\").remove();\n  });\n\n  //////////////////////////////////\n  //           Cursos             //\n  //////////////////////////////////\n  \n  // Se abre la ventana modal de Añadir curso\n  $(document).on('click',\"#registro_cursos a[id$='_modal']\",function(event){\n    event.preventDefault();\n    var nivel= $(this).attr('id').split('_');\n    \n    $('#cursos_dialog').load(Routing.generate(\"curso_new\"), function(){\n      $('#cursos_dialog form').attr(\"nivel\",nivel[1].charAt(0).toUpperCase() + nivel[1].slice(1) );\n      $(\"#curso_nivel\").val($(\"#curso_nuevo\").attr(\"nivel\"));\n    }).dialog('open'); \n  });\n\n  // Se abre la ventana modal de Editar curso\n  $(document).on('click',\"#registro_cursos a[href$='edit']\",function(event){\n    event.preventDefault();\n    var arr= $(this).attr('href').split('/');\n    $('#cursos_dialog').load(Routing.generate(arr[4]+\"_edit\", {id:arr[5]}), function(){\n    }).dialog('open'); \n  });\n\n  // Se abre la ventana modal de Ordenar cursos\n  $(document).on('click',\"#registro_cursos #ordenar\",function(event){\n    event.preventDefault();\n\n    $('#ordenar_cursos_dialog').load(Routing.generate(\"Listar_cursos\"), function(){\n      //Se centra la ventana modal en la pantalla.\n      $('.ui-dialog').position({my: 'center', at: 'center', of: window, collision: 'fit'});\n      //Se abre la ventana modal una vez cargado el contenido.\n      $('#ordenar_cursos_dialog').dialog('open');\n    }); \n\n  });\n\n  //Función para centrar ventana modal al cambiar el tamaño de la pantalla.\n  $(window).resize(function(event) {\n    $('div[id*=\"_dialog\"]').parent().position({\n        my: 'center',\n        at: 'center',\n        of: window,\n        collision: 'fit'\n    });\n  });\n  $(document).on(\"click\",\"#ordenar_cursos_dialog #guardar\",function(event){\n    event.preventDefault();\n    // Se usa el método serialize de sortable para obtener un array con los id ordenados. \n    var cursos = $(\"#ordenar_cursos\").sortable(\"serialize\", {attribute: \"id\"});\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('ordenar_cursos'),\n      data: cursos,\n      dataType: 'json',\n      success: function(response) {      \n        $(\"#ordenar_cursos_dialog\").dialog('close');\n        $(\"#grupos_curso\").update_tab();\n        $(\"#nuevo_curso\").update_tab();\n        $(\"#asignar_aula\").update_tab();\n        $(\"#lista_cursos select\").load(Routing.generate('curso_list'));\n        $(\"#alumno_cursoIngreso\").load(Routing.generate('curso_list'));\n      } \n    })\n  });\n\n  $(document).on(\"click\",\"#ordenar_cursos_dialog #restablecer\",function(event){\n    event.preventDefault();\n    $('#ordenar_cursos_dialog').load(Routing.generate(\"Listar_cursos\"), function(){\n      //Se centra la ventana modal en la pantalla.\n      $('.ui-dialog').position({my: 'center', at: 'center', of: window, collision: 'fit'});\n      //Se abre la ventana modal una vez cargado el contenido.\n      $('#ordenar_cursos_dialog').dialog('open');\n    });\n  });\n\n\n\n  $(document).on(\"submit\",\"#curso_nuevo\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).closest(\"form\").find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).closest(\"form\").find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el primer input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    if(val==0){\n      $.ajax({\n      type: 'POST',\n      url: $(this).attr('action'),\n      data:$(this).serialize(), \n      dataType: 'json',\n  \n      // Mostramos un mensaje con la respuesta de PHP\n      success: function(response) {\n\n        if(response.error){\n          error.play();\n          swal({\n            title: \"Curso registrado en el sistema\",\n            text: 'El curso introducido ya está registrado en el sistema.',\n            type: \"error\",\n            confirmButtonColor: color\n          });\n          return false;\n        }\n        // Se crean los grupos correspondiente al curso.\n        var curso=$(\"#curso_curso\").val();\n        var nivel=$(\"#curso_nivel\").val();\n        var num_grupos=1;\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('Asignar_Ngrupos'),\n          data: {curso:curso,nivel:nivel,num_grupos:num_grupos},\n        })\n        \n        $(\"#cursos_dialog\").dialog('close');\n        limpiarForm(form);\n        \n        div=$(\"#registro_cursos\").closest(\"div[id^='tabs-']\");\n        $(div).empty();\n        $(div).load(Routing.generate('curso'));\n\n        $(\"#tabs #lista_cursos\").empty();\n        $(\"#tabs #lista_cursos\").load(Routing.generate('alumno_listaCursos'));\n        \n        $(\"#button_grupos_rest\").trigger(\"click\");\n\n        //Actualización del contenido de pestañas.\n        $(\"#asignar_aula\").update_tab();\n        $(\"#asignaturas_cursos\").update_tab();\n        $(\"#tutor_grupo\").update_tab();\n        $(\"#profesor_asignar_grupo\").update_tab();\n        $(\"#alumnos_multiple\").update_tab();\n        $(\"#anular_matricula\").update_tab();\n        $(\"#asignar_grupo\").update_tab();\n        $(\"#ficha_alumno\").update_tab();\n        $(\"#grupos_curso\").update_tab();\n        $(\"#asignaturas_cursos\").update_tab();\n        $(\"#ratio_curso\").update_tab();\n\n        },\n      error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {\n            if(response.responseJSON.result == 0) {\n              //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n               form.find(\":input\").each(function(i){  \n                $(this).prev().find(\".error\").remove();\n                $(this).next(\".mensaje\").remove();\n                $(this).removeClass(\"invalid\");\n                $(this).attr(\"validated\", true);\n              });\n              //Se muestra los campos inválidos.        \n              for (var key in response.responseJSON.data) { \n                form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");   \n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n                form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n            } \n            alert(response.responseJSON.message);\n          } \n          else {\n            alert(desc);\n          }\n        }\n      })\n    }\n  });\n\n  $(document).on(\"submit\",\"#curso_edit\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).closest(\"form\").find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).closest(\"form\").find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el primer input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    if(val==0){\n      $.ajax({\n        type: 'PUT',\n        url: $(this).attr('action'),\n        data:$(this).serialize(), \n  \n        success: function(response) {\n\n        if(response.error){\n          error.play();\n          swal({\n            title: \"Curso registrado en el sistema\",\n            text: 'El curso introducido ya está registrado en el sistema.',\n            type: \"error\",\n            confirmButtonColor: color\n          });\n          return false;\n        }\n\n        $(\"#cursos_dialog\").dialog('close');\n        tab=$(\".contenido_main\").find(\"div[aria-hidden='false']\");\n        $(tab).load(Routing.generate('curso'));\n        $(\"#tabs #lista_cursos\").empty();\n        $(\"#tabs #lista_cursos\").load(Routing.generate('alumno_listaCursos'));\n\n        //Actualización del contenido de pestañas.\n        $(\"#asignar_aula\").update_tab();\n        $(\"#asignaturas_cursos\").update_tab();\n        $(\"#tutor_grupo\").update_tab();\n        $(\"#profesor_asignar_grupo\").update_tab();\n        $(\"#alumnos_multiple\").update_tab();\n        $(\"#anular_matricula\").update_tab();\n        $(\"#asignar_grupo\").update_tab();\n        $(\"#ficha_alumno\").update_tab();\n        $(\"#grupos_curso\").update_tab();\n        $(\"#asignar_horario\").update_tab();\n        $(\"#asignaturas_cursos\").update_tab();\n        $(\"#ratio_curso\").update_tab();\n\n        $(\"#button_grupos_rest\").trigger(\"click\");\n        }\n      })  \n    }\n  });\n\n  $(document).on(\"click\",\"#curso_delete button\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    var arr= $('#curso_delete').attr('action').split('/');\n\n    var curso=$('#curso_curso').val();\n    var nivel=$('#curso_nivel').val();\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('alumnos_asignados_curso'),\n      data: {curso:curso,nivel:nivel},\n      dataType: 'json',\n  \n      success: function(response) {\n        aviso.play();\n        swal({\n          title: \"Eliminación del curso del sistema\",\n          text: \"¿Estas seguro de continuar? No podrás deshacer este paso...\",\n          type: \"warning\",\n          showCancelButton: true,\n          cancelButtonText: \"Cancelar\",\n          confirmButtonColor: color,\n          confirmButtonText: \"¡Adelante!\"\n          }).then(function () {\n\n            // Si no hay alumnos asignados al curso se puede eliminar.\n            if(response.data!=null){ \n              error.play();\n              swal({\n                title: \"La eliminación no se ha efectuado\",\n                html: '<p class=\"justificado\">El curso <span class=\"negrita\">'+curso+\" de \"+nivel+'</span> no se puede eliminar porque existen alumnos matriculados en este curso. Debe cancelar las matrículas del curso para poder eliminarlo.</p>',\n                type: \"error\",\n                confirmButtonColor: color,\n              });\n              $(\"#cursos_dialog\").dialog('close');\n            }\n            else{\n              // Se elimina el curso y sus relaciones (imparte y grupo). \n              $.ajax({\n                type: 'DELETE',\n                url: Routing.generate(arr[4]+\"_delete\", {id:arr[5]}),\n                data: $('#curso_delete').serialize(),\n        \n                success: function() {\n                  $(\"#cursos_dialog\").dialog('close');\n                  tab=$(\".contenido_main\").find(\"div[aria-hidden='false']\");\n                  $(tab).load(Routing.generate('curso'));\n        \n                  $(\"#tabs #lista_cursos\").empty();\n                  $(\"#tabs #lista_cursos\").load(Routing.generate('alumno_listaCursos'));\n      \n                  $(\"#button_grupos_rest\").trigger(\"click\");\n\n                  //Actualización del contenido de pestañas.\n                  $(\"#asignar_aula\").update_tab();\n                  $(\"#asignaturas_cursos\").update_tab();\n                  $(\"#tutor_grupo\").update_tab();\n                  $(\"#profesor_asignar_grupo\").update_tab();\n                  $(\"#alumnos_multiple\").update_tab();\n                  $(\"#anular_matricula\").update_tab();\n                  $(\"#asignar_grupo\").update_tab();\n                  $(\"#ficha_alumno\").update_tab();\n                  $(\"#grupos_curso\").update_tab();\n                  $(\"#asignar_horario\").update_tab();\n                  $(\"#asignaturas_cursos\").update_tab();\n                  $(\"#ratio_curso\").update_tab();\n                }\n              })\n            }\n          }, function (dismiss) {\n\n          }\n        );     \n      }\n    })\n    return false;\n  });\n\n  //////////////////////////////////\n  //    Nº de grupos por curso    //\n  //////////////////////////////////\n\n  // Se indica el select modificado.\n  $(document).on('change',\"#Ngrupo\",function(event){\n    $(this).closest(\"tr\").find(\"select\").removeClass(\"error_guardar\");\n    $(this).closest(\"tr\").find(\"span\").addClass(\"oculto\");\n    if(!$(\"#registro_Ngrupos\").find(\"select\").hasClass('error_guardar')){\n      $(\"#registro_Ngrupos #aviso_error\").addClass(\"oculto\");\n    }\n\n    if($(this).val()!=$(this).find(\"option[selected='selected']\").val()){\n      $(this).addClass(\"modified\");\n    }\n    else{\n      $(this).removeClass(\"modified\");\n    }\n  });\n\n  // Se quita la marca del select modificado y se crea o se elimina el Nº de grupos correspondiente.\n  $(document).on('click',\"#contenedor_registro_Ngrupos button\",function(event){\n    if (!$(this).closest(\"tr\").find(\"select\").hasClass('modified')){\n      return false;\n    }\n    if (!$(this).closest(\"tbody\").find(\"select\").hasClass('error_guardar')){\n      //$(\"#aviso_error\").addClass(\"oculto\");\n      $(this).closest(\"tr\").find(\"span\").addClass(\"oculto\");\n    }\n    //$(this).closest(\"tr\").find(\"select\").removeClass(\"error_guardar\");\n\n    num_grupos=$(this).closest(\"tr\").find(\"select\").val();\n    num_grupos_ant=$(this).closest(\"tr\").find(\"select option[selected='selected']\").val();\n    curso=$(this).closest(\"tr\").children('td').slice(1, 2).html();\n    nivel=$(this).closest(\"tr\").children('td').slice(2, 3).html();\n\n    tr=$(this).closest(\"tr\");\n\n    if(num_grupos<num_grupos_ant){\n      /**/\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('alumnos_asignados_grupo'),\n        data: {curso:curso,nivel:nivel,num_grupos:num_grupos,num_grupos_ant:num_grupos_ant},\n        dataType: 'json',\n        async:false,\n  \n        success: function(response) {\n\n          // Si no hay alumnos o profesores asignados al grupo se puede eliminar.\n          if(response.data!=null){\n            blocker.play();  \n            tr.find(\"select\").addClass(\"modified\");\n            tr.find(\"select\").addClass(\"error_guardar\");\n            tr.find(\"select\").removeClass(\"modified\");\n            $(\"#registro_Ngrupos #aviso_error\").removeClass(\"oculto\");\n            tr.find(\"span\").removeClass(\"oculto\");\n            //alert(response.data);\n            //tr.find(\"select\").val(num_grupos_ant);\n          }\n          else{\n            // Se actualiza el atributo numGrupos de la entidad Curso y se crean los grupos correspondiente al curso.\n            $.ajax({\n              type: 'POST',\n              url: Routing.generate('Asignar_Ngrupos'),\n              data: {curso:curso,nivel:nivel,num_grupos:num_grupos},\n              async:false,\n            })\n\n            tr.find(\"select\").removeClass(\"modified\");\n\n            tr.find(\"select option:eq(\"+(num_grupos-1)+\")\").attr('selected',true);\n            tr.find(\"select option:eq(\"+(num_grupos_ant-1)+\")\").attr('selected',false);\n\n            // Se actualizan las pestañas que utilicen grupos.\n            $(\"#asignar_aula\").update_tab();\n            $(\"#asignar_grupo\").update_tab();\n            $(\"#profesor_asignar_grupo\").update_tab();\n            $(\"#tutor_grupo\").update_tab();\n          }\n        }\n      })\n    \n      return false;\n\n    }\n    $(this).closest(\"tr\").find(\"select\").removeClass(\"error_guardar\");\n    $(this).closest(\"tr\").find(\"select\").removeClass(\"modified\");\n\n    $(\"#registro_Ngrupos #aviso_error\").addClass(\"oculto\");\n    // Se actualiza el atributo numGrupos de la entidad Curso y se crean los grupos correspondiente al curso.\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('Asignar_Ngrupos'),\n      data: {curso:curso,nivel:nivel,num_grupos:num_grupos},\n      async:false,\n\n    })\n\n    $(this).closest(\"tr\").find(\"select option:eq(\"+(num_grupos-1)+\")\").attr('selected',true);\n    $(this).closest(\"tr\").find(\"select option:eq(\"+(num_grupos_ant-1)+\")\").attr('selected',false);\n\n    // Se actualiza la pestaña de asignar aula.\n    $(\"#asignar_aula\").update_tab();\n  });\n\n  // Se modifica el nº de grupo en todos los cursos a la vez.\n  $(document).on('change',\"#select_grupos_all\",function(event){\n    value=$(\"#select_grupos_all\").val();\n\n    //Se desactiva la primera opción del select.\n    $(this).find(\"option:eq('0')\").prop(\"disabled\", true);\n\n    $(\"#contenedor_registro_Ngrupos select\").each(function(){\n      if($(this).val()!=value){\n        $(this).closest(\"tr\").find(\"span\").addClass(\"oculto\");\n        $(this).removeClass(\"error_guardar\");\n\n        if(value!=$(this).find(\"option[selected='selected']\").val()){\n          $(this).addClass(\"modified\");\n        }\n        else{\n          $(this).removeClass(\"modified\");\n        }\n        $(this).val(value);\n      }  \n    });\n\n    if (!$(\"#contenedor_registro_Ngrupos\").find(\"select\").hasClass('error_guardar')){\n      $(\"#registro_Ngrupos #aviso_error\").addClass(\"oculto\");\n    }\n  });\n\n  // Se quita la marca de los select modificados y se crea o se elimina el Nº de grupos correspondiente.\n  $(document).on('click',\"#registro_Ngrupos #button_grupos_all\",function(event){\n    $(\"#registro_Ngrupos #button_grupos_all\").addClass('oculto');\n    $(\"#registro_Ngrupos #button_grupos_rest\").addClass('oculto');\n    $(\"#registro_Ngrupos #load\").removeClass('oculto');\n\n    $(\"#contenedor_registro_Ngrupos select[class='modified']\").each(function(){  \n      $(this).closest(\"tr\").find(\"button\").click();\n    });\n\n    $(\"#registro_Ngrupos #button_grupos_all\").removeClass('oculto');\n    $(\"#registro_Ngrupos #button_grupos_rest\").removeClass('oculto');\n    $(\"#registro_Ngrupos #load\").addClass('oculto');\n    // Se actualiza las pestañas una vez asignado todo.\n    $(\"#select_grupos_all option:eq(0)\").prop('selected', true);\n      setTimeout(function(){ \n        $(\"#asignar_aula\").update_tab();\n        $(\"#tutor_grupo\").update_tab();\n        $(\"#profesor_asignar_grupo\").update_tab();\n      },3000);\n  \n  });\n\n  // Se actualiza la pestaña de asignar grupos.\n  $(document).on('click',\"#registro_Ngrupos #button_grupos_rest\",function(event){\n    div=$(this).closest(\"div[id^='tabs-']\");\n    $(div).load(Routing.generate(\"curso_show\"));\n  });\n\n\n  //////////////////////////////////\n  //         Asignar Aula         //\n  //////////////////////////////////\n\n  // Se indica el select modificado.\n  $(document).on('change',\"#aula\",function(event){\n    if(($(this).val()==\"\" && $(this).attr(\"value\")==\"\") || $(this).val()==$(this).attr(\"value\")){\n      $(this).removeClass(\"modified\");\n    }\n    else{\n      $(this).addClass(\"modified\");\n    }\n  });\n  // Se muestra la lista de aulas disponibles para asignar a un grupo.\n  $(document).on('click',\"#contenedor_asignar_aula input\",function(event){\n    event.preventDefault();\n    tr=$(this).closest(\"tr\");\n\n    $('#aulas_dialog').load(Routing.generate(\"Listar_aulas\"), function(){\n      //Se centra la ventana modal en la pantalla.\n      $('.ui-dialog').position({my: 'center', at: 'center', of: window, collision: 'fit'});\n      //Se abre la ventana modal una vez cargado el contenido.\n      $(\"#aulas_dialog #curso\").append(tr.find(\"td:nth-child(1)\").text()+\" de \"+tr.find(\"td:nth-child(2)\").text()+\" - Grupo \"+tr.find(\"td:nth-child(3)\").text());\n      $(\"#aulas_dialog #content-form div\").attr(\"grupo\",tr.attr(\"id\"));\n      //Se elmina de la ventana modal todas las aulas ocupadas.\n      $(\"#asignar_aula .contenedor_registro input[class='asig']\").each(function(i){  \n        id=$(this).attr(\"id\");\n        $(\"#aulas_dialog button[id='\"+id+\"']\").remove();\n      });\n\n      if($(\"#aulas_dialog #content-form button\").size()==0){\n        $(\"#aulas_dialog #content-form p\").remove();\n        $(\"#aulas_dialog #content-form\").append(\"<p class='vacio'>No quedan más aulas disponibles</p>\");\n      }\n      $('#aulas_dialog').dialog('open');\n    }); \n  });\n\n  // Se asigna el aula al grupo seleccionado.\n  $(document).on('click',\"#aulas_dialog #content-form button\",function(event){\n\n      grupo=$(this).closest(\"div\").attr(\"grupo\");\n      aula=$(this).attr(\"id\");\n\n      // Se actualiza el atributo aula de la entidad Grupo.\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('asignar_aula'),\n        data: {grupo:grupo,aula:aula},\n        success: function(response) {\n          $(\"#aulas_dialog\").dialog('close');\n          $(\"#asignar_aula\").update_tab();\n          $(\"#asignar_aula #vaciar\").prop(\"disabled\",false);\n        }\n      })\n  });\n\n  $(document).on('click',\"#aulas_dialog #cancelar\",function(event){\n    $(\"#aulas_dialog\").dialog('close');\n  });\n\n  $(document).on('click',\"#asignar_aula #vaciar\",function(event){\n    aviso.play();\n    swal({\n      title: \"Eliminación de asignaciones de aulas.\",\n      html: \"<p>Se eliminarán todas las asignaciones de aulas de los grupos.</p></br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('vaciar_aulas'),\n          success: function(response) {\n            $(\"#asignar_aula\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  // Se elimina el aula asignada al grupo seleccionado.\n  $(document).on('click',\"#contenedor_asignar_aula img\",function(event){\n      grupo=$(this).closest(\"tr\").attr(\"id\");\n      aula=null;\n\n      // Se actualiza el atributo aula de la entidad Grupo.\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('asignar_aula'),\n        data: {grupo:grupo,aula:aula},\n        success: function(response) {\n          $(\"#aulas_dialog\").dialog('close');\n          $(\"#asignar_aula\").update_tab();\n\n          //Se deshabilita el botón de vaciar aulas cuando no hay ninguna asignada.\n          if($(\"#contenedor_asignar_aula input[value!='']\").size()==0){\n            $(\"#asignar_aula #vaciar\").prop(\"disabled\",true);\n          }\n        }\n      })\n  });\n\n\n  // Se hace click en toda la fila de la tabla.\n  $(document).on('click',\".contenedor_registro .inner_table td\",function(event){\n    $(this).find(\"a\").trigger(\"click\");\n  });\n\n\n//////////////////////////////////\n//         Asignaturas          //\n//////////////////////////////////\n  //Se muestra la edición de asignatura al darle click sobre el div del color.\n  $(document).on('click',\"#registro_asignaturas td span\",function(event){\n    $(this).closest(\"td\").prev().find(\"a\").click();\n  });\n\n  $(document).on('click',\"#registro_asignaturas a[id$='_modal']\",function(event){\n    event.preventDefault();\n    var tipo= $(this).attr('id').split('_');\n    var num=$(this).closest(\"div\").next().find(\".underline\").size();\n    $('#asignaturas_dialog').load(Routing.generate(\"asignatura_new\"), function(){\n      $('#asignaturas_dialog form').attr(\"tipo\",tipo[1].charAt(0).toUpperCase() + tipo[1].slice(1) );\n      $(\"#asignatura_tipo\").val($(\"#asignatura_nueva\").attr(\"tipo\"));\n      //Se oculta el checkbox \"opcional\" al registrar asignaturas troncales.\n      if(tipo[1]==\"troncal\"){\n        $(\"#asignatura_opcional\").closest('div').addClass('oculto');\n      }\n      //Se establece como máximo 3 asignaturas opcionales.\n      if(num==3){\n        $(\"#asignatura_opcional\").prop(\"disabled\",true);\n        $(\"#asignatura_opcional\").attr(\"title\",\"Solo se permiten 3 asignaturas opcionales\");\n        $(\"#asignatura_opcional\").css(\"cursor\",\"default\");\n      }\n    }).dialog('open'); \n  });\n\n  $(document).on('click',\"#registro_asignaturas a[href$='edit']\",function(event){\n    event.preventDefault();\n    var arr= $(this).attr('href').split('/');\n    var num=$(this).closest(\"table\").find(\".underline\").size();\n    $('#asignaturas_dialog').load(Routing.generate(arr[4]+\"_edit\", {id:arr[5]}), function(){\n      //Se establece como máximo 3 asignaturas opcionales.\n      if(num==3 && !$(\"#asignatura_opcional\").is(':checked')){\n        $(\"#asignatura_opcional\").prop(\"disabled\",true);\n        $(\"#asignatura_opcional\").attr(\"title\",\"Solo se permiten 3 asignaturas opcionales\");\n        $(\"#asignatura_opcional\").css(\"cursor\",\"default\");\n      }\n    }).dialog('open'); \n  });\n\n  $(document).on(\"submit\",\"#asignatura_nueva\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).closest(\"form\").find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).closest(\"form\").find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el primer input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    //Se muestra el aviso de error si no tiene color seleccionado.\n    if($(\"#asignaturas_dialog #asignatura_color\").hasClass('invalid')){\n      $(\"#asignaturas_dialog #color\").addClass('invalid');\n      $(\"#asignaturas_dialog #div_error\").removeClass('oculto');\n    }\n\n  if(val==0){\n    $.ajax({\n      type: 'POST',\n      url: $(this).attr('action'),\n      data:$(this).serialize(), \n      dataType: 'json',\n  \n      // Mostramos un mensaje con la respuesta de PHP\n      success: function(response) {\n        if(response.error){\n          error.play();\n          swal({\n            title: \"Asignatura registrada en el sistema\",\n            text: 'La asignatura introducida ya está registrada en el sistema.',\n            type: \"error\",\n            confirmButtonColor: color,\n          });\n          return false;\n        }\n        if(response.opcional){\n          error.play();\n          swal({\n            title: \"Asignatura Específica No Opcional\",\n            text: 'Existen 3 asignaturas opcionales registradas en el sistema, por lo que la asignatura actual se ha registrado como no opcional.',\n            type: \"warning\",\n            confirmButtonColor: color,\n          });\n        }\n        \n        //Actualización de pestañas.\n        $(\"#asignaturas_cursos\").update_tab();\n        $(\"#profesor_asignar_grupo\").update_tab();\n        $(\"#asignar_horario\").update_tab();\n        $(\"#asignar_optativa\").update_tab();\n\n        $(\"#asignaturas_dialog\").dialog('close');\n        limpiarForm(form);\n        \n        div=$(\"#registro_asignaturas\").closest(\"div[id^='tabs-']\");\n        $(div).empty();\n        $(div).load(Routing.generate('asignatura'));\n        //Actualizamos las listas de asignaturas de las demás pestañas.\n        //$(\"#tabs #lista_asignaturas\").empty();\n        //$(\"#tabs #lista_asignaturas\").load(Routing.generate('alumno_listaAsignaturas'));\n        },\n        error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {\n            if(response.responseJSON.result == 0) {\n              //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n               form.find(\":input\").each(function(i){  \n                $(this).prev().find(\".error\").remove();\n                $(this).next(\".mensaje\").remove();\n                $(this).removeClass(\"invalid\");\n                $(this).attr(\"validated\", true);\n              });\n              //Se muestra los campos inválidos.        \n              for (var key in response.responseJSON.data) { \n                form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");   \n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n                form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n            } \n            alert(response.responseJSON.message);\n          } \n          else {\n            alert(desc);\n          }\n        }\n      })\n    }\n  });\n\n  $(document).on(\"submit\",\"#asignatura_edit\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).closest(\"form\").find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).closest(\"form\").find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el primer input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    //Se muestra el aviso de error si no tiene color seleccionado.\n    if($(\"#asignaturas_dialog #asignatura_color\").hasClass('invalid')){\n      $(\"#asignaturas_dialog #color\").addClass('invalid');\n      $(\"#asignaturas_dialog #div_error\").removeClass('oculto');\n    }\n\n    if(val==0){\n\n      elemento=$(this);\n      //Se comprueba si se modifica una asignatura añadiendo/eliminando la opción \"opcional\" para eliminar todas las asignaciones de todas las asignaturas opcionales.\n      if($(\"#asignatura_edit #asignatura_opcional\").hasClass('modified')){\n        aviso.play();\n        swal({\n          title: \"Actualización de Asignatura Opcional\",\n          html: \"<p class='justificado'>Se va a realizar cambios en una asignatura específica opcional, por lo que se eliminará todas las asignaciones de esta asignatura registrada en el sistema.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n          type: \"warning\",\n          showCancelButton: true,\n          cancelButtonText: \"Cancelar\",\n          confirmButtonColor: color,\n          confirmButtonText: \"¡Adelante!\"\n          }).then(function () {\n            opcional=1;//Variable para indicar si se ha modificado una asignatura opcional.\n            $.ajax({\n              type: 'PUT',\n              url: elemento.attr('action'),\n              data:elemento.serialize()+\"&opcional=\"+opcional, \n  \n              success: function(response) {\n\n                if(response.error){\n                  error.play();\n                  swal({\n                    title: \"Asignatura registrada en el sistema\",\n                    text: 'La asignatura introducida ya está registrada en el sistema.',\n                    type: \"error\",\n                    confirmButtonColor: color,\n                  });\n                  return false;\n                }\n                if(response.opcional){\n                  error.play();\n                  swal({\n                    title: \"Asignatura Específica No Opcional\",\n                    text: 'Existen 3 asignaturas opcionales registradas en el sistema, por lo que la asignatura actual se ha guardado como no opcional.',\n                    type: \"warning\",\n                    confirmButtonColor: color,\n                  });\n                }\n\n                //Actualización de pestañas.\n                $(\"#asignaturas_cursos\").update_tab();\n                $(\"#profesor_asignar_grupo\").update_tab();\n                $(\"#asignar_horario\").update_tab();\n                $(\"#asignar_optativa\").update_tab();\n\n                $(\"#asignaturas_dialog\").dialog('close');\n                tab=$(\".contenido_main\").find(\"div[aria-hidden='false']\");\n                $(tab).load(Routing.generate('asignatura'));\n                //$(\"#tabs #lista_asignaturas\").empty();\n                //$(\"#tabs #lista_asignaturas\").load(Routing.generate('alumno_listaAsignatura'));\n\n              }\n            })\n          }, function (dismiss) {\n\n          }\n        );\n      }\n      else{\n        opcional=0;//Variable para indicar si se ha modificado una asignatura opcional.\n        $.ajax({\n          type: 'PUT',\n          url: $(this).attr('action'),\n          data:$(this).serialize()+\"&opcional=\"+opcional, \n  \n          success: function(response) {\n\n            if(response.error){\n              error.play();\n              swal({\n                title: \"Asignatura registrada en el sistema\",\n                text: 'La asignatura introducida ya está registrada en el sistema.',\n                type: \"error\",\n                confirmButtonColor: color,\n              });\n              return false;\n            }\n            if(response.opcional){\n              error.play();\n              swal({\n                title: \"Asignatura Específica No Opcional\",\n                text: 'Existen 3 asignaturas opcionales registradas en el sistema, por lo que la asignatura actual se ha guardado como no opcional.',\n                type: \"warning\",\n                confirmButtonColor: color,\n              });\n            }\n\n            //Actualización de pestañas.\n            $(\"#asignaturas_cursos\").update_tab();\n            $(\"#profesor_asignar_grupo\").update_tab();\n            $(\"#asignar_horario\").update_tab();\n            $(\"#asignar_optativa\").update_tab();\n\n            $(\"#asignaturas_dialog\").dialog('close');\n            tab=$(\".contenido_main\").find(\"div[aria-hidden='false']\");\n            $(tab).load(Routing.generate('asignatura'));\n            //$(\"#tabs #lista_asignaturas\").empty();\n            //$(\"#tabs #lista_asignaturas\").load(Routing.generate('alumno_listaAsignatura'));\n          }\n        })\n      }\n    }\n  });\n\n\n  $(document).on(\"click\",\"#asignatura_delete button\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    var arr= $('#asignatura_delete').attr('action').split('/');\n    aviso.play();\n    swal({\n      title: \"Eliminación de la asignatura.\",\n      html: \"<p class='justificado'>Se va a eliminar la asignatura del sistema y todas las asignaciones de esta asignatura registradas en el sistema.</p></br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'DELETE',\n          url: Routing.generate(arr[4]+\"_delete\", {id:arr[5]}),\n          data: $('#asignatura_delete').serialize(),\n        \n          success: function() {\n            $(\"#asignaturas_dialog\").dialog('close');\n            tab=$(\".contenido_main\").find(\"div[aria-hidden='false']\");\n            $(tab).load(Routing.generate('asignatura'));\n            //$(\"#tabs #lista_asignaturas\").empty();\n            //$(\"#tabs #lista_asignaturas\").load(Routing.generate('alumno_listaAsignatura'));\n            \n            //Actualización de pestañas.\n            $(\"#asignaturas_cursos\").update_tab();\n            $(\"#profesor_asignar_grupo\").update_tab();\n            $(\"#asignar_horario\").update_tab();\n            $(\"#asignar_optativa\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n      return false;\n  });\n\n\n//////////////////////////////////\n//     Asignaturas por curso    //\n//////////////////////////////////\n\n  $(document).on('click',\"#asignaturas_cursos a[id$='_modal']\",function(event){\n    event.preventDefault();\n    var curso= $(this).closest(\"h2\").text();\n    var id=$(this).closest(\"div\").attr(\"idcurso\");\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_asignaturas'),\n      success: function(response) {\n        // Si no hay asignaturas registradas muestra un aviso.\n        if(response.data==null){\n          error.play(); \n          swal({\n            title:\"No se pueden asignar asignaturas\",\n            text: 'Actualmente no hay asignaturas registrada en el sistema',\n            type: \"error\",\n            showCancelButton: false,\n            confirmButtonColor: color\n          });\n        }\n        else{\n          $('#asignatura_curso_dialog').load(Routing.generate(\"asignaturas_curso_new\", {id:id}), function(){\n          }).dialog('open'); \n        }\n      }\n    })\n  });\n\n  //Se asigna todas las asignaturas troncales al curso.\n  $(document).on('click',\"#asignatura_curso_dialog #all_troncales\",function(event){\n    event.preventDefault();\n    $(\"#asignatura_curso_dialog #lista_troncal button\").click();\n    $(this).addClass('disabled');\n  });\n\n  //Se asigna todas las asignaturas específicas al curso.\n  $(document).on('click',\"#asignatura_curso_dialog #all_especificas\",function(event){\n    event.preventDefault();\n    $(\"#asignatura_curso_dialog #lista_especifica button\").click();\n    $(this).addClass('disabled');\n  });\n\n  $(document).on('click',\"#asignatura_curso_dialog #asignaturas_curso_restablecer\",function(event){\n    event.preventDefault();\n    $(\"#asignaturas_cursos #contenedor_registro:not(.oculto) img\").click();\n  });\n\n  $(document).on('click',\"#asignatura_curso_dialog #asignaturas_curso_submit\",function(event){\n    event.preventDefault();\n\n    var nuevas = new Object();\n    var asignadas = new Object();\n    var eliminadas = Array();\n\n    var valor=0;\n    //Se asigna un valor para el error de distinto Nº de Módulos para asignaturas opcionales  y se eliminan los avisos previamente.\n    var opcional=0;\n    $(\"#asignatura_curso_dialog .aviso_opcional\").remove();\n    $(\"#asignatura_curso_dialog .aviso_opcional2\").remove();\n\n    // Se valida que ningún input esté vacío. Si hay algún input vacío no se realiza nada.\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li input[type='number']\").each(function(){ \n      if($(this).val()==\"\"){\n        $(this).addClass(\"invalid\");\n        valor=1;\n      }\n    });\n\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1'] input[type='number']\").each(function(){\n      num=$(this).val();\n      $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1'] input[type='number']\").each(function(){\n        if($(this).val()!=num){\n          $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1'] input[type='number']\").addClass(\"invalid\");\n          opcional=1;\n        }\n      });\n    });\n\n    if(opcional==1){\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n      $(\"#asignatura_curso_dialog #aviso_error\").addClass('oculto');\n      if(valor==0){\n        $( '<div id=\"aviso_error\" class=\" aviso_opcional oculto\"><span></span><span>El Nº de módulos en las asignaturas específicas opcionales debe ser el mismo.</span></div>' ).insertAfter( $(\"#asignatura_curso_dialog #aviso_error\"));\n        $(\"#asignatura_curso_dialog .aviso_opcional\").removeClass('oculto');\n      }\n      else{\n        $( '<div id=\"aviso_error\" class=\" aviso_opcional2 oculto\"><span></span><span>El Nº de módulos no puede estar vacío y deben ser iguales en asignaturas opcionales.</span></div>').insertAfter( $(\"#asignatura_curso_dialog #aviso_error\"));\n        $(\"#asignatura_curso_dialog .aviso_opcional2\").removeClass('oculto');\n      }\n      return false;\n    }\n\n    if(valor==1){\n      $(\"#asignatura_curso_dialog #aviso_error\").removeClass('oculto');\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n      return false;\n    }\n    var index = 1;\n    // Se obtienen las asignaturas nuevas.(Insertar)\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li[estado='nueva']\").each(function(){\n\n      id=$(this).attr(\"id\");\n      valor=$(this).find(\"input[type='number']\").val();\n      libro=$(this).find(\"input[type='text']\").val();\n      nuevas[index++] = [id, valor, libro];  \n    });\n\n    var cambioModulos = Array();\n    var index = 1;\n    // Se obtienen las asignaturas que ya estaban asignadas pero el número de módulos ha sido modificado.(Actualizar)\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li[estado='asignada']\").each(function(){\n\n      id=$(this).attr(\"id\");\n      valor=$(this).find(\"input[type='number']\").val();\n      libro=$(this).find(\"input[type='text']\").val();\n      //Se comprueba si se ha modificado el número de módulos, porque si se ha modificado sólo el libro no se eliminará las asignaciones de esa asignatura.\n      cambioModulo=0;\n      if(valor!=$(this).find(\"input[type='number']\").attr(\"valor\")){\n        cambioModulo=1;\n      }\n\n      if(valor!=$(this).find(\"input[type='number']\").attr(\"valor\") || libro!=$(this).find(\"input[type='text']\").attr(\"valor\")){\n        asignadas[index++] = [id, valor, libro, cambioModulo];  \n      }\n      //Se obtiene las asignaturas a las que se le ha modificado el número de módulos, para mostrar aviso de eliminación de registro de profesores.\n      if(valor!=$(this).find(\"input[type='number']\").attr(\"valor\")){\n        asigcurso=$(this).attr(\"asigcurso\");\n        cambioModulos.push(asigcurso);\n      }\n\n    });\n\n    // Se obtienen las asignaciones de asignaturas que han sido eliminadas.(Eliminar)\n    $(\"#asignatura_curso_dialog #lista_asignaturas button[class*='asignada']\").each(function(){\n      id=$(this).attr(\"id\");\n      asigcurso=$(this).attr(\"asigcurso\");\n\n      if(id && $(\"#asignatura_curso_dialog #contenedor_asignaturas li[id='\"+id+\"']\").size()==0){\n        eliminadas.push(asigcurso);\n      }\n    });\n\n    //Si no existe cambios se avisa.\n    if($.isEmptyObject(nuevas) && $.isEmptyObject(asignadas) && $.isEmptyObject(eliminadas)){\n      $('#asignatura_curso_dialog').dialog('close');\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay modificaciones de asignaturas para este curso.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      return false;\n    }\n\n    //Nº de módulos asignados para comprobar con el nº de módulos permitidos en el horario.\n    var no_opcionales=0;\n    var opcionales=0;\n    var num_opcionales=0;\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional!='1'] input[type='number']\").each(function(){\n        no_opcionales+=parseInt($(this).val());\n    });\n\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1'] input[type='number']\").each(function(){\n        opcionales+=parseInt($(this).val());\n    });\n\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1']\").each(function(){\n        num_opcionales++;\n    });\n\n    //Las asignaciones optativas se dividen entre el número de optativas, para obtener el número de módulos asignados.\n    modulos=no_opcionales+(opcionales/num_opcionales);\n\n    curso=$(\"#asignatura_curso_dialog fieldset\").attr(\"id\");\n    name_curso=$(\"#asignatura_curso_dialog fieldset\").attr(\"name\");\n\n    if(!$.isEmptyObject(cambioModulos)){\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('comprobar_asignaciones_profesores'),\n        data: {eliminadas:cambioModulos},\n        dataType: 'json',\n        success: function(response) {\n  \n          texto=\"\";\n          if(response.error!=\"\"){\n\n            texto+=\"<p class='justificado'>Se ha actualizado el número de módulos en las siguientes asignaturas de <br>\"+name_curso+\" que tienen asignados profesores en alguno de sus grupos:</p><br>\";\n            for (var key in response.error) { \n              if (texto.indexOf(response.error[key][0][1]) < 0){\n                texto+=\"<p class='justificado negrita'>- \"+response.error[key][0][1]+\"</p>\"; \n              }\n            }\n            texto+=\"<br><table><p class='justificado'>Si deseas continuar se borrarán las siguientes asignaciones de profesores:<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\";\n            for (var key in response.error) { \n              texto+=\"<tr><td>\"+response.error[key][0][0]+\"</td><td>\"+response.error[key][0][1]+\"</td><td>\"+response.error[key][0][2]+\"</td></tr>\";\n            }\n            texto+=\"</tbody><br></p></table>\";\n            texto+=\"<br><br>¿Estas seguro de continuar? No podrás deshacer este paso...\";\n            error.play();\n            swal({\n              title: \"Asignaturas del Curso Actualizadas\",\n              html: texto,\n              type: \"warning\",\n              showCancelButton: true,\n              cancelButtonText: \"Cancelar\",\n              confirmButtonColor: color,\n              confirmButtonText: \"¡Adelante!\",\n              width: \"600px\"\n              }).then(function () {\n\n               if(!$.isEmptyObject(eliminadas)){\n                // Se muestra un aviso en caso de que se vaya a eliminar asignaturas con asignaciones de profesores registradas en el sistema.\n                $.ajax({\n                  type: 'POST',\n                  url: Routing.generate('comprobar_asignaciones_profesores'),\n                  data: {eliminadas:eliminadas},\n                  dataType: 'json',\n                  success: function(response) {\n                    texto=\"\";\n                    if(response.error!=\"\"){\n                      texto+=\"<p class='justificado'>Las siguientes asignaturas que se quieren eliminar tienen asignados profesores en alguno de los grupos de \"+name_curso+\":</p><br>\";\n                      for (var key in response.error) { \n                        if (texto.indexOf(response.error[key][0][1]) < 0){\n                          texto+=\"<p class='justificado negrita'>- \"+response.error[key][0][1]+\"</p>\"; \n                        }\n                      }\n                      texto+=\"<br><table><p class='justificado'>Si deseas continuar se borrarán las siguientes asignaciones de profesores:<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\";\n                      for (var key in response.error) { \n                        texto+=\"<tr><td>\"+response.error[key][0][0]+\"</td><td>\"+response.error[key][0][1]+\"</td><td>\"+response.error[key][0][2]+\"</td></tr>\";\n                      }\n                      texto+=\"</tbody><br></p></table>\";\n                      texto+=\"<br><br>¿Estas seguro de continuar? No podrás deshacer este paso...\";\n                      error.play();\n                      swal({\n                        title: \"Asignaturas del Curso Eliminadas\",\n                        html: texto,\n                        type: \"warning\",\n                        showCancelButton: true,\n                        cancelButtonText: \"Cancelar\",\n                        confirmButtonColor: color,\n                        confirmButtonText: \"¡Adelante!\",\n                        width: \"600px\"\n                        }).then(function () {\n                          $.ajax({\n                            type: 'POST',\n                            url: Routing.generate('asignar_asignaturas_curso'),\n                            data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas, modulos:modulos},\n                            dataType: 'json',\n                            success: function(response) {\n                              if(response.data==null){\n                                $('#asignatura_curso_dialog').dialog('close');\n                                errorPNotify.play();\n\n                                new PNotify({\n                                  text:'No hay modificaciones de asignaturas para este curso.',\n                                  addclass: \"custom\",\n                                  type: \"error\",\n                                  shadow: true,\n                                  hide: true,\n                                  buttons: {\n                                    sticker: false,\n                                    labels:{close: \"Cerrar\"}\n                                  },\n                                  stack: right_Stack,\n                                  animate: {\n                                    animate: true,\n                                    in_class: \"fadeInRight\",\n                                    out_class: \"fadeOutRight\",\n                                  }\n                                });\n                                return false;\n                              }\n\n                              if(response.data!=1)\n                              {\n                                error.play();\n                                texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                                texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                                texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                                texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                                swal({\n                                  title: \"Nº de Módulos No Permitidos\",\n                                  html: texto,\n                                  type: \"error\",\n                                  confirmButtonColor: color\n                                });\n                                return false;\n                              }\n\n                              //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                              var1=response.asignadas;\n                              var2=response.actualizadas;\n                              var3=response.eliminadas;\n                              text=\"\";\n                              if(var1==1){\n                                text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                              }\n                              else if(var1>1){\n                                text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                              }\n\n                              if(var2==1){\n                                text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                              }\n                              else if(var2>1){\n                                text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                              }\n\n                              if(var3==1){\n                                text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                              }\n                              else if(var3>1){\n                                text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                              }\n                              if(var1!=0 || var2!=0 || var3!=0){\n                                exito.play();\n                                new PNotify({\n                                  text:text,\n                                  addclass: \"custom\",\n                                  type: \"success\",\n                                  shadow: true,\n                                  hide: true,\n                                  width: \"335px\",\n                                  animation: \"fade\",\n                                  animate_speed: 'fast',\n                                  delay: 4000,\n                                  buttons: {\n                                    sticker: false,\n                                    labels:{close: \"Cerrar\"}\n                                  },\n                                  stack: right_Stack_dialog,\n                                  animate: {\n                                    animate: true,\n                                    in_class: \"fadeInRight\",\n                                    out_class: \"fadeOutRight\",\n                                  }\n                                });\n                              }\n                              id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                              $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                                $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                              });\n\n                              $('#asignatura_curso_dialog').dialog('close');\n                              $(\"#profesor_asignar_grupo\").update_tab();\n                              $(\"#asignar_horario\").update_tab();\n                              $(\"#asignar_optativa\").update_tab();\n                            }\n                          })\n                        }, function (dismiss) {\n\n                        }\n                      );\n                    } //Se realiza lo mismo sin mostrar aviso para el caso de que ninguna de las asignaturas eliminada tenga asignada un profesor.\n                    else{\n                      $.ajax({\n                        type: 'POST',\n                        url: Routing.generate('asignar_asignaturas_curso'),\n                        data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas, modulos:modulos},\n                        dataType: 'json',\n                        success: function(response) {\n                          if(response.data==null){\n                            $('#asignatura_curso_dialog').dialog('close');\n                            errorPNotify.play();\n\n                            new PNotify({\n                              text:'No hay modificaciones de asignaturas para este curso.',\n                              addclass: \"custom\",\n                              type: \"error\",\n                              shadow: true,\n                              hide: true,\n                              buttons: {\n                                sticker: false,\n                                labels:{close: \"Cerrar\"}\n                              },\n                              stack: right_Stack,\n                              animate: {\n                                animate: true,\n                                in_class: \"fadeInRight\",\n                                out_class: \"fadeOutRight\",\n                              }\n                            });\n                            return false;\n                          }\n                          if(response.data!=1)\n                          {\n                            error.play();\n                            texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                            texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                            texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                            texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                            swal({\n                              title: \"Nº de Módulos No Permitidos\",\n                              html: texto,\n                              type: \"error\",\n                              confirmButtonColor: color\n                            });\n                            return false;\n                          }\n\n                          //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                          var1=response.asignadas;\n                          var2=response.actualizadas;\n                          var3=response.eliminadas;\n                          text=\"\";\n                          if(var1==1){\n                            text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                          }\n                          else if(var1>1){\n                            text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                          }\n\n                          if(var2==1){\n                            text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                          }\n                          else if(var2>1){\n                            text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                          }\n\n                          if(var3==1){\n                            text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                          }\n                          else if(var3>1){\n                            text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                          }\n                          if(var1!=0 || var2!=0 || var3!=0){\n                            exito.play();\n                            new PNotify({\n                              text:text,\n                              addclass: \"custom\",\n                              type: \"success\",\n                              shadow: true,\n                              hide: true,\n                              width: \"335px\",\n                              animation: \"fade\",\n                              animate_speed: 'fast',\n                              delay: 4000,\n                              buttons: {\n                                sticker: false,\n                                labels:{close: \"Cerrar\"}\n                              },\n                              stack: right_Stack_dialog,\n                              animate: {\n                                animate: true,\n                                in_class: \"fadeInRight\",\n                                out_class: \"fadeOutRight\",\n                              }\n                            });\n                          }\n                          id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                          $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                            $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                          });\n\n                          $('#asignatura_curso_dialog').dialog('close');\n                          $(\"#profesor_asignar_grupo\").update_tab();\n                          $(\"#asignar_horario\").update_tab();\n                          $(\"#asignar_optativa\").update_tab();\n                        }\n                      })\n                    }\n                  }\n                })\n               }\n               //Se realiza lo mismo sin mostrar aviso para el caso de que no exista asignación en las asignaturas eliminadas.\n               else{\n                $.ajax({\n                  type: 'POST',\n                  url: Routing.generate('asignar_asignaturas_curso'),\n                  data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas,modulos:modulos},\n                  dataType: 'json',\n                  success: function(response) {\n                    if(response.data==null){\n                      $('#asignatura_curso_dialog').dialog('close');\n                      errorPNotify.play();\n\n                      new PNotify({\n                        text:'No hay modificaciones de asignaturas para este curso.',\n                        addclass: \"custom\",\n                        type: \"error\",\n                        shadow: true,\n                        hide: true,\n                        buttons: {\n                          sticker: false,\n                          labels:{close: \"Cerrar\"}\n                        },\n                        stack: right_Stack,\n                        animate: {\n                          animate: true,\n                          in_class: \"fadeInRight\",\n                          out_class: \"fadeOutRight\",\n                        }\n                      });\n                      return false;\n                    }\n\n                    if(response.data!=1)\n                    {\n                      error.play();\n                      texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                      texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                      texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                      texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                      swal({\n                        title: \"Nº de Módulos No Permitidos\",\n                        html: texto,\n                        type: \"error\",\n                        confirmButtonColor: color\n                      });\n                      return false;\n                    }\n\n                    //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                    var1=response.asignadas;\n                    var2=response.actualizadas;\n                    var3=response.eliminadas;\n                    text=\"\";\n                    if(var1==1){\n                      text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                    }\n                    else if(var1>1){\n                      text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                    }\n\n                    if(var2==1){\n                      text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                    }\n                    else if(var2>1){\n                      text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                    }\n\n                    if(var3==1){\n                      text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                    }\n                    else if(var3>1){\n                      text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                    }\n          \n                    if(var1!=0 || var2!=0 || var3!=0){\n                      exito.play();\n                      new PNotify({\n                        text:text,\n                        addclass: \"custom\",\n                        type: \"success\",\n                        shadow: true,\n                        hide: true,\n                        width: \"335px\",\n                        animation: \"fade\",\n                        animate_speed: 'fast',\n                        delay: 4000,\n                        buttons: {\n                          sticker: false,\n                          labels:{close: \"Cerrar\"}\n                        },\n                        stack: right_Stack_dialog,\n                        animate: {\n                          animate: true,\n                          in_class: \"fadeInRight\",\n                          out_class: \"fadeOutRight\",\n                        }\n                      });\n                    }\n                    id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                    $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                      $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                    });          \n                    $('#asignatura_curso_dialog').dialog('close');\n                    $(\"#profesor_asignar_grupo\").update_tab();\n                    $(\"#asignar_horario\").update_tab();\n                    $(\"#asignar_optativa\").update_tab();\n                  }\n                })\n               }\n              }, function (dismiss) {\n                if (dismiss === 'cancel') {\n                  return false;\n                }\n              }\n            )\n          }\n          else{\n            if(!$.isEmptyObject(eliminadas)){\n\n              // Se muestra un aviso en caso de que se vaya a eliminar asignaturas con asignaciones de profesores registradas en el sistema.\n              $.ajax({\n                type: 'POST',\n                url: Routing.generate('comprobar_asignaciones_profesores'),\n                data: {eliminadas:eliminadas},\n                dataType: 'json',\n                success: function(response) {\n                  texto=\"\";\n                  if(response.error!=\"\"){\n                    texto+=\"<p class='justificado'>Las siguientes asignaturas que se quieren eliminar tienen asignados profesores en alguno de los grupos de \"+name_curso+\":</p><br>\";\n                    for (var key in response.error) { \n                      if (texto.indexOf(response.error[key][0][1]) < 0){\n                        texto+=\"<p class='justificado negrita'>- \"+response.error[key][0][1]+\"</p>\"; \n                      }\n                    }\n                    texto+=\"<br><table><p class='justificado'>Si deseas continuar se borrarán las siguientes asignaciones de profesores:<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\";\n                    for (var key in response.error) { \n                      texto+=\"<tr><td>\"+response.error[key][0][0]+\"</td><td>\"+response.error[key][0][1]+\"</td><td>\"+response.error[key][0][2]+\"</td></tr>\";\n                    }\n                    texto+=\"</tbody><br></p></table>\";\n                    texto+=\"<br><br>¿Estas seguro de continuar? No podrás deshacer este paso...\";\n                    error.play();\n                    swal({\n                      title: \"Asignaturas del Curso Eliminadas\",\n                      html: texto,\n                      type: \"warning\",\n                      showCancelButton: true,\n                      cancelButtonText: \"Cancelar\",\n                      confirmButtonColor: color,\n                      confirmButtonText: \"¡Adelante!\",\n                      width: \"600px\"\n                      }).then(function () {\n                        $.ajax({\n                          type: 'POST',\n                          url: Routing.generate('asignar_asignaturas_curso'),\n                          data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas, modulos:modulos},\n                          dataType: 'json',\n                          success: function(response) {\n                            if(response.data==null){\n                              $('#asignatura_curso_dialog').dialog('close');\n                              errorPNotify.play();\n\n                              new PNotify({\n                                text:'No hay modificaciones de asignaturas para este curso.',\n                                addclass: \"custom\",\n                                type: \"error\",\n                                shadow: true,\n                                hide: true,\n                                buttons: {\n                                  sticker: false,\n                                  labels:{close: \"Cerrar\"}\n                                },\n                                stack: right_Stack,\n                                animate: {\n                                  animate: true,\n                                  in_class: \"fadeInRight\",\n                                  out_class: \"fadeOutRight\",\n                                }\n                              });\n                              return false;\n                            }\n\n                            if(response.data!=1)\n                            {\n                              error.play();\n                              texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                              texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                              texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                              texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                              swal({\n                                title: \"Nº de Módulos No Permitidos\",\n                                html: texto,\n                                type: \"error\",\n                                confirmButtonColor: color\n                              });\n                              return false;\n                            }\n\n                            //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                            var1=response.asignadas;\n                            var2=response.actualizadas;\n                            var3=response.eliminadas;\n                            text=\"\";\n                            if(var1==1){\n                              text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                            }\n                            else if(var1>1){\n                              text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                            }\n\n                            if(var2==1){\n                              text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                            }\n                            else if(var2>1){\n                              text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                            }\n\n                            if(var3==1){\n                              text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                            }\n                            else if(var3>1){\n                              text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                            }\n                            if(var1!=0 || var2!=0 || var3!=0){\n                              exito.play();\n                              new PNotify({\n                                text:text,\n                                addclass: \"custom\",\n                                type: \"success\",\n                                shadow: true,\n                                hide: true,\n                                width: \"335px\",\n                                animation: \"fade\",\n                                animate_speed: 'fast',\n                                delay: 4000,\n                                buttons: {\n                                  sticker: false,\n                                  labels:{close: \"Cerrar\"}\n                                },\n                                stack: right_Stack_dialog,\n                                animate: {\n                                  animate: true,\n                                  in_class: \"fadeInRight\",\n                                  out_class: \"fadeOutRight\",\n                                }\n                              });\n                            }\n                            id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                              $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                            });\n\n                            $('#asignatura_curso_dialog').dialog('close');\n                            $(\"#profesor_asignar_grupo\").update_tab();\n                            $(\"#asignar_horario\").update_tab();\n                            $(\"#asignar_optativa\").update_tab();\n                          }\n                        })\n                      }, function (dismiss) {\n\n                      }\n                    );\n                  } //Se realiza lo mismo sin mostrar aviso para el caso de que ninguna de las asignaturas eliminada tenga asignada un profesor.\n                  else{\n                    $.ajax({\n                      type: 'POST',\n                      url: Routing.generate('asignar_asignaturas_curso'),\n                      data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas, modulos:modulos},\n                      dataType: 'json',\n                      success: function(response) {\n                        if(response.data==null){\n                          $('#asignatura_curso_dialog').dialog('close');\n                          errorPNotify.play();\n\n                          new PNotify({\n                            text:'No hay modificaciones de asignaturas para este curso.',\n                            addclass: \"custom\",\n                            type: \"error\",\n                            shadow: true,\n                            hide: true,\n                            buttons: {\n                              sticker: false,\n                              labels:{close: \"Cerrar\"}\n                            },\n                            stack: right_Stack,\n                            animate: {\n                              animate: true,\n                              in_class: \"fadeInRight\",\n                              out_class: \"fadeOutRight\",\n                            }\n                          });\n                          return false;\n                        }\n                        if(response.data!=1)\n                        {\n                          error.play();\n                          texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                          texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                          texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                          texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                          swal({\n                            title: \"Nº de Módulos No Permitidos\",\n                            html: texto,\n                            type: \"error\",\n                            confirmButtonColor: color\n                          });\n                          return false;\n                        }\n\n                        //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                        var1=response.asignadas;\n                        var2=response.actualizadas;\n                        var3=response.eliminadas;\n                        text=\"\";\n                        if(var1==1){\n                          text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                        }\n                        else if(var1>1){\n                          text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                        }\n\n                        if(var2==1){\n                          text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                        }\n                        else if(var2>1){\n                          text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                        }\n\n                        if(var3==1){\n                          text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                        }\n                        else if(var3>1){\n                          text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                        }\n                        if(var1!=0 || var2!=0 || var3!=0){\n                          exito.play();\n                          new PNotify({\n                            text:text,\n                            addclass: \"custom\",\n                            type: \"success\",\n                            shadow: true,\n                            hide: true,\n                            width: \"335px\",\n                            animation: \"fade\",\n                            animate_speed: 'fast',\n                            delay: 4000,\n                            buttons: {\n                              sticker: false,\n                              labels:{close: \"Cerrar\"}\n                            },\n                            stack: right_Stack_dialog,\n                            animate: {\n                              animate: true,\n                              in_class: \"fadeInRight\",\n                              out_class: \"fadeOutRight\",\n                            }\n                          });\n                        }\n                        id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                        $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                          $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                        });\n\n                        $('#asignatura_curso_dialog').dialog('close');\n                        $(\"#profesor_asignar_grupo\").update_tab();\n                        $(\"#asignar_horario\").update_tab();\n                        $(\"#asignar_optativa\").update_tab();\n                      }\n                    })\n                  }\n                }\n              })\n            }\n            //Se realiza lo mismo sin mostrar aviso para el caso de que no exista asignación en las asignaturas eliminadas.\n            else{\n              $.ajax({\n                type: 'POST',\n                url: Routing.generate('asignar_asignaturas_curso'),\n                data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas,modulos:modulos},\n                dataType: 'json',\n                success: function(response){\n                  if(response.data==null){\n                    $('#asignatura_curso_dialog').dialog('close');\n                    errorPNotify.play();\n\n                    new PNotify({\n                      text:'No hay modificaciones de asignaturas para este curso.',\n                      addclass: \"custom\",\n                      type: \"error\",\n                      shadow: true,\n                      hide: true,\n                      buttons: {\n                        sticker: false,\n                        labels:{close: \"Cerrar\"}\n                      },\n                      stack: right_Stack,\n                      animate: {\n                        animate: true,\n                        in_class: \"fadeInRight\",\n                        out_class: \"fadeOutRight\",\n                      }\n                    });\n                    return false;\n                  }\n\n                  if(response.data!=1)\n                  {\n                    error.play();\n                    texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                    texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                    texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                    texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                    swal({\n                      title: \"Nº de Módulos No Permitidos\",\n                      html: texto,\n                      type: \"error\",\n                      confirmButtonColor: color\n                    });\n                    return false;\n                  }\n\n                  //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                  var1=response.asignadas;\n                  var2=response.actualizadas;\n                  var3=response.eliminadas;\n                  text=\"\";\n                  if(var1==1){\n                    text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                  }\n                  else if(var1>1){\n                    text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                  }\n\n                  if(var2==1){\n                    text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                  }\n                  else if(var2>1){\n                    text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                  }\n\n                  if(var3==1){\n                    text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                  }\n                  else if(var3>1){\n                    text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                  }\n          \n                  if(var1!=0 || var2!=0 || var3!=0){\n                    exito.play();\n                    new PNotify({\n                      text:text,\n                      addclass: \"custom\",\n                      type: \"success\",\n                      shadow: true,\n                      hide: true,\n                      width: \"335px\",\n                      animation: \"fade\",\n                      animate_speed: 'fast',\n                      delay: 4000,\n                      buttons: {\n                        sticker: false,\n                        labels:{close: \"Cerrar\"}\n                      },\n                      stack: right_Stack_dialog,\n                      animate: {\n                        animate: true,\n                        in_class: \"fadeInRight\",\n                        out_class: \"fadeOutRight\",\n                      }\n                    });\n                  }\n                  id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                  $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                    $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                  });          \n                  $('#asignatura_curso_dialog').dialog('close');\n                  $(\"#profesor_asignar_grupo\").update_tab();\n                  $(\"#asignar_horario\").update_tab();\n                  $(\"#asignar_optativa\").update_tab();\n                }\n              })\n            }\n          }\n        }\n      })\n    } //Se realiza lo mismo sin mostrar aviso para el caso de que no exista asignación con módulos actualizados.\n    else{\n      if(!$.isEmptyObject(eliminadas)){\n        // Se muestra un aviso en caso de que se vaya a eliminar asignaturas con asignaciones de profesores registradas en el sistema.\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('comprobar_asignaciones_profesores'),\n          data: {eliminadas:eliminadas},\n          dataType: 'json',\n          success: function(response) {\n            texto=\"\";\n            if(response.error!=\"\"){\n              texto+=\"<p class='justificado'>Las siguientes asignaturas que se quieren eliminar tienen asignados profesores en alguno de los grupos de \"+name_curso+\":</p><br>\";\n              for (var key in response.error) { \n                if (texto.indexOf(response.error[key][0][1]) < 0){\n                  texto+=\"<p class='justificado negrita'>- \"+response.error[key][0][1]+\"</p>\"; \n                }\n              }\n              texto+=\"<br><table><p class='justificado'>Si deseas continuar se borrarán las siguientes asignaciones de profesores:<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\";\n              for (var key in response.error) { \n                texto+=\"<tr><td>\"+response.error[key][0][0]+\"</td><td>\"+response.error[key][0][1]+\"</td><td>\"+response.error[key][0][2]+\"</td></tr>\";\n              }\n              texto+=\"</tbody><br></p></table>\";\n              texto+=\"<br><br>¿Estas seguro de continuar? No podrás deshacer este paso...\";\n              error.play();\n              swal({\n                title: \"Asignaturas del Curso Eliminadas\",\n                html: texto,\n                type: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: \"Cancelar\",\n                confirmButtonColor: color,\n                confirmButtonText: \"¡Adelante!\",\n                width: \"600px\"\n                }).then(function () {\n                  $.ajax({\n                    type: 'POST',\n                    url: Routing.generate('asignar_asignaturas_curso'),\n                    data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas, modulos:modulos},\n                    dataType: 'json',\n                    success: function(response) {\n                      if(response.data==null){\n                        $('#asignatura_curso_dialog').dialog('close');\n                        errorPNotify.play();\n\n                        new PNotify({\n                          text:'No hay modificaciones de asignaturas para este curso.',\n                          addclass: \"custom\",\n                          type: \"error\",\n                          shadow: true,\n                          hide: true,\n                          buttons: {\n                            sticker: false,\n                            labels:{close: \"Cerrar\"}\n                          },\n                          stack: right_Stack,\n                          animate: {\n                            animate: true,\n                            in_class: \"fadeInRight\",\n                            out_class: \"fadeOutRight\",\n                          }\n                        });\n                        return false;\n                      }\n\n                      if(response.data!=1)\n                      {\n                        error.play();\n                        texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                        texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                        texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                        texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                        swal({\n                          title: \"Nº de Módulos No Permitidos\",\n                          html: texto,\n                          type: \"error\",\n                          confirmButtonColor: color\n                        });\n                        return false;\n                      }\n\n                      //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                      var1=response.asignadas;\n                      var2=response.actualizadas;\n                      var3=response.eliminadas;\n                      text=\"\";\n                      if(var1==1){\n                        text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                      }\n                      else if(var1>1){\n                        text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                      }\n\n                      if(var2==1){\n                        text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                      }\n                      else if(var2>1){\n                        text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                      }\n                      if(var3==1){\n                        text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                      }\n                      else if(var3>1){\n                        text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                      }\n                      if(var1!=0 || var2!=0 || var3!=0){\n                        exito.play();\n                        new PNotify({\n                          text:text,\n                          addclass: \"custom\",\n                          type: \"success\",\n                          shadow: true,\n                          hide: true,\n                          width: \"335px\",\n                          animation: \"fade\",\n                          animate_speed: 'fast',\n                          delay: 4000,\n                          buttons: {\n                            sticker: false,\n                            labels:{close: \"Cerrar\"}\n                          },\n                          stack: right_Stack_dialog,\n                          animate: {\n                            animate: true,\n                            in_class: \"fadeInRight\",\n                            out_class: \"fadeOutRight\",\n                          }\n                        });\n                      }\n                      id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                      $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                        $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                      });\n\n                      $('#asignatura_curso_dialog').dialog('close');\n                      $(\"#profesor_asignar_grupo\").update_tab();\n                      $(\"#asignar_horario\").update_tab();\n                      $(\"#asignar_optativa\").update_tab();\n                    }\n                  })\n                }, function (dismiss) {\n\n                }\n              );\n            } //Se realiza lo mismo sin mostrar aviso para el caso de que ninguna de las asignaturas eliminada tenga asignada un profesor.\n            else{\n              $.ajax({\n                type: 'POST',\n                url: Routing.generate('asignar_asignaturas_curso'),\n                data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas, modulos:modulos},\n                dataType: 'json',\n                success: function(response) {\n                  if(response.data==null){\n                    $('#asignatura_curso_dialog').dialog('close');\n                    errorPNotify.play();\n\n                    new PNotify({\n                      text:'No hay modificaciones de asignaturas para este curso.',\n                      addclass: \"custom\",\n                      type: \"error\",\n                      shadow: true,\n                      hide: true,\n                      buttons: {\n                        sticker: false,\n                        labels:{close: \"Cerrar\"}\n                      },\n                      stack: right_Stack,\n                      animate: {\n                        animate: true,\n                        in_class: \"fadeInRight\",\n                        out_class: \"fadeOutRight\",\n                      }\n                    });\n                    return false;\n                  }\n                  if(response.data!=1)\n                  {\n                    error.play();\n                    texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n                    texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n                    texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n                    texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n                    swal({\n                      title: \"Nº de Módulos No Permitidos\",\n                      html: texto,\n                      type: \"error\",\n                      confirmButtonColor: color\n                    });\n                    return false;\n                  }\n\n                  //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n                  var1=response.asignadas;\n                  var2=response.actualizadas;\n                  var3=response.eliminadas;\n                  text=\"\";\n                  if(var1==1){\n                    text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n                  }\n                  else if(var1>1){\n                    text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n                  }\n\n                  if(var2==1){\n                    text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n                  }\n                  else if(var2>1){\n                    text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n                  }\n\n                  if(var3==1){\n                    text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n                  }\n                  else if(var3>1){\n                    text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n                  }\n                  if(var1!=0 || var2!=0 || var3!=0){\n                    exito.play();\n                    new PNotify({\n                      text:text,\n                      addclass: \"custom\",\n                      type: \"success\",\n                      shadow: true,\n                      hide: true,\n                      width: \"335px\",\n                      animation: \"fade\",\n                      animate_speed: 'fast',\n                      delay: 4000,\n                      buttons: {\n                        sticker: false,\n                        labels:{close: \"Cerrar\"}\n                      },\n                      stack: right_Stack_dialog,\n                      animate: {\n                        animate: true,\n                        in_class: \"fadeInRight\",\n                        out_class: \"fadeOutRight\",\n                      }\n                    });\n                  }\n                  id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n                  $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n                    $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n                  });\n\n                  $('#asignatura_curso_dialog').dialog('close');\n                  $(\"#profesor_asignar_grupo\").update_tab();\n                  $(\"#asignar_horario\").update_tab();\n                  $(\"#asignar_optativa\").update_tab();\n                }\n              })\n            }\n          }\n        })\n      }\n      //Se realiza lo mismo sin mostrar aviso para el caso de que no exista asignación en las asignaturas eliminadas.\n      else{\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('asignar_asignaturas_curso'),\n          data: {curso:curso, nuevas:nuevas, asignadas:asignadas, eliminadas:eliminadas,modulos:modulos},\n          dataType: 'json',\n          success: function(response){\n            if(response.data==null){\n              $('#asignatura_curso_dialog').dialog('close');\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay modificaciones de asignaturas para este curso.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n\n            if(response.data!=1)\n            {\n              error.play();\n              texto=\"<p class='justificado'> El número de módulos seleccionados sobrepasa al número de módulos semanales:</p></br>\";\n              texto=texto+\"<li>Nº de módulos seleccionados: <span class='negrita color_rojo_swal'>\"+modulos+\" </span></li>\";\n              texto=texto+\"<li>Nº de módulos semanales: <span class='negrita'>\"+response.data+\" </span></li></br>\";\n              texto=texto+\"<p>Seleccione el número de módulos de las asignaturas teniendo en cuenta el número de modulos semanales.</p></p>\";\n              swal({\n                title: \"Nº de Módulos No Permitidos\",\n                html: texto,\n                type: \"error\",\n                confirmButtonColor: color\n              });\n              return false;\n            }\n\n            //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n            var1=response.asignadas;\n            var2=response.actualizadas;\n            var3=response.eliminadas;\n            text=\"\";\n            if(var1==1){\n              text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n            }\n            else if(var1>1){\n              text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n            }\n\n            if(var2==1){\n              text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n            }\n            else if(var2>1){\n              text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n            }\n\n            if(var3==1){\n              text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n            }\n            else if(var3>1){\n              text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n            }\n          \n            if(var1!=0 || var2!=0 || var3!=0){\n              exito.play();\n              new PNotify({\n                text:text,\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                width: \"335px\",\n                animation: \"fade\",\n                animate_speed: 'fast',\n                delay: 4000,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack_dialog,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n            }\n            id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n              $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n            });          \n            $('#asignatura_curso_dialog').dialog('close');\n            $(\"#profesor_asignar_grupo\").update_tab();\n            $(\"#asignar_horario\").update_tab();\n            $(\"#asignar_optativa\").update_tab();\n          }\n        })\n      }\n    }\n  });\n\n  //Se bloquea el presionar una tecla en el inpur number del número de módulos.\n  $(document).on('keypress',\"#asignatura_curso_dialog #contenedor_asignaturas li input[type='number']\",function(event){\n    event.preventDefault();\n  });\n\n  //Se valida el número de módulos modificado.\n  $(document).on('change paste cut',\"#asignatura_curso_dialog #contenedor_asignaturas li input[type='number']\",function(event){\n    event.preventDefault();\n    //Se habilita los botones \"guardar\" y \"restablecer\".\n    $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n    $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n\n    if($(this).val()!=\"\" ){\n      $(this).removeClass('invalid');\n      if($(this).val()==$(this).attr(\"valor\") && $(this).prev().val()==$(this).prev().attr(\"valor\") ){\n        $(this).closest(\"li\").removeClass('back_modificado');\n        if($(\"#asignatura_curso_dialog #contenedor_asignaturas .back_modificado\").size()==0 && $(\"#asignatura_curso_dialog #lista_asignaturas button:not(.elected)[class*='asignada']\").size()==0){\n          //Se deshabilita los botones de \"guardar\" y \"restablecer\".\n          $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n          $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",true);\n        }\n        if($(\"#asignatura_curso_dialog #contenedor_asignaturas li input[class='invalid']\").size()>0){\n          $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n        }\n      }\n      else{\n        $(this).closest(\"li\").addClass('back_modificado');\n        //Se habilita los botones de \"guardar\" y \"restablecer\".\n        $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n        if($(\"#asignatura_curso_dialog #contenedor_asignaturas li input[class='invalid']\").size()>0){\n          $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n        }else{\n          $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n        }\n      }\n      //Se comprueba sise ha modificado el Nº de grupo en una asignatura opcional, para modificar las demás asignaturas opcionales con el mismo valor.\n      if($(this).closest(\"li\").attr(\"opcional\")==1){\n        //Se elimina a todos los input de asignaturas opcionales la clase invalid.\n        $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1'] input[type='number']\").removeClass('invalid');\n        //Se elimina el aviso de error si no hay más errores.\n        if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional!='1'] .invalid\").size()==0){\n          $(\"#asignatura_curso_dialog #aviso_error\").addClass('oculto');\n        }\n        valor=$(this).val();\n        li=$(this).closest(\"li\");\n        $(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1']\").each(function(){\n            if($(this)!=li){\n              $(this).find(\"input[type='number']\").val(valor);\n              //Se comprueba si se ma modificado algún valor de las demás asignaturaś(más abajo).\n              $(this).find(\"input[type='number']\").blur();\n            }\n        });\n      }\n    }\n    else{\n      $(this).addClass('invalid');\n      $(this).closest(\"li\").addClass('back_modificado');\n      $(\"#asignatura_curso_dialog #aviso_error\").removeClass('oculto');\n      //Se deshabilita el botón de \"guardar\".\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n    }\n    //Se elimina el aviso de error si no existe más errores.\n    if($(\"#asignatura_curso_dialog #contenedor_asignaturas li input[class='invalid']\").size()==0){\n      $(\"#asignatura_curso_dialog #aviso_error\").addClass('oculto');\n      \n      //Se habilita/deshabilita los botones de \"guardar\" y \"restablecer\" si hay modificaciones o no.\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas .back_modificado\").size()>0 || $(\"#asignatura_curso_dialog #lista_asignaturas button:not(.elected)[class*='asignada']\").size()>0){\n        $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n        $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n      }\n      else{\n        $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n        $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",true);\n      }\n    }\n  });\n\n  //Se utiliza para mostrar si se ha modificado algún valor al modificar anteriormente el Nº de módulos de una asignatura opcional.\n  $(document).on('blur',\"#asignatura_curso_dialog #contenedor_asignaturas li input[type='number']\",function(event){\n  event.preventDefault();\n    if($(this).attr(\"valor\")){\n      if($(this).attr(\"valor\")==$(this).val()){\n        $(this).closest(\"li\").removeClass('back_modificado');\n      }\n      else{\n        $(this).closest(\"li\").addClass('back_modificado');\n      }\n    }\n  });\n\n  //Se valida el libro modificado.\n  $(document).on('keyup change',\"#asignatura_curso_dialog #contenedor_asignaturas li input[type='text']\",function(event){\n    event.preventDefault();\n    //Se habilita los botones \"guardar\" y \"restablecer\".\n    $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n    $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n\n    if($(this).val()==$(this).attr(\"valor\") && $(this).next().val()==$(this).next().attr(\"valor\") ){\n      $(this).closest(\"li\").removeClass('back_modificado');\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas .back_modificado\").size()==0){\n        //Se deshabilita los botones de \"guardar\" y \"restablecer\".\n        $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n        $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",true);\n      }\n    }\n    else{\n      $(this).closest(\"li\").addClass('back_modificado');\n      //Se habilita los botones de \"guardar\" y \"restablecer\".\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n      $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n    }\n  });\n\n  //Se elimina las asignaciones de asignaturas del curso.\n  $(document).on('click',\"#asignaturas_cursos #eliminar_en_curso \",function(event){\n    event.preventDefault();\n\n    //Se avisa si no hay asignaturas asignadas al curso.\n    if($(\"#asignaturas_cursos #contenedor_registro:not(.oculto) tbody tr:not(.no_cursor)\").size()==0){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n      new PNotify({\n        text:'No hay asignaturas asignadas al curso.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignaturas_cursos #eliminar_en_curso\").prop(\"disabled\",true);\n      return false;\n    }\n    nombre_curso=$(this).find(\"span\").text();\n    aviso.play();\n    swal({\n      title: \"Eliminación de Asignación de Asignaturas\",\n      html: \"<p>Se van a eliminar las asignaciones de las asignaturas de <span class='negrita'>\"+nombre_curso+\" de Primaria</span>.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"600px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\",\n      }).then(function () {\n\n        curso=$(\"#asignaturas_cursos #eliminar_en_curso\").attr(\"curso\"); //Id del curso.\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_asignaciones_asignaturas'),\n          data: {curso:curso},\n          dataType: 'json',\n          success: function(response) {\n            if(response.data==null){\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay asignaturas asignadas al curso.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n            exito.play();\n            new PNotify({\n              text:\"Se han eliminado las asignaturas asignadas al curso.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n              $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n            });\n            $(\"#profesor_asignar_grupo\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se elimina las asignaciones de asignaturas de todos los cursos.\n  $(document).on('click',\"#asignaturas_cursos #eliminar_todo \",function(event){\n    event.preventDefault();\n\n    //Se avisa si no hay asignaturas asignadas en ningún curso.\n    if($(\"#asignaturas_cursos #contenedor_registro tbody tr:not(.no_cursor)\").size()==0){\n      errorPNotify.pause();\n      errorPNotify.currentTime=0.0;\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay asignaturas asignadas en ningún curso.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignaturas_cursos #eliminar_todo\").prop(\"disabled\",true);\n      return false;\n    }\n    aviso.play();\n    swal({\n      title: \"Eliminación de Asignación de Asignaturas\",\n      html: \"<p>Se van a eliminar las asignaturas de todos los cursos.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_todas_asignaciones_asignaturas'),\n          dataType: 'json',\n          success: function(response) {\n            if(response.data==null){\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay asignaturas asignadas en ningún curso.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n            exito.play();\n            new PNotify({\n              text:\"Se han eliminado las asignaciones de asignaturas de todos los cursos.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            id=$(\"#asignaturas_cursos .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignaturas_cursos\"), function(){\n              $(\"#asignaturas_cursos .lista_cursos button[id='\"+id+\"']\").click();\n            });\n            $(\"#profesor_asignar_grupo\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se asigna una lista al curso.\n  $(document).on('click',\"#asignatura_curso_dialog #lista_troncal button\",function(event){\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n    tipo=$(this).attr(\"tipo\");\n\n    $(this).addClass('elected');\n    if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[id='\"+id+\"']\").size()==0){\n      if($(this).hasClass('asignada')){\n        $('<li class=\"back_modificado\" id=\"'+id+'\"tipo=\"'+tipo+'\" estado=\"asignada\"><p>'+$(this).attr(\"title\")+'</p></input><input placeholder=\"Libro de la asignatura\" valor=\"'+$(this).attr(\"libro\")+'\" style=\"text-transform: capitalize;\" type=\"text\"><input type=\"number\" min=\"1\" max=\"9\" valor=\"'+$(this).attr(\"valor\")+'\"></input><img src=\"/Symfony/web/bundles/backend/images/menu/eliminar.png\"></li>').insertBefore($(\"#asignatura_curso_dialog #cabecera_especifica\"));\n      }else{\n        $('<li class=\"back_modificado\" id=\"'+id+'\"tipo=\"'+tipo+'\" estado=\"nueva\"><p>'+$(this).attr(\"title\")+'</p></input><input placeholder=\"Libro de la asignatura\" style=\"text-transform: capitalize;\" type=\"text\"><input type=\"number\" min=\"1\" max=\"9\"></input><img src=\"/Symfony/web/bundles/backend/images/menu/eliminar.png\"></li>').insertBefore($(\"#asignatura_curso_dialog #cabecera_especifica\"));\n      }\n\n    }\n\n    //Se deshabilita el botón de seleccionar todas las asignaturas troncales cuando estan todas seleccionadas.\n    if($(\"#asignatura_curso_dialog #lista_asignaturas #lista_troncal button:not(.elected)\").size()==0){\n      $(\"#asignatura_curso_dialog #all_troncales\").addClass('disabled');\n    }\n\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas #cabecera_troncal\").removeClass('oculto');\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas .aviso\").addClass('oculto');\n    \n    //Se habilita los botones \"guardar\" y \"restablecer\".\n    $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n    if($(\"#asignatura_curso_dialog #contenedor_asignaturas li input[class='invalid']\").size()>0){\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n    }\n    else{\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n    }\n  });\n\n  $(document).on('click',\"#asignatura_curso_dialog #lista_especifica button\",function(event){\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n    tipo=$(this).attr(\"tipo\");\n    opcional=$(this).attr(\"opcional\");\n\n    $(this).addClass('elected');\n    if(opcional==1){\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[id='\"+id+\"']\").size()==0){\n        if($(this).hasClass('asignada')){\n          $(\"#asignatura_curso_dialog #contenedor_asignaturas ul\").append('<li class=\"back_modificado\" id=\"'+id+'\"tipo=\"'+tipo+'\" estado=\"asignada\" opcional=\"'+$(this).attr(\"opcional\")+'\"><p>'+$(this).attr(\"title\")+'</p></input><input placeholder=\"Libro de la asignatura\" valor=\"'+$(this).attr(\"libro\")+'\" style=\"text-transform: capitalize;\" type=\"text\"><input type=\"number\" min=\"1\" max=\"9\" valor=\"'+$(this).attr(\"valor\")+'\"></input><img src=\"/Symfony/web/bundles/backend/images/menu/eliminar.png\"></li>');\n        }else{\n          $(\"#asignatura_curso_dialog #contenedor_asignaturas ul\").append('<li class=\"back_modificado\" id=\"'+id+'\"tipo=\"'+tipo+'\" estado=\"nueva\" opcional=\"'+$(this).attr(\"opcional\")+'\"><p>'+$(this).attr(\"title\")+'</p></input><input placeholder=\"Libro de la asignatura\" style=\"text-transform: capitalize;\" type=\"text\"><input type=\"number\" min=\"1\" max=\"9\"></input><img src=\"/Symfony/web/bundles/backend/images/menu/eliminar.png\"></li>');\n        }\n      }\n      $(\"#asignatura_curso_dialog #contenedor_asignaturas #cabecera_especifica_opcional\").removeClass('oculto');\n    }\n    else{\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[id='\"+id+\"']\").size()==0){\n        if($(this).hasClass('asignada')){\n          $('<li class=\"back_modificado\" id=\"'+id+'\"tipo=\"'+tipo+'\" estado=\"asignada\" opcional=\"'+$(this).attr(\"opcional\")+'\"><p>'+$(this).attr(\"title\")+'</p></input><input placeholder=\"Libro de la asignatura\" valor=\"'+$(this).attr(\"libro\")+'\" style=\"text-transform: capitalize;\" type=\"text\"><input type=\"number\" min=\"1\" max=\"9\" valor=\"'+$(this).attr(\"valor\")+'\"></input><img src=\"/Symfony/web/bundles/backend/images/menu/eliminar.png\"></li>').insertBefore($(\"#asignatura_curso_dialog #cabecera_especifica_opcional\"));\n        }else{\n          $('<li class=\"back_modificado\" id=\"'+id+'\"tipo=\"'+tipo+'\" estado=\"nueva\" opcional=\"'+$(this).attr(\"opcional\")+'\"><p>'+$(this).attr(\"title\")+'</p></input><input placeholder=\"Libro de la asignatura\" style=\"text-transform: capitalize;\" type=\"text\"><input type=\"number\" min=\"1\" max=\"9\"></input><img src=\"/Symfony/web/bundles/backend/images/menu/eliminar.png\"></li>').insertBefore($(\"#asignatura_curso_dialog #cabecera_especifica_opcional\"));\n        }\n      }\n      $(\"#asignatura_curso_dialog #contenedor_asignaturas #cabecera_especifica\").removeClass('oculto');\n    }\n\n    //Se deshabilita el botón de seleccionar todas las asignaturas específicas cuando estan todas seleccionadas.\n    if($(\"#asignatura_curso_dialog #lista_asignaturas #lista_especifica button:not(.elected)\").size()==0){\n      $(\"#asignatura_curso_dialog #all_especificas\").addClass('disabled');\n    }\n\n\n    $(\"#asignatura_curso_dialog #contenedor_asignaturas .aviso\").addClass('oculto');\n    \n    //Se habilita los botones \"guardar\" y \"restablecer\".\n    $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n    if($(\"#asignatura_curso_dialog #contenedor_asignaturas li input[class='invalid']\").size()>0){\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n    }\n    else{\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n    }\n  });\n\n  //Se elimina la lista asignada al curso\n  $(document).on('click',\"#asignatura_curso_dialog #contenedor_asignaturas img\",function(event){\n    event.preventDefault();\n    id=$(this).closest(\"li\").attr(\"id\");\n    tipo=$(this).closest(\"li\").attr(\"tipo\");\n    asigcurso=$(this).closest(\"li\").attr(\"asigcurso\");//Id de asignación de asignatura/grupo\n    //Se habilita los botones \"guardar\" y \"restablecer\".\n    $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n    $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n\n    $(\"#asignatura_curso_dialog #lista_asignaturas button[id='\"+id+\"']\").removeClass('elected');\n    $(\"#asignatura_curso_dialog #lista_asignaturas button[id='\"+id+\"']\").closest(\"div\").next().removeClass('disabled');\n    //Se le asigna el Id de la asignación de asignatura/grupo para comprobar que asignación ha sido eliminada.\n    $(\"#asignatura_curso_dialog #lista_asignaturas button[id='\"+id+\"']\").attr('asigcurso',asigcurso);\n\n    $(this).closest(\"li\").remove();\n\n    //Se comprueba si no hay más asignaturas de un tipo para eliminar la cabecera de ese tipo(ol).\n    if(tipo==\"Troncal\"){\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[tipo='Troncal']\").size()==0){\n        $(\"#asignatura_curso_dialog #contenedor_asignaturas #cabecera_troncal\").addClass('oculto');\n      }\n    }\n    else{\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='']\").size()==0){\n        $(\"#asignatura_curso_dialog #contenedor_asignaturas #cabecera_especifica\").addClass('oculto');\n      }\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas li[opcional='1']\").size()==0){\n        $(\"#asignatura_curso_dialog #contenedor_asignaturas #cabecera_especifica_opcional\").addClass('oculto');\n      }\n    } \n\n    //Se oculta el aviso de error si no quedan elementos con input vacíos. Si quedan se deshabilita el botón \"guardar\".\n    if($(\"#asignatura_curso_dialog #contenedor_asignaturas li input[class='invalid']\").size()==0){\n      $(\"#asignatura_curso_dialog #aviso_error\").addClass('oculto');\n      //Se habilita/deshabilita los botones si hay modificaciones o no.\n      if($(\"#asignatura_curso_dialog #contenedor_asignaturas .back_modificado\").size()>0 || $(\"#asignatura_curso_dialog #lista_asignaturas button:not(.elected)[class*='asignada']\").size()>0){\n        $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",false);\n        $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",false);\n      }\n      else{\n        $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n        $(\"#asignatura_curso_dialog #asignaturas_curso_restablecer\").prop(\"disabled\",true);\n      }\n    }\n    else{\n      $(\"#asignatura_curso_dialog #asignaturas_curso_submit\").prop(\"disabled\",true);\n    }\n  });\n\n\n//////////////////////////////////\n//       Periodo Lectivo        //\n//////////////////////////////////\n  \n  // Botones del calendario.\n  $(document).on('click',\"#botones_leyenda a[id='inicio']\",function(event){\n    event.preventDefault();\n    fecha=$(this).attr(\"fecha\").split(\"/\");\n    $(\"#calendario\")\n\n    month=parseInt($(\"#calendario td[data-handler='selectDay'] \").attr(\"data-month\"))+1;\n    mes=parseInt(fecha[1]);\n\n    year=$(\"#calendario td[data-handler='selectDay'] \").attr(\"data-year\");             \n    if(año==year && mes!=month){\n      $(\"#calendario\").datepicker(\"setDate\", $(this).attr(\"fecha\"));\n    }\n  });\n\n  $(document).on('click',\"#botones_leyenda a[id='final']\",function(event){\n    fecha=$(this).attr(\"fecha\").split(\"/\");\n    $(\"#calendario\")\n\n    month=parseInt($(\"#calendario td[data-handler='selectDay'] \").attr(\"data-month\"))+1;\n    mes=parseInt(fecha[1]);\n\n    year=$(\"#calendario td[data-handler='selectDay'] \").attr(\"data-year\");             \n    if(año==year && mes!=month){\n      $(\"#calendario\").datepicker(\"setDate\", $(this).attr(\"fecha\"));\n    }\n\n  });\n  \n  $(document).on('click',\"#botones_leyenda a[id='hoy']\",function(event){\n    event.preventDefault();  \n    if(!$(\"#calendario td\").hasClass(\"ui-datepicker-today\")){\n      $(\"#calendario\").datepicker().datepicker(\"setDate\", new Date());\n    }\n  });\n\n  $(document).on(\"mouseover\",\"#botones_leyenda a\", function () {\n    $(this).addClass(\"ui-state-hover\");\n  });\n\n  $(document).on(\"mouseout\",\"#botones_leyenda a\", function () {\n    $(this).removeClass(\"ui-state-hover\");\n  });\n  \n \n // Se actualiza el calendario de festivos\n  $(document).on('click',\"#actualizar_calendario\",function(event){\n    event.preventDefault();\n    // Retardo para ejecutarlo una vez cargado el datepicker.\n        $(\"#d_calendario #div_leyenda\").addClass(\"oculto\");      \n\n    setTimeout(function(){ \n      mes=$(\"#d_calendario  #contenedor_calendar tbody td[data-handler='selectDay']\").attr(\"data-month\");\n      año=$(\"#d_calendario  #contenedor_calendar tbody td[data-handler='selectDay']\").attr(\"data-year\");\n      mes++;\n      if(mes!=10 && mes!=11 && mes!=12){\n        mes='0'+mes;\n      }\n      //Se carga los festivos en la leyenda.\n      $(\"#d_calendario #div_leyenda\").empty();\n      $(\"#d_calendario #div_leyenda\").load(Routing.generate('festivos_por_mes', {id:mes}));\n      $(\"#calendario td a\").removeClass(\"festivo\");\n      $(\"#calendario td a\").removeClass(\"vacaciones\");\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('dias_festivos'),\n        data: {mes:mes},\n        dataType: 'json',\n        success: function(response) {\n          for (var key in response.data) { \n            $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a:contains('\"+response.data[key][\"dia\"]+\"')\").each(function(){  \n              var dato=response.data[key][\"dia\"];\n              var comp= $(this).text();\n              // Con :contains se obtiene los días del calendario que contiene en sus dígitos el dato dado.\n              // Si el dato obtenido tiene un solo dígito, se excluye los días de dos dígitos del calendario que contiene ese dato.\n              if(String(dato).length==\"1\"){\n                if(String(comp).length==\"1\"){\n                  $(this).addClass(\"festivo\");\n                  // Se comprueba que el día festivo es un domingo y que el lunes no hay ningún festivo añadido. \n                  if($(this).closest(\"td\").hasClass(\" ui-datepicker-week-end \") &&  $(this).closest(\"tr\").find(\"td:last a\").text() == $(this).text() && !$(\"#d_calendario #div_leyenda h4[id='\"+$(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").text()+\"']\").length){\n                    // Mostramos el traspado del festivo al lunes.\n                    $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").addClass(\"festivo\");\n                    $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").attr(\"tipo\",\"traslado\");\n                    setTimeout(function(){\n                      //Se muestra solo un traslado del festivo (ya que hay dos elementos con el mismo día).\n                      $(\"#d_calendario #div_leyenda h4[id='\"+dato+\"']\").each(function(){\n                        if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                          $( \"<h4 id='\"+(dato+1)+\"'>\"+(dato+1)+\"</h4><h4 id='h4_descripcion'>Traslado del Festivo del día \"+dato+\"</h4>\" ).insertAfter( $(this).next());\n                        }\n                      });\n                    }, 50);\n                  }\n                }\n              }\n              else{\n                $(this).addClass(\"festivo\");\n                // Se comprueba que el día festivo es un domingo, que el lunes no hay ningún festivo añadido y que el festivo no coincida con el último día del mes. \n                if($(this).closest(\"td\").hasClass(\" ui-datepicker-week-end \") &&  $(this).closest(\"tr\").find(\"td:last a\").text() == $(this).text() && !$(\"#d_calendario #div_leyenda h4[id='\"+$(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").text()+\"']\").length && $(\"#calendario tbody tr:last td:last a\").text()!=$(this).text() ){\n                  // Mostramos el traspado del festivo al lunes.\n                  $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").addClass(\"festivo\");\n                  $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").attr(\"tipo\",\"traslado\");\n                  setTimeout(function(){\n                    //Se muestra solo un traslado del festivo (ya que hay dos elementos con el mismo día).\n                    $(\"#d_calendario #div_leyenda h4[id='\"+dato+\"']\").each(function(){\n                      if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                        $( \"<h4 id='\"+(dato+1)+\"'>\"+(dato+1)+\"</h4><h4 id='h4_descripcion'>Traslado del Festivo del día \"+dato+\"</h4>\" ).insertAfter( $(this).next());\n                      }\n                    });\n                  }, 50);\n                }\n              }\n            });\n          }\n          // Se comprueba de que existe un día de comienzo/fin de vacaciones.\n          if(response.inicio_vacaciones && response.fin_vacaciones){\n            var descripcion_inicio=$(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'\").next().text().split(\" \");\n            var descripcion_fin=$(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'\").next().text().split(\" \");\n            // Se comprueba que existe ambos días de vacaciones en el mismo mes y que pertenecen al mismo tipo de vacaciones.\n            if(descripcion_inicio[3]==descripcion_fin[3]){\n              // Se retarda para modificar los días festivos dentro de las vacaciones.\n              setTimeout(function(){\n                $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"']\").find(\"a\").filter(function(){return $(this).text()==response.inicio_vacaciones[\"dia\"];}).removeClass(\"festivo\");\n                $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"']\").find(\"a\").filter(function(){return $(this).text()==response.fin_vacaciones[\"dia\"];}).removeClass(\"festivo\");\n                // Se comprueba si existe al inicio de vacaciones día siguiente con festivo de traslado para eliminarlo.\n                if($(\"#d_calendario #div_leyenda h4[id='\"+(response.inicio_vacaciones[\"dia\"]+1)+\"'\").next().text().indexOf(\"Traslado\") >= 0){\n                    $(\"#d_calendario #div_leyenda h4[id='\"+(response.inicio_vacaciones[\"dia\"]+1)+\"'\").next().remove();\n                    $(\"#d_calendario #div_leyenda h4[id='\"+(response.inicio_vacaciones[\"dia\"]+1)+\"'\").remove();\n                    $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"']\").find(\"a\").filter(function(){return $(this).text()==(response.inicio_vacaciones[\"dia\"]+1);}).removeClass(\"festivo\");                \n                }\n                // Se añade la clase vacaciones a los días correspondientes.\n                for(var i = response.inicio_vacaciones[\"dia\"]; i <= response.fin_vacaciones[\"dia\"]; i++){\n                  $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"']\").find(\"a\").filter(function(){return $(this).text()==i;}).addClass(\"vacaciones\");\n                  //$(\"#d_calendario #div_leyenda h4[id='\"+i+\"'\").addClass(\"vacaciones\");              \n                }\n                $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'\").addClass(\"vacaciones\");              \n                $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'\").addClass(\"vacaciones\");              \n\n                // Si se repite el día de inicio de vacaciones, se elimina la clase vacaciones en los días de la leyenda que no contiene la información de las vacaciones.\n                if($(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").length>1){\n                  $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").each(function(){\n                    if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                      $(this).removeClass(\"vacaciones\");\n                    }\n                  });\n                }\n                // Si se repite el día de fin de vacaciones, se elimina la clase vacaciones en los días de la leyenda que no contiene la información de las vacaciones.\n                if($(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").length>1){\n                  $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").each(function(){\n                    if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                      $(this).removeClass(\"vacaciones\");\n                    }               \n                    // Se elimina el día de final de vacaciones en la leyenda para unificarlo con el día de inicio.\n                    //else if($(this).next().text().indexOf(\" Vacaciones \")>=0){\n                     // $(this).next().remove();\n                     // $(this).remove();\n                   // }\n                  });\n\n                  // Se modifica el inicio de vacaciones en la leyenda para añadir el día de fin de vacaciones.\n                  //$(\"#d_calendario #div_leyenda h4[class='vacaciones']\").text(response.inicio_vacaciones[\"dia\"]+\"-\"+response.fin_vacaciones[\"dia\"]);\n                  //$(\"#d_calendario #div_leyenda h4[class='vacaciones']\").next().text($(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text().replace(\"Inicio \",\"\"));\n                }\n            // Se modifica el inicio de vacaciones en la leyenda para añadir el día de fin de vacaciones.\n                  //$(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").text(response.inicio_vacaciones[\"dia\"]+\"-\"+response.fin_vacaciones[\"dia\"]);\n                  //$(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").next().text($(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text().replace(\"Inicio Vacaciones de \",\"\"));\n                  //$(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").next().remove();\n                  //$(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").remove();\n              }, 20);\n            }\n          }\n          else if(response.inicio_vacaciones){\n\n            var date = new Date(año,mes,1);\n            var fecha_ultimoDia = new Date(date.getFullYear(), date.getMonth() , 0).toString().split(\" \");\n            último_día=fecha_ultimoDia[2];\n            \n            setTimeout(function(){\n            // Si se repite el día de inicio de vacaciones, se asigna la clase vacaciones al día de inicio de las vacaciones.\n            if($(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").length>1){\n              $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").each(function(){\n                if($(this).next().text().indexOf(\" Vacaciones \")>0){\n                  $(this).addClass(\"vacaciones\")\n                }\n              });\n              // Se comprueba que el festivo está tras las vacaciones en la leyenda, en caso contrario se modifica.\n              if($(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").closest(\"h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").text()==response.inicio_vacaciones[\"dia\"]){\n                vacaciones=$(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text();\n                $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().remove();\n                $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").remove();\n\n                $( \"<h4 id='\"+response.inicio_vacaciones[\"dia\"]+\"'class='vacaciones'>\"+response.inicio_vacaciones[\"dia\"]+\"</h4><h4 id='h4_descripcion'>\"+vacaciones+\"</h4>\" ).insertBefore( $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class!='vacaciones']\")); \n              }\n            }\n            else{\n              $(\"#d_calendario #div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").addClass(\"vacaciones\");\n            }\n\n            // Se modifica los días desde inicio de vacaciones hasta final de mes puesto que sigue en el siguiente mes.\n            for(var i = response.inicio_vacaciones[\"dia\"]; i <= último_día; i++){\n              $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"']\").find(\"a\").filter(function(){return $(this).text()==i;}).addClass(\"vacaciones\");\n            }\n\n            }, 50);\n          }\n          else if(response.fin_vacaciones){\n\n            setTimeout(function(){\n\n            //Se añade la clase vacaciones, solo a los elementos de ese día que contiene la información de las vacaciones.\n            if($(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").length>1){\n              $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").each(function(){\n                if($(this).next().text().indexOf(\" Vacaciones \")>0){\n                  $(this).addClass(\"vacaciones\");\n                }\n              });\n              // Se comprueba que el festivo está tras las vacaciones en la leyenda, en caso contrario se modifica.\n              if($(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").closest(\"h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").text()==response.fin_vacaciones[\"dia\"]){\n                vacaciones=$(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text();\n                $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().remove();\n                $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").remove();\n\n                $( \"<h4 id='\"+response.fin_vacaciones[\"dia\"]+\"'class='vacaciones'>\"+response.fin_vacaciones[\"dia\"]+\"</h4><h4 id='h4_descripcion'>\"+vacaciones+\"</h4>\" ).insertBefore( $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class!='vacaciones']\")); \n              }\n            }\n            else{\n              $(\"#d_calendario #div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").addClass(\"vacaciones\");\n            }\n\n            // Se modifica los días desde inicio del mes hasta final de vacaciones puesto que sigue en el mes anterior.\n            for(var i = response.fin_vacaciones[\"dia\"]; i >= 1; i--){\n              $(\"#calendario .ui-datepicker-calendar td[data-month='\"+(mes-1)+\"']\").find(\"a\").filter(function(){return $(this).text()==i;}).addClass(\"vacaciones\");\n            }\n\n            }, 50);\n          }\n        }\n      })\n\n      // Se Comprueba si el último día del mes anterior es un domingo y es festivo, para traspasar el festivo al primer día del mes actual.\n      dia_1=$(\"#calendario tbody tr:first td:first a\");\n      if( dia_1.text() == \"1\" ){\n        // Se obtiene un string con los datos el últimodía del mes anterior (Ej: Sun Jan 31 2016) .\n        fecha=new Date(dia_1.closest(\"div\").find(\"div>span:nth-child(2) \").text(), \"0\"+$(\"#calendario tbody tr:first td:last\").attr(\"data-month\"), 0).toDateString();\n        fecha=fecha.split(\" \");\n        dia_ant=fecha[2];\n        // Asignamos a una variable el mes anterior que correcponda. En datepicker aparece el número del mes-1.\n        if($(\"#calendario tbody tr:first td:last\").attr(\"data-month\")==\"0\"){\n          mes_ant=\"12\";\n        }\n        else if($(\"#calendario tbody tr:first td:last\").attr(\"data-month\").length==\"1\"){\n          mes_ant=0+$(\"#calendario tbody tr:first td:last\").attr(\"data-month\");\n        }\n        else{\n          mes_ant=$(\"#calendario tbody tr:first td:last\").attr(\"data-month\");\n        }\n        var MES = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('comprobar_festivo'),\n          data: {mes:mes_ant, dia:dia_ant},\n          dataType: 'json',\n          success: function(response) {\n\n            if(response.data!=null)\n            {\n              dia_1.addClass(\"festivo\");\n              setTimeout(function(){\n                $(\"#d_calendario #div_leyenda\").prepend(\"<h4 id='\"+dia_1.text()+\"'>\"+dia_1.text()+\"</h4><h4 id='h4_descripcion'>Traslado del Festivo del día \"+dia_ant+\" de \"+MES[$(\"#calendario tbody tr:first td:last\").attr(\"data-month\")-1]+\" </h4>\" );\n              }, 20);\n            }\n          }\n        })\n      }\n      setTimeout(function(){\n        // Se muestra la leyenda una vez actualizado el calendario. \n        $(\"#d_calendario #div_leyenda\").removeClass(\"oculto\");\n      }, 150);        \n    }, 150);\n  });\n\n  // Insertar festivos en calendario.\n  $(document).on('click',\"#calendario a[class='festivo']\",function(event){\n    var tipo= $(this).attr('id').split('_');\n    \n    $('#festivos_dialog').load(Routing.generate(\"festivos_new\"), function(){\n      $('#festivos_dialog form').attr(\"tipo\",tipo[1].charAt(0).toUpperCase() + tipo[1].slice(1) );\n      $(\"#festivos_tipo\").val($(\"#festivos_nueva\").attr(\"tipo\"));\n    }).dialog('open'); \n  });\n\n\n  // Vistas de Festivos.\n  $(document).on('click',\"#vistas_festivos input\",function(event){\n    var option= $(this).attr('id').split('_');\n    $(\"#contenedor_calendario>div\").attr(\"style\",\"display: none;\");\n    $(\"#contenedor_calendario>div[id*='\"+option[1]+\"']\").attr(\"style\",\"display: block;\");\n  });\n\n  // Insertar festivos en listas.\n  $(document).on('click',\"#asignacion_festivos a[id$='_modal']\",function(event){\n    event.preventDefault();\n    var tipo= $(this).attr('id').split('_');\n    \n    $('#festivos_dialog').load(Routing.generate(\"festivos_new\"), function(){\n      $('#festivos_dialog form').attr(\"tipo\",tipo[1].charAt(0).toUpperCase() + tipo[1].slice(1) );\n      $(\"#festivos_tipo\").val($(\"#festivos_nueva\").attr(\"tipo\"));\n    }).dialog('open'); \n  });\n\n  $(document).on('change',\"#dia_festivo select\",function(event){\n    $(\"#mes_festivo select option\").prop(\"disabled\", false);    \n    if($(this).val()==31){\n      $(\"#mes_festivo select option[value='04']\").prop(\"disabled\", true);  \n      $(\"#mes_festivo select option[value='06']\").prop(\"disabled\", true);  \n      $(\"#mes_festivo select option[value='09']\").prop(\"disabled\", true);  \n      $(\"#mes_festivo select option[value='11']\").prop(\"disabled\", true);  \n      $(\"#mes_festivo select option[value='02']\").prop(\"disabled\", true);  \n    }\n    if($(this).val()==30){\n      $(\"#mes_festivo select option[value='02']\").prop(\"disabled\", true);  \n    }\n    if($(this).val()==29){\n      var ano = (new Date).getFullYear();\n        if ($(this).closest(\"form\").attr(\"tipo\")!=\"Curso\" || !((ano % 4 == 0) && ((ano % 100 != 0) || (ano % 400 == 0)))){\n          $(\"#mes_festivo select option[value='02']\").prop(\"disabled\", true);  \n        }\n    }\n    if($(\"#mes_festivo select\").val()==null){\n      $(\"#mes_festivo select option[value=' ']\").prop('selected',true);\n    }\n    $(\"#festivos_dia\").val($(\"#dia_festivo select\").val());\n  });\n\n  $(document).on('change',\"#mes_festivo select\",function(event){\n    $(\"#dia_festivo select option\").prop(\"disabled\", false);  \n\n    if($(this).val()==04 || $(this).val()==06 || $(this).val()==09 || $(this).val()==11){\n      $(\"#dia_festivo select option[value='31']\").prop(\"disabled\", true);  \n    }\n    if($(this).val()==02){\n      $(\"#dia_festivo select option[value='31']\").prop(\"disabled\", true);\n      $(\"#dia_festivo select option[value='30']\").prop(\"disabled\", true);  \n      var ano = (new Date).getFullYear();\n      if ($(this).closest(\"form\").attr(\"tipo\")!=\"Curso\" || !((ano % 4 == 0) && ((ano % 100 != 0) || (ano % 400 == 0)))){\n        $(\"#dia_festivo select option[value='29']\").prop(\"disabled\", true);  \n      }\n    }\n    if($(\"#dia_festivo select\").val()==null){\n      $(\"#dia_festivo select option[value=' ']\").prop('selected',true);\n    }\n    $(\"#festivos_mes\").val($(\"#mes_festivo select option:selected\").text());\n    $(\"#festivos_numMes\").val($(\"#mes_festivo select\").val());\n  });\n\n   $(document).on('change',\"#tipo_festivo select\",function(event){\n    $(\"#festivos_tipo\").val($(\"#tipo_festivo select\").val());\n  });\n\n  $(document).on('change',\"form[id^='festivos_'] :input\",function(event){\n    form= $(this).closest(\"form\");\n\n    if($(this).val()==\"\")\n    {\n      $(this).addClass(\"invalid\");\n      form.find(\"span\").removeClass(\"oculto\");\n    }\n    else{\n      $(this).removeClass(\"invalid\");\n\n      if (!form.find(\":input\").hasClass('invalid')){\n        form.find(\"span\").addClass(\"oculto\");\n      }\n    }\n  });\n\n  $(document).on(\"submit\",\"#festivos_nueva\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    var change=0;\n\n    $(\"#festivos_nueva :input\").removeClass(\"invalid\");\n\n      if($(\"#festivos_tipo\").val()==\"\"){\n      $(\"#tipo_festivo select\").addClass(\"invalid\");\n      $(\"#festivos_nueva span\").removeClass(\"oculto\");\n      change=1;\n    }\n    if($(\"#festivos_dia\").val()==\"\"){\n      $(\"#dia_festivo select\").addClass(\"invalid\");\n      $(\"#festivos_nueva span\").removeClass(\"oculto\");\n      change=1;\n    }\n    if($(\"#festivos_mes\").val()==\"\"){\n      $(\"#mes_festivo select\").addClass(\"invalid\");\n      $(\"#festivos_nueva span\").removeClass(\"oculto\");\n      change=1;\n    }\n    if($(\"#festivos_descripcion\").val()==\"\"){\n      $(\"#festivos_descripcion\").addClass(\"invalid\");\n      $(\"#festivos_nueva span\").removeClass(\"oculto\");\n\n      change=1;\n    }\n    if(change==1){\n      return 0;\n    }\n    else{\n      $(\"#festivos_nueva span\").addClass(\"oculto\");\n    }\n\n    var dia= $(\"#dia_festivo select\").val();\n    var mes= $(\"#mes_festivo select\").val();\n    var descripcion=\"\";\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_festivo'),\n      data: {dia:dia, mes:mes ,descripcion:descripcion},\n      dataType: 'json',\n      success: function(response) {\n        if(response.data!=null)\n        {\n          error.play();\n          swal({\n            title: \"Día festivo ya asignado\",\n            text: 'El día y mes introducido ya tiene asignado un festivo en el sistema.',\n            type: \"error\",\n            confirmButtonColor: color\n          });\n          return false;\n        }\n        else{\n          $.ajax({\n            type: 'POST',\n            url: $(\"#festivos_nueva\").attr('action'),\n            data:$(\"#festivos_nueva\").serialize(), \n            dataType: 'json',\n  \n            success: function(response) {\n              if($(\"#festivos_nueva\").attr(\"tipo\")!=\"\"){\n                tipo=$(\"#festivos_tipo\").val();\n                $(\"#festivos_dialog\").dialog('close');\n                //Se actualiza la lista de festivos.\n                div=$(\"#asignacion_festivos div[id$='\"+tipo.toLowerCase()+\"'] .Festivos_list\");\n                $(div).empty();\n                $(div).load(Routing.generate('festivos_por_tipo', {id:tipo}));\n              }\n              else{\n                $(\"#festivos_dialog\").dialog('close');\n                //Se actualiza la lista de festivos.\n                div=$(\"#asignacion_festivos div[style='display: block;'] .Festivos_list\");\n                $(div).empty();\n                var tipo= form.attr(\"tipo\");\n                $(div).load(Routing.generate('festivos_por_tipo', {id:tipo}));\n\n              }\n              limpiarForm(form);\n\n              //Actualización del contenido de pestañas.\n              $(\"#reservar_instalaciones\").update_tab();\n              $(\"#reservar_equipamientos\").update_tab();\n              $(\"#registrar_noticias\").update_tab();\n              $(\"#registrar_eventos\").update_tab();\n\n              $(\"#actualizar_calendario\").trigger(\"click\");\n            }\n          })\n          return false;\n        } \n      } \n    })\n  });\n\n\n  $(document).on('click',\"#asignacion_festivos a[href$='edit']\",function(event){\n    event.preventDefault();\n    var arr= $(this).attr('href').split('/');\n    $('#festivos_dialog').load(Routing.generate(arr[4]+\"_edit\", {id:arr[5]}), function(){\n    }).dialog('open'); \n  });\n\n  $(document).on(\"submit\",\"#festivos_edit\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n        var change=0;\n    $(\"#festivos_nueva :input\").removeClass(\"invalid\");\n\n    if($(\"#dia_festivo select option:selected\").val()==\" \"){\n      $(\"#dia_festivo select\").addClass(\"invalid\");\n      $(\"#festivos_edit span\").removeClass(\"oculto\");\n      change=1;\n    }\n    if($(\"#mes_festivo select option:selected\").val()==\" \"){\n      $(\"#mes_festivo select\").addClass(\"invalid\");\n      $(\"#festivos_edit span\").removeClass(\"oculto\");\n      change=1;\n    }\n    if($(\"#festivos_descripcion\").val()==\"\"){\n      $(\"#festivos_descripcion\").addClass(\"invalid\");\n      $(\"#festivos_edit span\").removeClass(\"oculto\");\n\n      change=1;\n    }\n    if(change==1){\n      return 0;\n    }\n    else{\n      $(\"#festivos_edit span\").addClass(\"oculto\");\n    }\n    var dia= $(\"#dia_festivo select\").val();\n    var mes= $(\"#mes_festivo select\").val();\n    var descripcion=$(\"#festivos_descripcion\").val();\n  \n    $.ajax({\n      type: 'PUT',\n      url: $(\"#festivos_edit\").attr('action'),\n      data:$(\"#festivos_edit\").serialize(), \n  \n      success: function() {\n        var tipo= $(\"#festivos_tipo\").attr(\"value\");\n        if($(\"#festivos_edit\").attr(\"tipo\")!=\"\"){\n          tipo2=$(\"#festivos_tipo\").val();\n          $(\"#festivos_dialog\").dialog('close'); \n                \n          //Se actualizan las listas modificadas de los festivos.\n          div=$(\"#asignacion_festivos div[id$='\"+tipo.toLowerCase()+\"'] .Festivos_list\");\n          $(div).empty();\n          $(div).load(Routing.generate('festivos_por_tipo', {id:tipo}));\n\n          div2=$(\"#asignacion_festivos div[id$='\"+tipo2.toLowerCase()+\"'] .Festivos_list\");\n          $(div2).empty();\n          $(div2).load(Routing.generate('festivos_por_tipo', {id:tipo2}));\n        }\n          else{\n          $(\"#festivos_dialog\").dialog('close'); \n\n          //Se actualiza las lista de festivos.\n          div=$(\"#asignacion_festivos div[style='display: block;'] .Festivos_list\");\n          $(div).empty();\n          $(div).load(Routing.generate('festivos_por_tipo', {id:tipo}));\n        }\n\n        //Actualización del contenido de pestañas.\n        $(\"#reservar_instalaciones\").update_tab();\n        $(\"#reservar_equipamientos\").update_tab();\n        $(\"#registrar_noticias\").update_tab();\n        $(\"#registrar_eventos\").update_tab();\n\n        $(\"#actualizar_calendario\").trigger(\"click\");\n      }\n    })\n    return false;\n  });\n\n  //Eliminación de festivos.\n  $(document).on(\"click\",\"#festivos_delete button\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n    var arr= $('#festivos_delete').attr('action').split('/');\n    \n    aviso.play();\n    swal({\n      title: \"Eliminación del día festivo del sistema.\",\n      text: \"¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'DELETE',\n          url: Routing.generate(arr[4]+\"_delete\", {id:arr[5]}),\n          data: $('#festivos_delete').serialize(),\n        \n          success: function() {\n            tipo=$(\"#festivos_tipo\").val();\n\n            if($(\"#festivos_nueva\").attr(\"tipo\")!=\"\"){\n              $(\"#festivos_dialog\").dialog('close');\n              div=$(\"#asignacion_festivos div[id$='\"+tipo.toLowerCase()+\"'] .Festivos_list\");\n              $(div).empty();\n              $(div).load(Routing.generate('festivos_por_tipo', {id:tipo}));\n            }\n            else{\n              $(\"#festivos_dialog\").dialog('close');\n              div=$(\"#asignacion_festivos div[style='display: block;'] .Festivos_list\");\n              $(div).empty();\n              $(div).load(Routing.generate('festivos_por_tipo', {id:tipo}));\n            }\n\n            //Actualización del contenido de pestañas.\n            $(\"#reservar_instalaciones\").update_tab();\n            $(\"#reservar_equipamientos\").update_tab();\n            $(\"#registrar_noticias\").update_tab();\n            $(\"#registrar_eventos\").update_tab();\n\n            $(\"#actualizar_calendario\").trigger(\"click\");\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n    return false;\n  });\n\n\n  $(document).on('change',\"#contenedor_festivos input[type!='radio']\",function(event){\n    $(this).removeClass(\"invalid\");\n    $(this).removeClass(\"modified\");\n \n    if($(this).val().toString()==$(this).attr(\"value\")+\" \" || $(this).val().toString()==$(this).attr(\"value\")){\n      $(this).removeClass(\"modified\");\n      return false;\n    }\n\n    var dato=$(this).attr(\"id\").split(\"_\");\n\n    if($(this).val()==\" \"){\n      $(this).removeClass(\"modified\");\n      if($(\"#inicio_\"+dato[1]).val()==\" \" && $(\"#fin_\"+dato[1]).val()==\" \"){\n        $(\"#inicio_\"+dato[1]).removeClass(\"invalid\");\n        $(\"#fin_\"+dato[1]).removeClass(\"invalid\");\n      }\n    }\n    else{\n      $(this).addClass(\"modified\");\n     /* if((!$(\"#inicio_\"+dato[1]).val()==\"\" && !$(\"#inicio_\"+dato[1]).val()==\" \" && !$(\"#fin_\"+dato[1]).val()==\"\" && !$(\"#fin_\"+dato[1]).val()==\" \") && ($(\"#inicio_\"+dato[1]).val() < $(\"#fin_\"+dato[1]).val())){\n        $(\"#inicio_\"+dato[1]).addClass(\"invalid\");\n        $(\"#fin_\"+dato[1]).addClass(\"invalid\");\n\n      }*/\n    }\n  });\n\n  $(document).on('keyup',\"#contenedor_festivos input[type!='radio']\",function(e){\n    e.preventDefault();\n\n    var festivo= $(this).attr(\"id\").split(\"_\"); \n    //Se elimina el valor de los inputs al presionar una tecla diferente al tabulador y Enter.\n    if(e.keyCode == 9 || e.keyCode == 13)\n    {\n      if(festivo[0]==\"inicio\"){\n        $(\"#fin_\"+festivo[1]).focus();\n      }\n      else{\n        $(\"#inicio_\"+festivo[1]).focus();\n      }\n    }      \n    else{\n      $(this).val(\"\");\n      dia=$(\"#ui-datepicker-div\").find(\"a[class*='ui-state-active']\");\n      dia.removeClass(\"ui-state-active ui-state-hover\");\n    }\n  });\n\n  $(document).on('click',\"#button_festivos_all\",function(event){\n    //Retardo por si se da el caso de modificar solo un input de vacaciones y le damos a guardar sin antes actualizarse el otro input.\n   setTimeout(function(){\n    if($(\"#contenedor_festivos input[type!='radio'][class*='modified']\").length==0){\n      return false;\n    }\n\n    $(\"#contenedor_festivos input[type!='radio'][class*='modified']\").each(function(){  \n      id=$(this).attr(\"id\");\n\n      if($(this).val()){\n        fecha=$(this).val().split(\" \");\n        dia=fecha[0];\n        mes=fecha[1];\n        if(mes==\"Diciembre\"){\n          año=$(\"#año_inicio\").text();\n        }\n        else{\n          año=$(\"#año_fin\").text();\n        }\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('registrar_dia_vacaciones'),\n          data: {id:id, dia:dia, mes:mes, año:año},\n          dataType: 'json',\n          success: function(response) {\n            // Se actualiza la pestaña de periodo lectivo y reservas de equipamientos.\n            $(\"#periodo_lectivo\").update_tab();\n            $(\"#reservar_instalaciones\").update_tab();\n            $(\"#reservar_equipamientos\").update_tab();\n          }\n        })\n      }\n      else{\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_dia_vacaciones'),\n          data: {id:id},\n          dataType: 'json',\n          success: function(response) {\n            // Se actualiza la pestaña de periodo lectivo.\n            $(\"#periodo_lectivo\").update_tab();\n            $(\"#reservar_instalaciones\").close_tab();\n            $(\"#reservar_equipamientos\").close_tab();\n          }\n        })\n      }\n    });\n    \n    var texto=\"\";\n\n    if($(\"#asignacion_festivos #inicio_navidad\").hasClass('modified')||$(\"#asignacion_festivos #fin_navidad\").hasClass('modified')){\n      if($(\"#asignacion_festivos #inicio_navidad\").attr(\"value\")==\"\"){\n        texto+=\"<span>- Vacaciones de Navidad <strong>registrada</strong><span>\";\n      }\n      else{\n        if($(\"#asignacion_festivos #inicio_navidad\").val()!=\"\"){\n          texto+=\"<span>- Vacaciones de Navidad <strong>actualizada</strong><span>\";\n        }\n        else{\n          texto+=\"<span>- Vacaciones de Navidad <strong>eliminada</strong><span>\";\n        }\n      }\n    }\n\n    if($(\"#asignacion_festivos #inicio_semanasanta\").hasClass('modified')||$(\"#asignacion_festivos #fin_semanasanta\").hasClass('modified')){\n      if($(\"#asignacion_festivos #inicio_semanasanta\").attr(\"value\")==\"\"){\n        texto+=\"<span>- Vacaciones de Semana Santa <strong>registrada</strong><span>\";\n      }\n      else{\n        if($(\"#asignacion_festivos #inicio_semanasanta\").val()!=\"\"){\n          texto+=\"<span>- Vacaciones de Semana Santa <strong>actualizada</strong><span>\";\n        }\n        else{\n          texto+=\"<span>- Vacaciones de Semana Santa <strong>eliminada</strong><span>\";\n        }\n      }\n    }\n    // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n    $(\".ui-pnotify\").remove();\n\n    exito.play();\n    new PNotify({\n      title:texto,\n      addclass: \"custom\",\n      type: \"success\",\n      shadow: true,\n      hide: true,\n      width: \"420px\",\n      buttons: {\n        sticker: false,\n        labels:{close: \"Cerrar\"}\n      },\n      stack: right_Stack,\n      animate: {\n        animate: true,\n        in_class: \"fadeInRight\",\n        out_class: \"fadeOutRight\",\n      }\n    });\n    return false;\n\n   },200);\n  });\n\n  // Se actualiza la pestaña de periodo lectivo.\n  $(document).on('click',\"#button_festivos_rest\",function(event){\n    $(\"#contenedor_festivos input[type!='radio'][class*='modified']\").each(function(){  \n      $(this).val($(this).attr(\"value\"));\n      $(this).removeClass(\"modified\");\n    });\n  });\n\n  $(document).on('click',\"#button_fecha_curso_rest\",function(event){\n    $(\"#fin_curso_disable\").trigger(\"click\");\n  });\n\n  $(document).on('click',\"#button_fecha_curso\",function(event){\n    $(\"#curso_dialog  #aviso_error\").hide();\n\n    $(\"#curso_dialog input\").each(function(){\n      $(this).removeClass(\"error_guardar\");\n\n      if($(this).val()==\" \" || $(this).val()==\"\"){\n        $(this).addClass(\"error_guardar\");\n      }  \n    });\n    if($(\"#curso_dialog input\").hasClass(\"error_guardar\")){\n      $(\"#curso_dialog  #aviso_error\").show();\n    }\n    else{\n      $(\"#curso_dialog  #aviso_error\").hide();\n      var inicio=$(\"#fecha_inicio\").val().split(\" \");\n      var fin=$(\"#fecha_fin\").val().split(\" \");\n      var curso=$(\"#curso_dialog legend\").text().split(\" \");\n      var MES = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n\n      mes_ini = jQuery.inArray( inicio[1], MES );\n      mes_fin = jQuery.inArray( fin[1], MES );\n\n      ini = new Date(curso[1], mes_ini, inicio[0]);\n      fin = new Date(curso[3], mes_fin, fin[0]);\n\n      fecha_ini = ini.toLocaleString();\n      fecha_fin = fin.toLocaleString();\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('registrar_fecha_curso'),\n        data: {fecha_ini:fecha_ini.substring(0,9), fecha_fin:fecha_fin.substring(0,9)},\n        dataType: 'json',\n        success: function(response) {\n          exito.play();\n          new PNotify({\n            text:\"Se ha registrado la fecha de inicio y final del curso.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          // Se añade un gif para la espera de la carga del contenido actualizado.\n          $('#asignacion_festivos').html('<div class=\"ajaxload\"><img src=\"/Symfony/web/bundles/backend/images/loading.gif\"/></div>');\n          // Se actualiza la pestaña de periodo lectivo.\n          $(\"#curso_dialog div[class='nuevo']\").removeClass(\"nuevo\");\n          $(\"#periodo_lectivo\").update_tab();\n          $(\"#curso_dialog\").dialog('close');\n        }\n      })\n    }\n  });\n\n  $(document).on('focus',\"#registro_fecha_curso input\",function(event){\n    setTimeout(function(){ \n        $(\"#registro_fecha_curso\").next().addClass('oculto');\n    },100);\n\n  });\n\n   $(document).on('blur',\"#registro_fecha_curso input\",function(event){\n\n  $(\"#registro_fecha_curso\").next().removeClass('oculto');\n  });\n\n\n\n  $(document).on('change',\"#registro_fecha_curso input\",function(event){\n\n    if($(this).val()!=\" \" && $(this).val()!=\"\"){\n      $(this).removeClass(\"error_guardar\");\n    }\n    else{\n      //Se oculta el día anterior seleccionado si el input está vacío.\n      if($(this).attr(\"id\")==\"fecha_inicio\"){\n        dia=$(\"#inicio_curso\").find(\"a[class*='ui-state-active']\");\n        dia.removeClass(\"ui-state-active ui-state-hover\");\n      }\n      else{\n        dia=$(\"#fin_curso\").find(\"a[class*='ui-state-active']\");\n        dia.removeClass(\"ui-state-active ui-state-hover\");\n      }\n    }\n\n    if(!$(\"#curso_dialog input\").hasClass(\"error_guardar\")){\n      $(\"#curso_dialog  #aviso_error\").hide();\n    }\n  });\n\n  $(document).on(\"click\",\"button[title='Close']\",function(event){\n    event.preventDefault()\n    if($(this).closest(\"div\").next().attr(\"id\")==\"curso_dialog\" && $(this).closest(\"div\").next().children('div').attr(\"id\")==\"nuevo\"){\n      $(\"#tabs ul li[aria-selected='true'] span\").trigger(\"click\");\n    }\n  }); \n\n  $(document).on('blur','#fecha_inicio' ,function() {\n    $(this).removeClass(\"error_guardar\");\n\n    if($(this).val()==\" \" || $(this).val()==\"\"){\n      $(this).addClass(\"error_guardar\");\n    }  \n\n  });\n\n  $(document).on('blur','#fecha_fin' ,function() {\n    $(this).removeClass(\"error_guardar\");\n\n    if($(this).val()==\" \" || $(this).val()==\"\"){\n      $(this).addClass(\"error_guardar\");\n    }  \n  });\n  //Se valida que estan registradas las fechas de vacaciones cuando se genera el PDF del calendario del curso.\n  $(document).on(\"click\",\"#asignacion_festivos #calendario_completo\",function(event){\n      // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n      $(\".ui-pnotify\").remove();\n      \n      if(($(\"#asignacion_festivos #inicio_navidad\").val()==\"\" && !$(\"#asignacion_festivos #inicio_navidad\").hasClass('modified')) || ($(\"#asignacion_festivos #inicio_semanasanta\").val()==\"\" && !$(\"#asignacion_festivos #inicio_semanasanta\").hasClass('modified'))){\n        var texto=\"\";\n        if(($(\"#asignacion_festivos #inicio_navidad\").val()==\"\" && !$(\"#asignacion_festivos #inicio_navidad\").hasClass('modified')) && ($(\"#asignacion_festivos #inicio_semanasanta\").val()==\"\" && !$(\"#asignacion_festivos #inicio_semanasanta\").hasClass('modified'))){\n          texto+=\"<span>Vacaciones de Navidad<span><span>Vacaciones de Semana Santa<span>\";\n        }\n        else if($(\"#asignacion_festivos #inicio_navidad\").val()==\"\" && !$(\"#asignacion_festivos #inicio_navidad\").hasClass('modified')){\n          texto+=\"<strong>Vacaciones de Navidad<strong>\";\n        }\n        else{\n          texto+=\"<span>Vacaciones de Semana Santa<span>\";\n        }\n        errorPNotify.play();\n        new PNotify({\n          title: \"Debe seleccionar las siguientes fechas para continuar:\",\n          text:texto,\n          addclass: \"custom\",\n          type: \"error\",\n          shadow: true,\n          hide: true,\n          width: \"335px\",\n          buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n          },\n          stack: left_Stack,\n          animate_speed: \"fast\",\n          animate: {\n              animate: true,\n              in_class: \"fadeInLeft\",\n              out_class: \"fadeOutLeft\",\n          }\n        });\n        return false;\n      }\n  }); \n\n  //////////////////////////////////\n  //        Horario Clase         //\n  //////////////////////////////////\n  //Se cambia de forma genérica en el contenedor de opciones.\n  $(document).on(\"click\",\"#one\",function(event){\n    div=$(this).closest(\".div_change\");\n    div.find(\"#cont_one\").removeClass('oculto');\n    div.find(\"#cont_two\").addClass('oculto');\n    div.find(\"#one\").removeClass('btn_not_select');\n    div.find(\"#two\").addClass('btn_not_select');\n    div.closest(\".block_insert\").find(\"#button_one\").removeClass('oculto');\n    div.closest(\".block_insert\").find(\"#button_two\").addClass('oculto');\n\n  });\n  $(document).on(\"click\",\"#two\",function(event){\n    div=$(this).closest(\".div_change\");\n    div.find(\"#cont_one\").addClass('oculto');\n    div.find(\"#cont_two\").removeClass('oculto');\n    div.find(\"#one\").addClass('btn_not_select');\n    div.find(\"#two\").removeClass('btn_not_select');\n    div.closest(\".block_insert\").find(\"#button_one\").addClass('oculto');\n    div.closest(\".block_insert\").find(\"#button_two\").removeClass('oculto');\n  });\n\n  $(document).on(\"click\",\"#registro_horario #button_generate\",function(event){\n    //Se añade el tipo de horario al botón para luego guardarlo en la base de datos.\n    $(\"#registro_horario #button_horario_save\").attr(\"tipo\",\"manual\");\n\n    // Se vacia el contenedor para el nuevo horario.\n    $(\"#contenedor_nuevo_horario tbody\").empty();\n\n    // Se oculta el aviso de error por si estaba mostrado.\n    $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n\n    // Se añade las filas con cada hora de clase con los horarios en el nuevo contenedor.\n    for (var i = 1; i <= $(\"#total_horas\").val(); i++) {\n      // Se añade el horario de recreo.\n      if(parseInt($(\"#horas_recreo\").val())+1 == i){\n        cont='<tr><td><span class=\"oculto\">*</span>';\n        cont+='</td>';\n        cont+='<td>RECREO';\n        cont+='</td>';\n        cont+='<td><input type=\"time\" step=\"1\"> </input>';\n        cont+='</td>';\n        cont+='<td><input type=\"time\" step=\"1\"> </input>';\n        cont+='</td>';\n        cont+='</tr>';\n        $(\"#contenedor_nuevo_horario tbody:last-child\").append(cont);\n      }\n      // Se añade el horario de comida, cuando esté activa la opción.\n      if(parseInt($(\"#total_horas\").val())-parseInt($(\"#horas_comida\").val())+1 == i && !$(\"#registro_horario #no\").is(':checked') ){\n        cont='<tr><td><span class=\"oculto\">*</span>';\n        cont+='</td>';\n        cont+='<td>COMIDA';\n        cont+='</td>';\n        cont+='<td><input type=\"time\" step=\"1\"> </input>';\n        cont+='</td>';\n        cont+='<td><input type=\"time\" step=\"1\"> </input>';\n        cont+='</td>';\n        cont+='</tr>';\n        $(\"#contenedor_nuevo_horario tbody:last-child\").append(cont);\n      }\n      contenido='<tr><td><span class=\"oculto\">*</span>';\n      contenido+='</td>';\n      contenido+='<td>'+i+'º';\n      contenido+='</td>';\n      contenido+='<td><input type=\"time\" step=\"1\"> </input>';\n      contenido+='</td>';\n      contenido+='<td><input type=\"time\" step=\"1\"> </input>';\n      contenido+='</td>';\n      contenido+='</tr>';\n      $(\"#contenedor_nuevo_horario tbody:last-child\").append(contenido);\n    }\n    // Máscara para los input time.\n    $(\"input[type='time']\").mask('AB:CB',\n    {'translation': {A: {pattern: /[0-1]/}, B: {pattern: /[0-9]/}, C: {pattern: /[0-5]/}},\n     placeholder: \"__:__\"});\n\n    $(\"#contenedor_nuevo_horario\").find(\":input\").each(function(i){\n      $(this).attr(\"tabindex\",i+1);\n    });\n    \n    //Se deshabilita todos los input menos los de la primera hora.\n    $(\"#contenedor_nuevo_horario\").find(\"input\").each(function(i){\n      $(this).prop(\"disabled\", true);\n    });\n    $(\"#contenedor_nuevo_horario input:first\").prop(\"disabled\", false);\n    $(\"#contenedor_nuevo_horario input:first\").closest(\"td\").next(\"td\").find(\"input\").prop(\"disabled\", false);\n    $(\"#button_horario_save\").prop(\"disabled\", true);\n\n    // Se muestra el contenedor para el nuevo horario.\n    $(\"#contenedor_registro_horario\").addClass(\"oculto\");\n    $(\"#contenedor_nuevo_horario\").removeClass(\"oculto\");\n\n    $(\"#contenedor_nuevo_horario input:first\").focus();\n    $(\"#contenedor_nuevo_horario input:first\").attr('placeholder','');\n    $(\"#button_horario_clear\").prop(\"disabled\", true);  \n\n    // Se muestra el panel de guardar el nuevo horario.\n    $(\"#nuevo_horario_guardar\").removeClass(\"oculto\");\n    $(\"#registro_horario_guardar\").addClass(\"oculto\");\n  });\n\n  //Se genera y se guarda automáticamente el horario con módulos de la misma duración.\n  $(document).on(\"click\",\"#registro_horario #button_auto_generate\",function(event){\n    /*Se añade el tipo de horario, duracion de los módulos, posición del recreo y duración del recreo\n      al botón para luego guardarlo en la base de datos.*/\n    $(\"#registro_horario #button_horario_save\").attr(\"tipo\",\"auto\");\n    $(\"#registro_horario #button_horario_save\").attr(\"duracion\",$(\"#registro_horario #tiempo_modulo\").val());\n    $(\"#registro_horario #button_horario_save\").attr(\"recreo\",$(\"#registro_horario #horas_recreo_auto\").val());\n    $(\"#registro_horario #button_horario_save\").attr(\"tiempo\",$(\"#registro_horario #tiempo_recreo\").val());\n\n    //Se valida que la duración del día esté dentro del horario del centro.\n    if($(\"#registro_horario #inicio_clase option:selected\").val() < $(\"#registro_horario #inicio_horario_disable\").val()){\n      // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n      $(\".ui-pnotify\").remove();\n        \n      errorPNotify.play();\n\n      new PNotify({\n        text:'La hora de inicio de las clases no puede ser anterior a la hora de apertura del centro.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      return false;\n    }\n    else{\n      num_modulos=parseInt($(\"#registro_horario #total_horas_auto option:selected\").val());\n      duracion_modulos=parseInt($(\"#registro_horario #tiempo_modulo option:selected\").val());\n      duracion_recreo=parseInt($(\"#registro_horario #tiempo_recreo option:selected\").val());\n\n      total=(num_modulos*duracion_modulos)+duracion_recreo;\n\n      array_inicio_clases=$(\"#registro_horario #inicio_clase option:selected\").val().split(\":\");\n      array_cierre_centro=$(\"#registro_horario #fin_horario_disable\").val().split(\":\");\n\n      inicio_clases=(parseInt(array_inicio_clases[0])*60)+parseInt(array_inicio_clases[1]);\n      cierre_centro=(parseInt(array_cierre_centro[0])*60)+parseInt(array_cierre_centro[1]);\n      permitido=cierre_centro-inicio_clases;\n\n      if(permitido<total){\n        // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n        $(\".ui-pnotify\").remove();\n\n        errorPNotify.play();\n\n        new PNotify({\n          text:'Las horas del horario seleccionado sobrepasa el horario del centro.',\n          addclass: \"custom\",\n          type: \"error\",\n          shadow: true,\n          hide: true,\n          buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n          },\n          stack: right_Stack,\n          animate: {\n            animate: true,\n            in_class: \"fadeInRight\",\n            out_class: \"fadeOutRight\",\n          }\n        });\n        return false;\n      }\n    }\n\n\n    // Se vacia el contenedor para el nuevo horario.\n    $(\"#contenedor_nuevo_horario tbody\").empty();\n\n    // Se oculta el aviso de error por si estaba mostrado.\n    $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n\n    // Se añade las filas con cada hora de clase con los horarios en el nuevo contenedor.\n    for (var i = 1; i <= $(\"#total_horas_auto\").val(); i++) {\n      // Se añade el horario de recreo.\n      if(parseInt($(\"#horas_recreo_auto\").val())+1 == i){\n        cont='<tr><td><span class=\"oculto\">*</span>';\n        cont+='</td>';\n        cont+='<td>RECREO';\n        cont+='</td>';\n        cont+='<td><input type=\"time\" step=\"1\"> </input>';\n        cont+='</td>';\n        cont+='<td><input type=\"time\" step=\"1\"> </input>';\n        cont+='</td>';\n        cont+='</tr>';\n        $(\"#contenedor_nuevo_horario tbody:last-child\").append(cont);\n      }\n      contenido='<tr><td><span class=\"oculto\">*</span>';\n      contenido+='</td>';\n      contenido+='<td>'+i+'º';\n      contenido+='</td>';\n      contenido+='<td><input type=\"time\" step=\"1\"> </input>';\n      contenido+='</td>';\n      contenido+='<td><input type=\"time\" step=\"1\"> </input>';\n      contenido+='</td>';\n      contenido+='</tr>';\n      $(\"#contenedor_nuevo_horario tbody:last-child\").append(contenido);\n    }\n    tabindex=1;\n    $(\"#contenedor_nuevo_horario\").find(\":input\").each(function(i){\n      $(this).attr(\"tabindex\",tabindex);\n      tabindex++;\n    });\n    // Se añade el valor a todos los input de forma automática sumando la duración de cada módulo a los input pares.\n    valor=$(\"#registro_horario #inicio_clase option:selected\").val();\n    $(\"#contenedor_nuevo_horario input:first\").val(valor);\n\n    $(\"#contenedor_nuevo_horario input\").each(function(i=1){\n      horas=0;\n      minutos=0;\n      //Se comprueba si es el segundo input del recreo para sumarle la duración del recreo.\n      if(i-1==($(\"#registro_horario #horas_recreo_auto option:selected\").val())*2){\n        array=valor.split(\":\");\n        horas=parseInt(array[0]);\n\n        minutos=parseInt(array[1]);\n        minutos+=parseInt($(\"#registro_horario #tiempo_recreo option:selected\").val());\n        if(minutos>=60){\n          minutos-=60;\n          horas+=1;\n        }\n        valor=('0'+horas).slice(-2)+\":\"+('0'+minutos).slice(-2);\n      }\n      else{\n        if(i%2)\n        {\n          array=valor.split(\":\");\n          horas=parseInt(array[0]);\n\n          minutos=parseInt(array[1]);\n          minutos+=parseInt($(\"#registro_horario #tiempo_modulo option:selected\").val());\n          if(minutos>=60){\n            minutos-=60;\n            horas+=1;\n          }\n          valor=('0'+horas).slice(-2)+\":\"+('0'+minutos).slice(-2);\n        }\n      }\n      $(this).val(valor);\n    });\n\n    //Se guarda el horario nuevo automáticamente sin mostrar.\n    $(\"#registro_horario #button_horario_save\").click();\n  });\n\n  $(document).on(\"click\",\"#registro_horario #button_rest\",function(event){\n    // Se restablece el valor inicial de cada select y se desactiva el botón.\n    $(\"#registro_horario .block_insert select\").prop('selectedIndex',0);\n    $(\"#button_rest\").prop(\"disabled\", true);\n    $(\"#button_generate\").prop(\"disabled\", true);\n  });\n\n    $(document).on(\"click\",\"#registro_horario #button_auto_rest\",function(event){\n    // Se elimina los valores de cada select y se desactiva el botón.\n    $(\"#registro_horario .block_insert select\").prop('selectedIndex',0);\n    $(\"#button_auto_rest\").prop(\"disabled\", true);\n    $(\"#button_auto_generate\").prop(\"disabled\", true);\n  });\n\n  $(document).on('change',\"#registro_horario .div_change #cont_two select\",function(event){\n    $(\"#button_rest\").prop(\"disabled\", false);\n    // Se desactiva la primera opción del select.\n    $(this).find(\"option:eq('0')\").prop(\"disabled\", true);\n    // Se comprueba que todos los select activos tienen un valor para activar el botón de generar nuevo horario.\n    $(\"#registro_horario .div_change #cont_two\").find(\"select:enabled\").each (function(){\n      if($(this).val()==0 || $(this).val()==null){\n        $(\"#button_generate\").prop(\"disabled\", true);  \n        return false;\n      }\n      $(\"#button_generate\").prop(\"disabled\", false);  \n    });\n  });\n\n    $(document).on('change',\"#registro_horario .div_change #cont_one select\",function(event){\n    $(\"#button_auto_rest\").prop(\"disabled\", false);\n    // Se desactiva la primera opción del select.\n    $(this).find(\"option:eq('0')\").prop(\"disabled\", true);\n    // Se comprueba que todos los select activos tienen un valor para activar el botón de generar nuevo horario.\n    $(\"#registro_horario .div_change #cont_one\").find(\"select:enabled\").each (function(){\n      if($(this).val()==0 || $(this).val()==null){\n        $(\"#button_auto_generate\").prop(\"disabled\", true);  \n        return false;\n      }\n      $(\"#button_auto_generate\").prop(\"disabled\", false);  \n    });\n  });\n\n\n\n\n  // Se ejecuta al soltar una tecla introducida en los input pares.\n  $(document).on('keyup',\"#contenedor_nuevo_horario input:odd\",function(event){\n    if($(this).val().trim().length==5){\n      tab=parseInt($(this).attr(\"tabindex\"));\n      // Se habilita los input de la siguiente clase al introducir la hora final de la clase anterior.\n      for (var i=tab; i <=tab+2; i++){        \n        $(\"#contenedor_nuevo_horario input[tabindex=\"+i+\"]\").prop(\"disabled\", false);\n      }\n      // Se le asigna la hora final de la clase anterior ala hora inicial de la siguiente clase, \n      // y se pasa el foco a la hora final de la siguiente clase para más comodidad(si ese input está vacío).\n      $(\"#contenedor_nuevo_horario input[tabindex=\"+(tab+1)+\"]\").val($(this).val());\n      if($(\"#contenedor_nuevo_horario input[tabindex=\"+(tab+2)+\"]\").val()==\"\"){\n        $(\"#contenedor_nuevo_horario input[tabindex=\"+(tab+2)+\"]\").focus();\n      }\n    }\n  });\n\n  // Función para validar las horas del horario Escolar.\n  function validateTime(tab) {\n    div_actual=$(tab).closest(\"div[id$='_horario']\");\n\n    // Se valida los input impares, excepto el primero.\n    if($(tab).attr(\"tabindex\")!=1 && $(tab).attr(\"tabindex\")%2==1){\n      h_act=$(tab).val().split(':');\n\n      tab_prev=parseInt($(tab).attr(\"tabindex\"))-1;\n      h_prev=$(div_actual).find(\"input[tabindex=\"+tab_prev+\"]\").val().split(':');\n\n      tab_next=parseInt($(tab).attr(\"tabindex\"))+1;\n      h_next=$(div_actual).find(\"input[tabindex=\"+tab_next+\"]\").val().split(':');\n      \n      if((h_act[0]<h_prev[0] && h_prev[0]!=\"\")||(h_act[0]>h_next[0] && h_next[0]!=\"\")||((h_act[0]==h_next[0]) && (h_act[1]>=h_next[1]) && h_next[1]!=\"\") || ((h_act[0]==h_prev[0]) &&  (h_act[1]<h_prev[1]) && (h_prev[1]!=\"\"))){\n        $(tab).removeClass(\"modified\");\n        $(tab).addClass(\"invalid\");\n      }\n      else{\n        $(tab).removeClass(\"invalid\");  \n        }\n      }\n    // Se valida el primer input.  \n    else if($(tab).attr(\"tabindex\")%2==1){\n      h_act=$(tab).val().split(':');\n      tab_next=parseInt($(tab).attr(\"tabindex\"))+1;\n      h_next=$(div_actual).find(\"input[tabindex=\"+tab_next+\"]\").val().split(':');\n\n      min=$(\"#registro_horario #inicio_horario_disable\").val();\n      inicio=min.split(\":\");\n      max=$(\"#registro_horario #fin_horario_disable\").val();\n      fin=max.split(\":\");\n\n      if((h_act[0]<inicio[0] || h_act[0]>fin[0])||(h_act[0]>h_next[0] && h_next[0]!=\"\" )||((h_act[0]==h_next[0]) && (h_act[1]>=h_next[1])&& h_next[1]!=\"\") ){\n        $(tab).removeClass(\"modified\");\n        $(tab).addClass(\"invalid\");\n      }\n      else{\n        $(tab).removeClass(\"invalid\");  \n      }\n    }\n    // Se valida los input pares, excepto el último.\n    else if($(tab).attr(\"tabindex\")!=$(div_actual).find(\"input:last \").attr(\"tabindex\") && $(tab).attr(\"tabindex\")%2==0){\n      h_act=$(tab).val().split(':');\n\n      tab_prev=parseInt($(tab).attr(\"tabindex\"))-1;\n      h_prev=$(div_actual).find(\"input[tabindex=\"+tab_prev+\"]\").val().split(':');\n\n      tab_next=parseInt($(tab).attr(\"tabindex\"))+1;\n      h_next=$(div_actual).find(\"input[tabindex=\"+tab_next+\"]\").val().split(':');\n\n      if((h_act[0]<h_prev[0] && h_prev[0]!=\"\")||((h_act[0]==h_prev[0]) && (h_act[1]<=h_prev[1]) && h_prev[1]!=\"\")||(h_act[0]>h_next[0] && h_next[0]!=\"\")||((h_act[0]==h_next[0]) && (h_act[1]>h_next[1]) && h_next[1]!=\"\")){\n        $(tab).removeClass(\"modified\");\n        $(tab).addClass(\"invalid\");\n      }\n      else{\n        $(tab).removeClass(\"invalid\");\n      }\n    }\n    // Se valida el último input.\n    else if($(tab).attr(\"tabindex\")%2==0){\n      h_act=$(tab).val().split(':');\n      tab_prev=parseInt($(tab).attr(\"tabindex\"))-1;\n      h_prev=$(div_actual).find(\"input[tabindex=\"+tab_prev+\"]\").val().split(':');\n      \n      min=$(\"#registro_horario #inicio_horario_disable\").val();\n      inicio=min.split(\":\");\n      max=$(\"#registro_horario #fin_horario_disable\").val();\n      fin=max.split(\":\");\n\n      if((h_act[0]<inicio[0] || h_act[0]>fin[0] || ( h_act[0]==fin[0] && h_act[1]>fin[1] ))||(h_act[0]<h_prev[0] && h_prev[0]!=\"\") ||((h_act[0]==h_prev[0]) && (h_act[1]<=h_prev[1]) && h_prev[1]!=\"\")){\n        $(tab).removeClass(\"modified\");\n        $(tab).addClass(\"invalid\");\n      }\n      else{\n        $(tab).removeClass(\"invalid\");\n      }\n    }\n\n    // Se comprueba todos los valores de los input para añadir o quitar los avisos.\n    $(div_actual).find(\"input\").each (function(){\n      $(this).closest(\"tr\").find(\"td>span\").addClass(\"oculto\");\n    });\n    $(div_actual).find(\"input[class='invalid']\").each (function(){\n      $(this).closest(\"tr\").find(\"td>span\").removeClass(\"oculto\");\n    });\n\n    $(div_actual).find(\"input\").each (function(){\n      if($(this).hasClass(\"invalid\")){\n        $(\"#registro_horario #aviso_error\").removeClass(\"oculto\");\n        return false;\n      }\n      $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n    });\n    \n    if($(div_actual).attr(\"id\").indexOf(\"nuevo\")>0){\n      $(div_actual).find(\"input\").each (function(){                         \n        if($(this).val()==\"\" || $(this).hasClass(\"invalid\")){\n          $(\"#button_horario_save\").prop(\"disabled\", true);  \n          return false;\n        }\n        $(\"#button_horario_save\").prop(\"disabled\", false);  \n      });\n    }\n    else{\n      // Se indica las modificaciones de los input.\n      $(div_actual).find(\"input\").each (function(){\n        if($(this).val()!=$(this).attr(\"val_ini\") && $(this).val()!=\"\" &&  !$(this).hasClass(\"invalid\")){     \n            $(this).addClass(\"modified\");\n        }\n        else{\n            $(this).removeClass(\"modified\");\n          }\n      });\n\n      // Se habilta el botón \"Guardar\", solo para las filas que tengan hora de inicio y fin correctas\n      $(div_actual).find(\"input\").each (function(){\n        $(this).closest(\"tr\").find(\"button\").prop(\"disabled\", true);\n      });\n\n      $(div_actual).find(\"input[class='modified']\").each (function(){\n        $(this).closest(\"tr\").find(\"button\").prop(\"disabled\", false);\n      });\n\n      $(div_actual).find(\"input[class='invalid'],input[value='']\").each (function(){\n        $(this).closest(\"tr\").find(\"button\").prop(\"disabled\", true);\n      });\n\n      // Se habilta el botón \"Restablecer\", cuando se modifica cualquier valor original.\n      $(div_actual).find(\"input\").each (function(){\n        if($(this).hasClass(\"modified\") || $(this).hasClass(\"invalid\")){     \n          $(\"#horario_rest\").prop(\"disabled\", false);  \n            return false;\n        }\n          $(\"#horario_rest\").prop(\"disabled\", true);  \n      });\n      // Se habilta el botón \"Guardar Todo\", cuando existe algun valor modificado , algún error  algún input vacío.\n      $(div_actual).find(\"input\").each (function(){                         \n        if($(this).hasClass(\"invalid\") || !$(div_actual).find(\"input\").hasClass(\"modified\")  || $(this).val()==\"\"){\n          $(\"#button_horario_all\").prop(\"disabled\", true);  \n          return false;\n        }\n        $(\"#button_horario_all\").prop(\"disabled\", false);  \n      });\n    }\n  }\n\n  // Se desplaza los botones hacia arriba para mostrar bienel mensaje de error en registro de horario académico.\n  $(document).on('blur keyup',\"#registro_horario #contenedor_nuevo_horario input\",function(e){\n    setTimeout(function(){ \n      if($(\"#registro_horario #contenedor_nuevo_horario .invalid\").size()>0){\n        $(\"#registro_horario #button_two\").addClass('margin_top');\n        $(\"#registro_horario #contenedor_nuevo_horario\").addClass('margin_top_2');\n      }\n      else{\n        $(\"#registro_horario #button_two\").removeClass('margin_top');\n        $(\"#registro_horario #contenedor_nuevo_horario\").removeClass('margin_top_2');\n      }    \n    },10);\n  });\n  \n  $(document).on('blur keyup',\"#registro_horario #contenedor_registro_horario input\",function(e){\n    setTimeout(function(){ \n      if($(\"#registro_horario #contenedor_registro_horario .invalid\").size()>0){\n        $(\"#registro_horario #button_one\").addClass('margin_top');\n        $(\"#registro_horario #contenedor_registro_horario\").addClass('margin_top_2');\n      }\n      else{\n        $(\"#registro_horario #button_one\").removeClass('margin_top');\n        $(\"#registro_horario #contenedor_registro_horario\").removeClass('margin_top_2');\n      }    \n    },10);\n  });\n  // Se ejecuta al pulsar una tecla en los input de horario escolar.\n  $(document).on('keyup',\"#registro_horario div[id$='_horario'] input\",function(e){\n    div_actual=$(this).closest(\"div[id$='_horario']\");\n    min=$(\"#registro_horario #inicio_horario_disable\").val();\n    max=$(\"#registro_horario #fin_horario_disable\").val();\n    inicio=min.split(\":\");\n    fin=max.split(\":\");\n\n    // Se elimina el placeholder para que no aparezca al borrar el valor del input.\n    //$(this).attr('placeholder','');\n    // Se ejecuta al introducir una hora completa en un input.Si se pulsa borrar se ignora.\n    if($(this).val().trim().length==5 && e.keyCode != 8){\n      $(this).attr(\"value\",$(this).val());\n      tab=parseInt($(this).attr(\"tabindex\"));\n      if($(div_actual).find(\"input[tabindex=\"+(tab+1)+\"]\").val()==\"\"){\n        $(div_actual).find(\"input[tabindex=\"+(tab+1)+\"]\").focus();\n      }\n      // Se valida en línea la hora introducida.\n      val=$(this).val().split(':');\n      if((val[0]<inicio[0] || val[0]>fin[0]) || (val[1]<00 || val[1]>59)){\n        $(this).removeClass(\"modified\");\n        $(this).addClass(\"invalid\");\n        $(this).closest(\"tr\").find(\"td>span\").removeClass(\"oculto\");\n        $(\"#registro_horario #aviso_error\").removeClass(\"oculto\");\n      }\n      else{\n        $(this).removeClass(\"invalid\");\n\n        /*$(div_actual).find(\"input\").each (function(){\n          if($(this).hasClass(\"invalid\")){\n            $(this).closest(\"tr\").find(\"td>span\").removeClass(\"oculto\");\n            return false;\n          }\n          $(this).closest(\"tr\").find(\"td>span\").addClass(\"oculto\");\n        });\n\n        $(div_actual).find(\"input\").each (function(){\n          if($(this).hasClass(\"invalid\")){\n            $(\"#registro_horario #aviso_error\").removeClass(\"oculto\");\n            return false;\n          }\n          $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n        });*/\n      }\n\n      // Se valida la hora introducida si se ha introducido un valor válido.\n      if(!$(this).hasClass(\"invalid\")){\n\n        validateTime($(this));\n        // Se valida el elemento anterior y posterior para quitar posibles avisos.\n       if(!$(this).hasClass(\"invalid\")){\n        tab_prev=parseInt($(this).attr(\"tabindex\"))-1;\n        if($(div_actual).find(\"input[tabindex=\"+tab_prev+\"]\").val()!=\"\" && $(this).attr(\"tabindex\")>1){\n          validateTime($(div_actual).find(\"input[tabindex=\"+tab_prev+\"]\"));\n        }\n\n        tab_next=parseInt($(this).attr(\"tabindex\"))+1;\n        if($(div_actual).find(\"input[tabindex=\"+tab_next+\"]\").val()!=\"\"  && $(this).attr(\"tabindex\")<$(div_actual).find(\"input:last\").attr(\"tabindex\")){\n          validateTime($(div_actual).find(\"input[tabindex=\"+tab_next+\"]\"));\n        }\n       }\n      }\n      // Se comprueba que el div actual sea el de nuevo horario(#contenedor_nuevo_horario).\n      if(div_actual.attr(\"id\").indexOf(\"nuevo\")>0){\n        //Se habilita el botón \"Borrar\" al introducir una hora.\n        $(\"#button_horario_clear\").prop(\"disabled\", false);  \n      }\n      // Se validan los demás input con clase \"invalid\" por si son válidos con los cambios de hora realizados.\n      $(div_actual).find(\"input[class='invalid']\").each (function(){\n        validateTime($(this));\n      });\n    }\n\n    if($(this).val().trim().length==0){\n      $(this).removeClass(\"invalid\");\n      $(this).attr(\"value\",\"\");\n      // Se elimina el aviso de error * si no hay ningún valor con inválido en la misma fila.\n      $(this).closest(\"tr\").find(\"input\").each (function(){\n        if($(this).hasClass(\"invalid\")){\n          $(this).closest(\"tr\").find(\"td>span\").removeClass(\"oculto\");\n          return false;\n        }\n        $(this).closest(\"tr\").find(\"td>span\").addClass(\"oculto\");\n      });\n\n      $(div_actual).find(\"input\").each (function(){\n        if($(this).hasClass(\"invalid\")){\n          $(\"#registro_horario #aviso_error\").removeClass(\"oculto\");\n          return false;\n        }\n          $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n      });\n      \n      // Se habilita/deshabilita opciones en registro de nuevo horario.\n      if(div_actual.attr(\"id\").indexOf(\"nuevo\")>0){\n        $(div_actual).find(\"input\").each(function(){              \n          if($(this).val()!=\"\"){\n            $(\"#button_horario_clear\").prop(\"disabled\", false);  \n            return false;\n          }\n          $(\"#button_horario_clear\").prop(\"disabled\", true);\n        });\n      }\n      // Se habilita/deshabilita opciones en editar horario.\n      else{\n        $(\"#horario_rest\").prop(\"disabled\", false);  \n      }\n    }\n\n    if($(this).val().length<5){\n      if(div_actual.attr(\"id\").indexOf(\"nuevo\")>0){\n        $(\"#button_horario_save\").prop(\"disabled\", true);\n      }\n      else{\n        $(\"#button_horario_all\").prop(\"disabled\", true);\n        $(this).closest(\"tr\").find(\"button\").prop(\"disabled\", true);\n        $(this).removeClass(\"modified\");\n      }  \n    }\n  });\n\n  // Se obliga a introducir valores entre 07:00-19:00 que son los límites permitidos a elegir.\n  $(document).on('keydown',\"#registro_horario div[id$='_horario'] input\",function(e){\n    // Se asigna una máscara según el primer valor introducido.\n    if($(this).val().trim().length>0 && $(this).val().trim().length<5 && e.keyCode != 8){\n      if($(this).val().substr(0, 1)==0){\n        $(this).unmask();\n        // Máscara para las horas que empiezan por \"0\"(08:00-09:00).\n        $(this).mask('AB:CD',\n        {'translation': {A: {pattern: /[0-1]/}, B: {pattern: /[8-9]/}, C: {pattern: /[0-5]/}, D: {pattern: /[0-9]/}},\n        placeholder: \"__:__\"});\n      }\n      else{\n        $(this).unmask();\n        // Máscara para las horas que empiezan por \"1\"(10:00-18:00).\n        $(this).mask('AB:CD',\n        {'translation': {A: {pattern: /[0-1]/}, B: {pattern: /[0-9]/}, C: {pattern: /[0-5]/}, D: {pattern: /[0-9]/}},\n        placeholder: \"__:__\"});\n      }\n    }\n  });\n\n\n  // Se oculta el placeholder en el input seleccionado.    \n  $(document).on(\"focus\",\"#registro_horario div[id$='_horario'] input\",function(event){\n    $(this).data('placeholder',$(this).attr('placeholder')).attr('placeholder','');\n  });\n\n  // Se deja el valor en blanco en caso de no introducir una hora completa.\n  $(document).on(\"blur\",\"#registro_horario div[id$='_horario'] input\",function(event){\n    //$(this).attr('placeholder',$(this).data('placeholder'));\n    $(this).data('placeholder',$(this).attr('placeholder')).attr('placeholder','__:__');\n\n    if($(this).val().length<5){\n      $(this).val(\"\");\n      $(this).removeClass(\"modified\");\n      $(this).attr(\"value\",\"\");\n    }\n  });\n\n  // Se añade \":\" tras introducir dos cifras.\n  $(document).on('keyup',\"input[type='time']\",function(e){\n    if($(this).val().trim().length==2 && e.keyCode != 8){\n      $(this).val($(this).val()+\":\");\n    }\n  });\n  \n  $(document).on(\"click\",\"#button_horario_clear\",function(event){\n    // Se restablece el valor inicial de cada input, se elimina la clase invalid en todos los input y se oculta los * en cada fila.\n    $(\"#contenedor_nuevo_horario input\").each (function(){\n      $(this).attr(\"value\",\"\");\n      $(this).val($(this).attr(\"value\"));\n      $(this).removeClass(\"invalid\");\n      $(this).closest(\"tr\").find(\"td>span\").addClass(\"oculto\");\n    });\n    // Se elimina el aviso de error\n    $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n\n    //Se deshabilita todos los input menos los de la primera hora.\n    $(\"#contenedor_nuevo_horario\").find(\"input\").each(function(i){\n      $(this).prop(\"disabled\", true);\n    });\n    $(\"#contenedor_nuevo_horario input:first\").prop(\"disabled\", false);\n    $(\"#contenedor_nuevo_horario input:first\").closest(\"td\").next(\"td\").find(\"input\").prop(\"disabled\", false);\n    $(\"#contenedor_nuevo_horario input:first\").focus();\n    $(\"#button_horario_save\").prop(\"disabled\", true);  \n\n  });\n\n  $(document).on(\"click\",\"#button_horario_rest\",function(event){\n    // Se vacia el contenedor para el nuevo horario y se muestra el contenedor inicial.\n    $(\"#contenedor_nuevo_horario tbody\").empty();\n    $(\"#contenedor_nuevo_horario\").addClass(\"oculto\");\n    $(\"#contenedor_registro_horario\").removeClass(\"oculto\");\n    //Se muestra el panel de guardar inicial.\n    $(\"#nuevo_horario_guardar\").addClass(\"oculto\");\n    $(\"#registro_horario_guardar\").removeClass(\"oculto\"); \n    $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n\n    //Se restablece el valor inicial de cada input, simulando el pulsar restablecer horario actual.\n    $(\"#horario_rest\").trigger(\"click\");\n  });\n\n  $(document).on(\"click\",\"#horario_rest\",function(event){\n    $(\"#contenedor_registro_horario #lista_color\").load(Routing.generate('horario_escolar_actual'),function(data){\n      $(\"#contenedor_registro_horario\").find(\"input\").each (function(){\n        $(this).attr(\"val_ini\",$(this).val());\n      });\n      $(\"#contenedor_registro_horario\").find(\"input\").each(function(i){\n        $(this).attr(\"tabindex\",i+1);\n      });\n    });\n\n    $(\"#horario_rest\").prop(\"disabled\", true);\n    $(\"#button_horario_all\").prop(\"disabled\", true);\n    $(\"#contenedor_registro_horario tbody button\").each (function(){\n      $(this).prop(\"disabled\", true);\n    });  \n    $(\"#registro_horario #aviso_error\").addClass(\"oculto\");\n  });\n\n  $(document).on('change',\"#registro_horario input[id='si']\",function(event){\n    // Se comprueba si select de la comida esta activo y tiene valor para activar el botón de generar nuevo horario.\n    if($(this).val()==\"on\"){\n      $(\"#horas_comida\").prop(\"disabled\", false);  \n      $(\"#horas_comida\").prev().removeClass(\"disabled\");\n      if($(\"#horas_comida\").val()==0){\n        $(\"#button_generate\").prop(\"disabled\", true);  \n      }\n    }\n  });\n\n  $(document).on('change',\"#registro_horario input[id='no']\",function(event){\n    if($(this).val()==\"on\"){\n      // Se desactiva el select.\n      $(\"#horas_comida\").prop(\"disabled\", true);  \n      $(\"#horas_comida\").prev().addClass(\"disabled\");\n    }  \n    // Se comprueba que los restantes select activos tienen un valor para activar el botón de generar nuevo horario.\n    if($(\"#total_horas\").val()!=0 && $(\"#horas_recreo\").val()!=0){\n        $(\"#button_generate\").prop(\"disabled\", false);  \n    }\n  });\n\n  // Se quita la marca de los input modificados y se guarda los valores en la base de datos.\n  $(document).on('click',\"#registro_horario_guardar #button_horario_all\",function(event){\n\n    if($(\"#contenedor_registro_horario input[value='']\").size()>0){\n      $(\"#contenedor_registro_horario input[value='']\").each(function(){\n        $(this).addClass(\"invalid\");\n        $(this).closest(\"tr\").find(\"td>span\").removeClass(\"oculto\");\n        $(\"#registro_horario #aviso_error\").removeClass(\"oculto\"); \n      });\n      $(\"#registro_horario #registro_horario_guardar #button_horario_all\").prop(\"disabled\",true);\n    }\n\n    $(\"#contenedor_registro_horario input[class='modified']\").each(function(){  \n      $(this).closest(\"tr\").find(\"input\").removeClass(\"modified\");\n      clase=$(this).closest(\"tr\").children('td').slice(1, 2).html();\n      hora_ini=$(this).closest(\"tr\").children('td').slice(2, 3).find(\"input\").attr(\"value\");\n      hora_fin=$(this).closest(\"tr\").children('td').slice(3, 4).find(\"input\").attr(\"value\");\n      ini=hora_ini+\":00\";\n      fin=hora_fin+\":00\";\n\n      hora_ini=ini.split(\":\");\n      hora_fin=fin.split(\":\");\n      duracion=((parseInt(hora_fin[0])*60)+parseInt(hora_fin[1]))-((parseInt(hora_ini[0])*60)+parseInt(hora_ini[1]));\n     \n      // Se actualiza las horas modificadas en la entidad Horario.\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('editar_horario'),\n        data: {clase:clase,ini:ini,fin:fin,duracion:duracion},        \n      })\n\n      //Actualización de pestañas.\n      $(\"#reservar_instalaciones\").update_tab();\n      $(\"#reservar_equipamientos\").update_tab();\n      $(\"#consultar_instalaciones\").update_tab();\n      $(\"#consultar_equipamientos\").update_tab();\n      $(\"#clases_impartidas\").update_tab();\n      $(\"#asignar_horario\").update_tab();\n\n      $(\"#registro_horario #registro_horario_guardar #button_horario_all\").prop(\"disabled\",true);\n      $(\"#registro_horario #registro_horario_guardar #horario_rest\").prop(\"disabled\",true);\n    });\n\n  });\n\n  $(document).on('click',\"#button_horario_save\",function(event){\n    tipo=$(this).attr(\"tipo\");//Tipo de horario: manual o auto.\n    cadena=\"\";\n    cont=0;\n\n    $(\"#contenedor_nuevo_horario tbody tr\").each(function(){ \n      //Se calcula la duración de cada módulo.\n      ini=$(this).find(\"td:nth-child(3) input\").val();\n      fin=$(this).find(\"td:nth-child(4) input\").val();\n      hora_ini=ini.split(\":\");\n      hora_fin=fin.split(\":\");\n      duracion=((parseInt(hora_fin[0])*60)+parseInt(hora_fin[1]))-((parseInt(hora_ini[0])*60)+parseInt(hora_ini[1]));\n      //Se guarda todos los datos en una cadena\n      cadena+= $(this).find(\"td:nth-child(2)\").text() + \"-\";\n      cadena+= $(this).find(\"td:nth-child(3) input\").val()+ \":00-\";\n      cadena+= $(this).find(\"td:nth-child(4) input\").val()+ \":00-\";\n      cadena+= duracion+ \"-\";\n\n      cont++;\n    });\n    cadena=cadena.slice(0,-1);\n\n    // Se comprueba si la tabla imparte y reserva estan vacía. \n    // En caso contrario, se avisa delos cambios antes de actualizar el horario.\n        \n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobaciones_horario_nuevo'),\n      success: function(response) {\n        if(response.imparte==\"\" && response.reserva==\"\")\n        {\n          //Se actualiza sin aviso puesto que no modifica nada en el sistema.\n          $.ajax({\n            type: 'POST',\n            url: Routing.generate('nuevo_horario'),\n            data: {cadena:cadena,cont:cont,tipo:tipo},\n            success: function(response) {\n              // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n              $(\".ui-pnotify\").remove();\n              \n              // Notificación de confirmación\n              exito.play();\n              \n              new PNotify({\n                text:\"Horario Escolar registrado\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              //Actualización de pestañas.\n              $(\"#reservar_instalaciones\").update_tab();\n              $(\"#reservar_equipamientos\").update_tab();\n              $(\"#consultar_instalaciones\").update_tab();\n              $(\"#consultar_equipamientos\").update_tab();\n              $(\"#clases_impartidas\").update_tab();\n              $(\"#asignar_horario\").update_tab();\n\n              // Se muestra el calendario actual actualizado.\n              $(\"#registro_horario_guardar #horario_rest\").prop(\"disabled\",false);\n              $(\"#registro_horario_guardar #horario_rest\").trigger(\"click\");\n              $(\"#nuevo_horario_guardar #button_horario_rest\").trigger(\"click\");\n\n              //Se muestra la tabla del nuevo horario escolar.  \n              $(\"#contenedor_registro_horario table th\").removeClass(\"oculto\");\n              $(\"#aviso_horario\").addClass(\"oculto\");  \n            } \n          })\n        }\n        else{\n          aviso.play();\n          texto='<p class=\"justificado\">Se recomienda asignar el Horario Escolar antes del comienzo del curso para no efectuar cambios en el sistema. Si desea realizar la asignación ahora, debe saber que se realizarán los siguientes cambios en el sistema:</p><br>';\n          \n          if(response.reserva!=\"\"){\n            texto=texto+\"<li><span class='negrita'>Eliminación de las reservas de instalaciones o equipamientos registradas en el sistema.</span></li></br>\";\n          }\n          if(response.imparte!=\"\"){\n            texto=texto+\"<li><span class='negrita'>Eliminación de los horarios de las asignaturas en los cursos.</span></li></br>\";\n          }\n          texto=texto+\"¿Estas seguro de continuar? No podrás deshacer este paso...\";\n          swal({\n            title: \"Registro del Horario Escolar en el sistema.\",\n            html: texto,\n            type: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonColor: color,\n            confirmButtonText: \"¡Adelante!\"\n            }).then(function () {\n              $.ajax({\n                type: 'POST',\n                url: Routing.generate('nuevo_horario'),\n                data: {cadena:cadena,cont:cont,tipo:tipo},\n                success: function(response) {\n\n                  // Notificación de confirmación\n                  exito.play();\n              \n                  new PNotify({\n                    text:\"Horario Escolar registrado\",\n                    addclass: \"custom\",\n                    type: \"success\",\n                    shadow: true,\n                    hide: true,\n                    buttons: {\n                      sticker: false,\n                      labels:{close: \"Cerrar\"}\n                    },\n                    stack: right_Stack,\n                    animate: {\n                      animate: true,\n                      in_class: \"fadeInRight\",\n                      out_class: \"fadeOutRight\",\n                    }\n                  });\n\n                  //Actualización de pestañas.\n                  $(\"#reservar_instalaciones\").update_tab();\n                  $(\"#reservar_equipamientos\").update_tab();\n                  $(\"#consultar_instalaciones\").update_tab();\n                  $(\"#consultar_equipamientos\").update_tab();\n                  $(\"#clases_impartidas\").update_tab();\n                  $(\"#asignar_horario\").update_tab();\n\n                  // Se muestra el calendario actual actualizado.\n                  $(\"#aviso_horario\").addClass(\"oculto\");\n                  $(\"#registro_horario_guardar #horario_rest\").prop(\"disabled\",false);\n                  $(\"#registro_horario_guardar #horario_rest\").trigger(\"click\");\n                  $(\"#nuevo_horario_guardar #button_horario_rest\").trigger(\"click\");    \n                }\n              })\n            }, function (dismiss) {\n\n            }\n          );\n        }\n      }\n    })\n  });\n\n  //Se abre la ventana modal para registrar horario del centro\n  $(document).on(\"click\",\"#registro_horario #inicio_horario_disable\",function(event){\n    event.preventDefault();\n    //Se comprueba si existe horario escolar para mostrar aviso de modificaciones.\n    if(!$(\"#registro_horario #aviso_horario\").hasClass('oculto')){\n        $('#horario_centro_dialog').load(Routing.generate(\"edit_horario_centro\"), function(){\n        }).dialog('open');\n    }\n    else\n    {\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobaciones_horario_nuevo'),\n      success: function(response) {\n        aviso.play();\n        texto='<p class=\"justificado\">Se recomienda asignar el horario del centro antes del comienzo del curso para no efectuar cambios en el sistema. Si desea realizar la asignación ahora, debe saber que se realizarán los siguientes cambios en el sistema:</p><br>';\n          \n        texto=texto+\"<li><span class='negrita'>Eliminación del Horario Escolar actual.</span></li></br>\";\n\n        if(response.reserva!=\"\"){\n          texto=texto+\"<li><span class='negrita'>Eliminación de las reservas de instalaciones o equipamientos registradas en el sistema.</span></li></br>\";\n        }\n        if(response.imparte!=\"\"){\n          texto=texto+\"<li><span class='negrita'>Eliminación de las asignaciones de profesores en los cursos.</span></li></br>\";\n        }\n        texto=texto+\"¿Estas seguro de continuar? No podrás deshacer este paso...\";\n        swal({\n          title: \"Asignación del horario del centro.\",\n          html: texto,\n          type: \"warning\",\n          showCancelButton: true,\n          cancelButtonText: \"Cancelar\",\n          confirmButtonColor: color,\n          confirmButtonText: \"¡Adelante!\"\n          }).then(function () {\n            $('#horario_centro_dialog').load(Routing.generate(\"edit_horario_centro\"), function(){\n            }).dialog('open');\n          }, function (dismiss) {\n\n          }\n        );\n      }\n    })\n    }\n  });\n\n\n  //Se restablece la ventana modal.\n  $(document).on(\"click\",\"#button_hora_centro_rest\",function(event){\n    $('#horario_centro_dialog').load(Routing.generate(\"edit_horario_centro\"), function(){\n    }).dialog('open');\n  });\n\n  // Se valida los input al cambiar en timepicki.\n  $(document).on('click',\"#horario_centro_dialog .timepicker_wrap .prev \",function(event){\n    elem=$(this).next().find(\"input\");\n    setTimeout(function(){\n    //Se valida solo el input modificado. \n    $(\"#horario_centro_dialog  #aviso_error\").hide();\n      if(elem.val()!=\"\"){\n        elem.removeClass('error_guardar');\n      }\n      else{\n        elem.addClass('error_guardar');\n      }\n    \n    //Se comprueba si hay algún error para ocultar el aviso.\n    $(\"#horario_centro_dialog  #aviso_error\").hide();\n\n    $(\"#horario_centro_dialog .time_pick .timepicker_wrap  input\").each(function(index, el) {\n      if($(this).hasClass('error_guardar')){\n        $(\"#horario_centro_dialog  #aviso_error\").show();\n      }\n    });\n    },100);\n  });\n\n  // Se valida los input al cambiar en timepicki.\n  $(document).on('click',\"#horario_centro_dialog .timepicker_wrap .next \",function(event){\n    elem=$(this).prev().find(\"input\");\n    setTimeout(function(){ \n    //Si se muestra error entonces comprobamos todoslos valores.  \n    if($(\"#horario_centro_dialog  #aviso_error\").is(':visible')){\n      //Se valida todos los datos puesto que en este caso al modificar un los minutos puede cambiar las horas.\n      $(\"#horario_centro_dialog .time_pick .timepicker_wrap input\").each(function(index, el) {\n        if($(this).val()!=\"\"){\n          $(this).removeClass('error_guardar');\n        }\n        else{\n          $(this).addClass('error_guardar');\n        }\n      });\n    }\n    //Se comprueba si hay algún error para ocultar el aviso.\n    $(\"#horario_centro_dialog  #aviso_error\").hide();\n\n    $(\"#horario_centro_dialog .time_pick .timepicker_wrap input\").each(function(index, el) {\n      if($(this).hasClass('error_guardar')){\n        $(\"#horario_centro_dialog  #aviso_error\").show();\n      }\n    });\n    },100);\n  });\n\n  //Se guarda el horario del centro.\n  $(document).on('click',\"#horario_centro_dialog #button_hora_centro\",function(event){\n    event.preventDefault();\n\n    $(\"#horario_centro_dialog  #aviso_error\").hide();\n\n    $(\"#horario_centro_dialog .timepicker_wrap input\").each(function(){\n      $(this).removeClass(\"error_guardar\");\n\n      if($(this).val()==\"\"){\n        $(this).addClass(\"error_guardar\");\n      }  \n    });\n\n    if($(\"#horario_centro_dialog input\").hasClass(\"error_guardar\")){\n      $(\"#horario_centro_dialog  #aviso_error\").show();\n    }\n    else{\n      $(\"#curso_dialog  #aviso_error\").hide();\n\n      inicio= $(\"#horario_centro_dialog #horario_inicio_centro\").val();\n      fin= $(\"#horario_centro_dialog #horario_fin_centro\").val(); \n\n      ini_anterior=$(\"#horario_centro_dialog #horario_inicio_centro\").attr(\"value\");\n      fin_anterior=$(\"#horario_centro_dialog #horario_fin_centro\").attr(\"value\");\n   \n      if(inicio==ini_anterior && fin==fin_anterior){\n          $(\"#horario_centro_dialog \").dialog('close');\n          return false;\n      }\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('registrar_horario_centro'),\n        data: \"inicio=\"+inicio+\"&fin=\"+fin,\n        success: function(response) {\n\n          $.ajax({\n            type: 'POST',\n            url: Routing.generate('horario_delete'),\n            success: function(response) {\n              $(\"#registrar_horario_academico\").update_tab();\n            }\n          })\n\n          exito.play();\n          new PNotify({\n            text:\"Se ha registrado el horario del centro.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          //Se muestra un aviso si se elimina el horario escolar anterior.\n          if($(\"#registro_horario #aviso_horario\").hasClass('oculto')){\n            new PNotify({\n              text:\"Se ha eliminado el horario escolar anterior.\",\n              addclass: \"custom\",\n              type: \"notice\",\n              shadow: true,\n              hide: true,\n              buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n\n          // Se actualiza la pestaña de registrar horario escolar.\n          $(\"#horario_centro_dialog  div[class='nuevo']\").removeClass(\"nuevo\");\n          $(\"#horario_centro_dialog \").dialog('close');\n        },error: function (response, desc, err){\n            alert(desc);\n            alert(err);\n            }\n      })\n    }\n  });\n\n  //////////////////////////////////\n  //        Instalaciones         //\n  //////////////////////////////////\n\n  $(document).on(\"focus\",\"#registro_instalaciones .instalaciones #instalación_nombre\",function(event){\n    event.preventDefault();\n      $(\"#registro_instalaciones .instalaciones #instalación_nombre\").removeClass(\"invalid_placeholder\");\n  });\n\n  $(document).on(\"blur\",\"#registro_instalaciones .instalaciones #instalación_nombre\",function(event){\n    event.preventDefault();\n    if($(this).val()==\"\"){\n      $(this).addClass(\"invalid_placeholder\");\n    }\n    else{\n      $(this).removeClass(\"invalid_placeholder\");\n    }\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones .instalaciones #instalación_new\",function(event){\n    event.preventDefault();\n\n    if($(\"#registro_instalaciones .instalaciones #instalación_nombre\").val()==\"\"){\n      $(\"#registro_instalaciones .instalaciones #instalación_nombre\").addClass(\"invalid_placeholder\");\n    }\n    else{\n      $.ajax({\n        type: 'POST',\n        url: $(\"#registro_instalaciones .instalaciones #instalación_nueva\").attr('action'),\n        data:$(\"#registro_instalaciones .instalaciones #instalación_nueva\").serialize(), \n        dataType: 'json',\n        success: function(response) {\n          //Validación de existencia\n          if(response.error){\n            error.play();\n            swal({\n              title: \"Instalación registrada en el sistema\",\n              text: 'La instalación introducida ya está registrada en el sistema.',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n            return false;\n          }\n          // Se actualiza las pestañas.\n          $(\"#registrar_instalaciones\").update_tab();\n          $(\"#reservar_instalaciones\").update_tab();\n          $(\"#consultar_instalaciones\").update_tab();\n          $(\"#consultar_equipamientos\").update_tab();\n        }\n      })\n    }\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones .instalaciones td a\",function(event){\n    event.preventDefault();\n\n    $(\"#registro_instalaciones .instalaciones #instalación_nombre\").attr('placeholder',' ');\n\n    $(\"#registro_instalaciones .instalaciones td a\").closest(\"tr\").removeClass(\"edit_equipamiento\");\n    $(this).closest(\"tr\").addClass(\"edit_equipamiento\");\n    $(\"#registro_instalaciones .instalaciones  #datos_instalación\").load($(this).attr(\"href\"), function(){\n      $(\"#registro_instalaciones .instalaciones #instalación_nombre\").attr('placeholder','Inserte nombre para actualizar');\n    });\n    $(\"#registro_instalaciones .instalaciones #cerrar_instalación_edit\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_delete\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_edit\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_new\").closest(\"th\").addClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_nombre\").removeClass(\"invalid_placeholder\");\n    $(\"#registro_instalaciones .instalaciones #instalación_nombre\").val($(this).text());\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones .instalaciones #cerrar_instalación_edit\",function(event){\n    $(\"#registro_instalaciones .instalaciones td a\").closest(\"tr\").removeClass(\"edit_equipamiento\");\n    $(\".instalaciones #datos_instalación\").load(Routing.generate('equipamiento_new'));\n\n    $(\"#registro_instalaciones .instalaciones #cerrar_instalación_edit\").addClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_delete\").closest(\"th\").addClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_edit\").closest(\"th\").addClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_new\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones .instalaciones #instalación_nombre\").val(\"\");\n    $(\"#registro_instalaciones .instalaciones #instalación_nombre\").removeClass(\"invalid_placeholder\");\n    $(\"#registro_instalaciones .instalaciones #instalación_nombre\").attr('placeholder','Inserte nueva instalación');\n    $(\"#registro_instalaciones .instalaciones #datos_instalación\").removeClass(\"oculto\");\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones .instalaciones #instalación_edit\",function(event){\n    event.preventDefault();\n\n    if($(\"#registro_instalaciones .instalaciones #instalación_nombre\").val()==\"\"){\n      $(\"#registro_instalaciones .instalaciones #instalación_nombre\").addClass(\"invalid_placeholder\");\n    }\n    else{\n      $.ajax({\n        type: 'PUT',\n        url: $(\"#registro_instalaciones .instalaciones #instalación_editar\").attr('action'),\n        data:$(\"#registro_instalaciones .instalaciones #instalación_editar\").serialize(), \n        success: function(response) {\n          //Validación de existencia\n          if(response.error){\n            error.play();\n            swal({\n              title: \"Instalación registrada en el sistema\",\n              text: 'La instalación introducida ya está registrada en el sistema.',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n            return false;\n          }\n          // Se actualiza las pestañas de instalaciones.\n          $(\"#registrar_instalaciones\").update_tab();\n          $(\"#reservar_instalaciones\").update_tab();\n          $(\"#consultar_instalaciones\").update_tab();\n          $(\"#consultar_equipamientos\").update_tab();\n        }\n      })\n    }\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones .instalaciones #instalación_delete\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"th\").prev().find(\"div[id='equipamiento_eliminar'] form\");\n\n    var arr= form.attr('action').split('/');\n    equipamiento=$(\" #registro_instalaciones .instalaciones#instalación_nombre\").val();\n    aviso.play();\n    swal({\n      title: \"Eliminación de la instalación del sistema.\",\n      text: \"¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('equipamiento_reservado'),\n          data: {equipamiento:equipamiento},\n          dataType: 'json',\n          async:false,\n  \n          success: function(response) {\n            // Si no hay alumnos asignados al curso se puede eliminar.\n            if(response.data!=null){ \n              error.play();\n              swal({\n                title: \"La eliminación no se ha efectuado\",\n                html: '<p class=\"justificado\">La instalación <span>\"'+equipamiento+'\"</span> no se puede eliminar porque está reservada. Debe eliminar las reservas de la instalación para poder eliminarla.</p>',\n                type: \"error\",\n                confirmButtonColor: color\n              });\n            }\n            else{\n              $.ajax({\n                type: 'DELETE',\n                url: Routing.generate(\"equipamiento_delete\", {id:arr[5]}),\n                data: form.serialize(),\n        \n                success: function() {\n                  // Se actualiza las pestañas de equipamientos.\n                  $(\"#registrar_instalaciones\").update_tab();\n                  $(\"#reservar_instalaciones\").update_tab();\n                  $(\"#consultar_instalaciones\").update_tab();\n                  $(\"#consultar_equipamientos\").update_tab();\n                }\n              })\n            }\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n    return false;\n  });\n\n  //////////////////////////////////\n  //             Aulas            //\n  //////////////////////////////////\n\n  $(document).on(\"focus\",\"#registro_instalaciones .aulas #aula_nombre\",function(event){\n    event.preventDefault();\n      $(\"#registro_instalaciones #aula_nombre\").removeClass(\"invalid_placeholder\");\n  });\n\n  $(document).on(\"blur\",\"#registro_instalaciones #aula_nombre\",function(event){\n    event.preventDefault();\n    if($(this).val()==\"\"){\n      $(this).addClass(\"invalid_placeholder\");\n    }\n    else{\n      $(this).removeClass(\"invalid_placeholder\");\n    }\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones #aula_new\",function(event){\n    event.preventDefault();\n\n    if($(\"#registro_instalaciones #aula_nombre\").val()==\"\"){\n      $(\"#registro_instalaciones #aula_nombre\").addClass(\"invalid_placeholder\");\n    }\n    else{\n      //Se comprueba si el nombre empieza por \"Aula\", para añadirselo en caso contrario.\n      if(!$(\"#registro_instalaciones #aula_nombre\").val().match(\"^Aula\")){\n        nuevo=\"Aula \"+$(\"#registro_instalaciones #aula_nombre\").val().toLowerCase();\n        $(\"#registro_instalaciones #aula_nombre\").val(nuevo);\n      }\n\n      $.ajax({\n        type: 'POST',\n        url: $(\"#registro_instalaciones #aula_nueva\").attr('action'),\n        data:$(\"#registro_instalaciones #aula_nueva\").serialize(), \n        dataType: 'json',\n        success: function(response) {\n          //Validación de existencia\n          if(response.error){\n            error.play();\n            swal({\n              title: \"Aula registrada en el sistema\",\n              text: 'Esta aula ya se encuentra registrada en el sistema.',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n            return false;\n          }\n          // Actualización de pestañas.\n          $(\"#registrar_instalaciones\").update_tab();\n          $(\"#asignar_aula\").update_tab();  \n        }\n      })\n    }\n  });\n\n  //Se modifica el máximo de caracteres permitido para el nombre de aulas con el foco del elemento.\n  $(document).on(\"focus\",\"#registro_instalaciones #aula_nombre\",function(event){\n    event.preventDefault();\n    $(this).attr(\"maxlength\",10);\n\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones .aulas td a\",function(event){\n    event.preventDefault();\n\n    $(\"#registro_instalaciones #aula_nombre\").attr('placeholder',' ');\n\n    $(\"#registro_instalaciones .aulas td a\").closest(\"tr\").removeClass(\"edit_equipamiento\");\n    $(this).closest(\"tr\").addClass(\"edit_equipamiento\");\n\n    $(\"#cerrar_aula_edit\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_delete\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_edit\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_new\").closest(\"th\").addClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_nombre\").removeClass(\"invalid_placeholder\");\n    $(\"#registro_instalaciones #aula_nombre\").val($(this).text());\n    $(\"#registro_instalaciones .aulas #datos_instalación\").load($(this).attr(\"href\"), function(){\n      $(\"#registro_instalaciones .aulas #aula_nombre\").attr('placeholder','Inserte nuevo nombre');\n    });\n  });\n\n  $(document).on(\"click\",\"#cerrar_aula_edit\",function(event){\n    $(\"#registro_instalaciones .aulas td a\").closest(\"tr\").removeClass(\"edit_equipamiento\");\n    $(\"#registro_instalaciones .aulas #datos_instalación\").load(Routing.generate('equipamiento_new'));\n\n    $(\"#cerrar_aula_edit\").addClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_delete\").closest(\"th\").addClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_edit\").closest(\"th\").addClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_new\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#registro_instalaciones #aula_nombre\").val(\"\");\n    $(\"#registro_instalaciones #aula_nombre\").removeClass(\"invalid_placeholder\");\n    $(\"#registro_instalaciones #aula_nombre\").attr('placeholder','Inserte nueva aula');\n    $(\"#registro_instalaciones .aulas #datos_instalación\").removeClass(\"oculto\");\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones #aula_edit\",function(event){\n    event.preventDefault();\n\n    if($(\"#registro_instalaciones #aula_nombre\").val()==\"\"){\n      $(\"#registro_instalaciones #aula_nombre\").addClass(\"invalid_placeholder\");\n    }\n    else{\n      //Se comprueba si el nombre empieza por \"Aula\", para añadirselo en caso contrario.\n      if(!$(\"#registro_instalaciones #aula_nombre\").val().match(\"^Aula\")){\n        nuevo=\"Aula \"+$(\"#registro_instalaciones #aula_nombre\").val().toLowerCase();\n        $(\"#registro_instalaciones #aula_nombre\").val(nuevo);\n      }\n      $.ajax({\n        type: 'PUT',\n        url: $(\"#registro_instalaciones #aula_editar\").attr('action'),\n        data:$(\"#registro_instalaciones #aula_editar\").serialize(), \n        success: function(response) {\n          //Validación de existencia\n          if(response.error){\n            error.play();\n            swal({\n              title: \"Aula registrada en el sistema\",\n              text: 'Esta aula ya se encuentra registrada en el sistema.',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n            return false;\n          }\n\n          // Actualización de pestañas.\n          $(\"#registrar_instalaciones\").update_tab();\n          $(\"#asignar_aula\").update_tab();\n          $(\"#profesor_asignar_grupo\").update_tab();\n          $(\"#asignar_horario\").update_tab();\n        }\n      })\n    }\n  });\n\n  $(document).on(\"click\",\"#registro_instalaciones #aula_delete\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"th\").prev().find(\"div[id='equipamiento_eliminar'] form\");\n\n    var arr= form.attr('action').split('/');\n    equipamiento=$(\"#registro_instalaciones #aula_nombre\").val();\n    aviso.play();\n    swal({\n      title: \"Eliminación del aula del sistema.\",\n      text: \"¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('equipamiento_reservado'),\n          data: {equipamiento:equipamiento},\n          dataType: 'json',\n          async:false,\n  \n          success: function(response) {\n            // Si no hay alumnos asignados al curso se puede eliminar.\n            if(response.data!=null){ \n              error.play();\n              swal({\n                title: \"La eliminación no se ha efectuado\",\n                html: '<p class=\"justificado\">El aula <span>\"'+equipamiento+'\"</span> no se puede eliminar porque está reservada. Debe eliminar las reservas de la instalación para poder eliminarla.</p>',\n                type: \"error\",\n                confirmButtonColor: color\n              });\n            }\n            else{\n              $.ajax({\n                type: 'DELETE',\n                url: Routing.generate(\"equipamiento_delete\", {id:arr[5]}),\n                data: form.serialize(),\n        \n                success: function() {\n                  // Se actualiza las pestañas de instalaciones y asignar aulas.\n                  $(\"#registrar_instalaciones\").update_tab();\n                  $(\"#asignar_aula\").update_tab();\n                }\n              })\n            }\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n    return false;\n  });\n\n\n\n  //////////////////////////////////\n  //        Equipamientos         //\n  //////////////////////////////////\n\n\n  $(document).on(\"focus\",\"#equipamiento_nueva input\",function(event){\n    event.preventDefault();\n      $(this).removeClass(\"invalid_placeholder\");\n  });\n\n  $(document).on(\"blur\",\"#registro_equipamientos .contenedor_registro_instalaciones form input\",function(event){\n    event.preventDefault();\n    if($(this).val()==\"\"){\n      $(this).addClass(\"invalid_placeholder\");\n    }\n    else{\n      $(this).removeClass(\"invalid_placeholder\");\n    }\n  });\n\n  $(document).on(\"change\",\"#equipamiento_nueva input\",function(event){\n    event.preventDefault();\n    if($(this).val()==\"\"){\n      $(this).addClass(\"invalid_placeholder\");\n    }\n    else{\n      $(this).removeClass(\"invalid_placeholder\");\n    }\n  });\n\n\n  $(document).on(\"keydown\",\"#equipamiento_unidades\",function(event){\n    if(($(\"#equipamiento_unidades\").val().length==2 && event.keyCode != 8 && event.keyCode != 46&& event.keyCode != 37 && event.keyCode != 39 ) || (  ($(\"#equipamiento_unidades\").val().length==1 || $(\"#equipamiento_unidades\").val().length==0) && !(event.keyCode>=96 && event.keyCode<=105) && !(event.keyCode>=48 && event.keyCode<=57) && event.keyCode != 8 && event.keyCode != 46 && event.keyCode != 37 && event.keyCode != 39)){\n      return false;\n    }\n  });\n\n  $(document).on(\"click\",\"#equipamiento_new\",function(event){\n    event.preventDefault();\n\n    if($(\"#equipamiento_nombre\").val()==\"\" || $(\"#equipamiento_unidades\").val()==\"\"){\n      if($(\"#equipamiento_nombre\").val()==\"\")\n        $(\"#equipamiento_nombre\").addClass(\"invalid_placeholder\");\n      if($(\"#equipamiento_unidades\").val()==\"\")\n        $(\"#equipamiento_unidades\").addClass(\"invalid_placeholder\");\n    }\n    else{\n      $.ajax({\n        type: 'POST',\n        url: $(\"#equipamiento_nueva\").attr('action'),\n        data:$(\"#equipamiento_nueva\").serialize(), \n        dataType: 'json',\n        success: function(response) {\n          //Validación de existencia\n          if(response.error){\n            error.play();\n            swal({\n              title: \"Equipamiento registrado en el sistema\",\n              text: 'El equipamiento introducido ya está registrado en el sistema.',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n            return false;\n          }\n\n          // Se actualiza las pestañas de equipamientos.\n          $(\"#registrar_equipamientos\").update_tab();\n          $(\"#reservar_equipamientos\").update_tab();\n        }\n      })\n    }\n  });\n\n$(document).on(\"click\",\"#registro_equipamientos td a\",function(event){\n    $(\"#equipamiento_nombre\").attr('placeholder',' ');\n\n    $(\"#registro_equipamientos td a\").closest(\"tr\").removeClass(\"edit_equipamiento\");\n    $(this).closest(\"tr\").addClass(\"edit_equipamiento\");\n    $(\"#datos_equipamiento\").load($(this).attr(\"href\"), function(){\n      $(\"#equipamiento_nombre\").attr('placeholder','Inserte el nombre para actualizar el equipamiento');\n    });\n    $(\"#cerrar_equipamiento_edit\").removeClass(\"oculto\");\n    $(\"#equipamiento_delete\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#equipamiento_edit\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#equipamiento_new\").closest(\"th\").addClass(\"oculto\");\n    $(\"#equipamiento_nombre\").removeClass(\"invalid_placeholder\");\n\n  });\n\n  $(document).on(\"click\",\"#cerrar_equipamiento_edit\",function(event){\n    $(\"#registro_equipamientos td a\").closest(\"tr\").removeClass(\"edit_equipamiento\");\n    $(\"#datos_equipamiento\").load(Routing.generate('equipamiento_new'));\n\n    $(\"#cerrar_equipamiento_edit\").addClass(\"oculto\");\n    $(\"#equipamiento_delete\").closest(\"th\").addClass(\"oculto\");\n    $(\"#equipamiento_edit\").closest(\"th\").addClass(\"oculto\");\n    $(\"#equipamiento_new\").closest(\"th\").removeClass(\"oculto\");\n    $(\"#equipamiento_nombre\").val(\"\");\n    $(\"#equipamiento_nombre\").removeClass(\"invalid_placeholder\");\n    $(\"#equipamiento_nombre\").attr('placeholder','Inserte el nombre para añadir nuevo equipamiento');\n    $(\"#datos_equipamiento\").removeClass(\"oculto\");\n    setTimeout(function(){ \n      $(\"#equipamiento_tipo\").val('Equipamiento');\n    },100);\n  });\n\n  $(document).on(\"click\",\"#equipamiento_edit\",function(event){\n    event.preventDefault();\n\n    if($(\"#equipamiento_nombre\").val()==\"\" || $(\"#equipamiento_unidades\").val()==\"\"){\n      if($(\"#equipamiento_nombre\").val()==\"\")\n        $(\"#equipamiento_nombre\").addClass(\"invalid_placeholder\");\n      if($(\"#equipamiento_unidades\").val()==\"\")\n        $(\"#equipamiento_unidades\").addClass(\"invalid_placeholder\");\n    }\n    else{\n      $.ajax({\n        type: 'PUT',\n        url: $(\"#equipamiento_editar\").attr('action'),\n        data:$(\"#equipamiento_editar\").serialize(), \n        success: function(response) {\n          //Validación de existencia\n          if(response.error){\n            error.play();\n            swal({\n              title: \"Equipamiento registrado en el sistema\",\n              text: 'El equipamiento introducido ya está registrado en el sistema.',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n            return false;\n          }\n          // Se actualiza las pestañas de equipamientos.\n          $(\"#registrar_equipamientos\").update_tab();\n          $(\"#reservar_equipamientos\").update_tab();\n          $(\"#consultar_equipamientos\").update_tab();\n        }\n      })\n    }\n  });\n\n  $(document).on(\"click\",\"#equipamiento_delete\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"th\").prev().find(\"div[id='equipamiento_eliminar'] form\");\n\n    var arr= form.attr('action').split('/');\n    equipamiento=$(\"#equipamiento_nombre\").val();\n    // Audio de notificación\n    aviso.play(); \n    // Se muestra la notificación.\n    swal({\n     title: \"Eliminación del equipamiento del sistema.\",\n     text: \"¿Estas seguro de continuar? No podrás deshacer este paso...\",\n     type: \"warning\",\n     showCancelButton: true,\n     cancelButtonText: \"Cancelar\",\n     confirmButtonColor: color,\n     confirmButtonText: \"¡Adelante!\"\n     }).then(function () {\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('equipamiento_reservado'),\n        data: {equipamiento:equipamiento},\n        dataType: 'json',\n        async:false,\n  \n        success: function(response) {\n          // Si no hay alumnos asignados al curso se puede eliminar.\n          if(response.data!=null){\n            error.play(); \n            swal({\n              title: \"La eliminación no se ha efectuado\",\n              html: '<p class=\"justificado\">El equipamiento <span>\"'+equipamiento+'\"</span> no se puede eliminar porque está reservado. Debe eliminar las reservas del equipamiento para poder eliminarlo.</p>',\n              type: \"error\",\n              confirmButtonColor: color\n            });\n          }\n          else{\n            $.ajax({\n              type: 'DELETE',\n              url: Routing.generate(\"equipamiento_delete\", {id:arr[5]}),\n              data: form.serialize(),\n        \n              success: function() {\n                // Se actualiza las pestañas de equipamientos.\n                $(\"#registrar_equipamientos\").update_tab();\n                $(\"#reservar_equipamientos\").update_tab();\n              }\n            })\n          }\n        }\n      })\n     }, function (dismiss) {\n\n     }\n    );\n    return false;\n  });\n\n  ///////////////////////////////////////////\n  //  Reserva Instalaciones/Equipamientos  //\n  ////////////////////////////////// ////////\n\n  // Se deshabilita los días no lectivos en el calendario de reservas. \n  $(document).on('click',\"#actualizar_calendario_lectivo\",function(event){\n    //Se obtiene el contenedor principal según si el calendario está en un formulario o no.\n\n    if($(this).hasClass('form'))\n    {\n      contenedor=$(this).closest(\"form\");\n    }\n    else{\n      contenedor=$(this).closest(\"div[class*='general_container']\");\n    }\n\n    event.preventDefault();\n    // Retardo para ejecutarlo una vez cargado el datepicker.\n    contenedor.find(\"#div_leyenda\").addClass(\"oculto\"); \n    // Se elimina los estilos del día actual en el calendario.     \n    setTimeout(function() {\n      contenedor.find('a.ui-state-highlight').removeClass('ui-state-active');\n      contenedor.find('a.ui-state-highlight').removeClass('ui-state-hover');\n      contenedor.find('a.ui-state-highlight').removeClass('ui-state-highlight');\n    }, 1);\n\n    setTimeout(function(){ \n      mes=contenedor.find(\"tbody td[data-handler='selectDay']\").attr(\"data-month\");\n      año=contenedor.find(\"tbody td[data-handler='selectDay']\").attr(\"data-year\");\n      mes++;\n      if(mes!=10 && mes!=11 && mes!=12){\n        mes='0'+mes;\n      }\n      //Se carga los festivos en la leyenda.\n      contenedor.find(\"#div_leyenda\").empty();\n      contenedor.find(\"#div_leyenda\").load(Routing.generate('festivos_por_mes', {id:mes}));\n      contenedor.find(\"tbody td a\").removeClass(\"festivo\");\n      //Se eliminan la clases en los enlaces para que inicialmente esten todos habilitados y luego se deshabiliten los festivos correspondientes.\n      contenedor.find(\"tbody td:not([class*='ui-datepicker-week-end'],[class=' ui-datepicker-unselectable ui-state-disabled '])\").attr(\"class\",\"\");\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('dias_festivos'),\n        data: {mes:mes},\n        dataType: 'json',\n        success: function(response) {\n          \n        setTimeout(function(){\n          for (var key in response.data) { \n            // Se añade un enlace en los días festivos deshabilitados del fin de semana, para que luego se encuentre como elemento \"a\".\n            contenedor.find(\".ui-datepicker-calendar td[class=' ui-datepicker-week-end ui-datepicker-unselectable ui-state-disabled '] span\").filter(function(){return $(this).text()==response.data[key][\"dia\"];}).each(function(){  \n              $( \"<a class='ui-state-default' href='javascript:void(0);'>\"+response.data[key][\"dia\"]+\"</a>\" ).insertAfter( $(this));\n              $(this).closest(\"td\").attr(\"data-month\",(mes-1));\n              $(this).remove();\n            });\n\n            contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a:contains('\"+response.data[key][\"dia\"]+\"')\").each(function(){  \n              var dato=response.data[key][\"dia\"];\n              var comp= $(this).text();\n              // Con :contains se obtiene los días del calendario que contiene en sus dígitos el dato dado.\n              // Si el dato obtenido tiene un solo dígito, se excluye los días de dos dígitos del calendario que contiene ese dato.\n              if(String(dato).length==\"1\"){\n                if(String(comp).length==\"1\"){\n                  $(this).closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n                  $(this).closest(\"td:not(.ui-datepicker-week-end) a\").addClass(\" no_lectivo\");//Se le añade la clase no:lectivo a todos los elementos \"a\" de los días festivos.\n                  // Se comprueba que el día festivo es un domingo y que el lunes no hay ningún festivo añadido. \n                  if($(this).closest(\"td\").hasClass(\"ui-datepicker-week-end\") &&  $(this).closest(\"tr\").find(\"td:last a\").text() == $(this).text() && !contenedor.find(\"#div_leyenda h4[id='\"+$(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").text()+\"']\").length){\n                    // Mostramos el traspado del festivo al lunes.\n                    $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n                    $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").closest(\"td a\").addClass(\"no_lectivo\");\n\n                    $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").attr(\"tipo\",\"traslado\");\n\n                      //Se muestra solo un traslado del festivo (ya que hay dos elementos con el mismo día).\n                      contenedor.find(\"#div_leyenda h4[id='\"+dato+\"']\").each(function(){\n                        if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                          $( \"<h4 id='\"+(dato+1)+\"'>\"+(dato+1)+\"</h4><h4 id='h4_descripcion'>Traslado del Festivo del día \"+dato+\"</h4>\" ).insertAfter( $(this).next());\n                        }\n                      });\n                      //Se comprueba que exista el elemento \"a\" del traslado del festivo para añadirle el título del festivo.\n                      //Si no existe es porque el día ha pasado con respecto al día actual y se ha convertido en un span, y no se puede mostrar.\n                      if($(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").size()>0){\n                        $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").attr(\"title\",contenedor.find(\"#div_leyenda h4[id=\"+ $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").text()+\"]\").next(\"h4\").text());\n                      }\n                  }\n                }\n              }\n              else{\n\n                $(this).closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n                $(this).closest(\"td:not(.ui-datepicker-week-end) a\").addClass(\" no_lectivo\");\n                // Se comprueba que el día festivo es un domingo, que el lunes no hay ningún festivo añadido y que el festivo no coincida con el último día del mes. \n                if($(this).closest(\"td\").hasClass(\"ui-datepicker-week-end\") &&  $(this).closest(\"tr\").find(\"td:last a\").text() == $(this).text() && !contenedor.find(\"#div_leyenda h4[id='\"+$(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").text()+\"']\").length && contenedor.find(\"tbody tr:last td:last a\").text()!=$(this).text() ){\n                  // Mostramos el traspado del festivo al lunes.\n                  $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n                  $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").closest(\"td a\").addClass(\"no_lectivo\");\n                  \n                  $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").attr(\"tipo\",\"traslado\");\n\n                  \n                    //Se muestra solo un traslado del festivo (ya que hay dos elementos con el mismo día).\n                    contenedor.find(\"#div_leyenda h4[id='\"+dato+\"']\").each(function(){\n\n                      if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                        $( \"<h4 id='\"+(dato+1)+\"'>\"+(dato+1)+\"</h4><h4 id='h4_descripcion'>Traslado del Festivo del día \"+dato+\"</h4>\" ).insertAfter( $(this).next());\n                      }\n                    });\n                    //Se comprueba que exista el elemento \"a\" del traslado del festivo para añadirle el título del festivo.\n                    //Si no existe es porque el día ha pasado con respecto al día actual y se ha convertido en un span, y no se puede mostrar.\n                    if($(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").size()>0){\n                      $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").attr(\"title\",contenedor.find(\"#div_leyenda h4[id=\"+ $(this).closest(\"tr\").next(\"tr\").find(\"td:nth-child(1) a\").text()+\"]\").next(\"h4\").text());\n                    }\n                }\n              }\n            });\n          }\n        }, 50);\n          // Se comprueba de que existe un día de comienzo/fin de vacaciones.\n          if(response.inicio_vacaciones && response.fin_vacaciones){\n            var descripcion_inicio=contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").next().text().split(\" \");\n            var descripcion_fin=contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").next().text().split(\" \");\n            // Se comprueba que existe ambos días de vacaciones en el mismo mes y que pertenecen al mismo tipo de vacaciones.\n            if(descripcion_inicio[3]==descripcion_fin[3]){\n              // Se retarda para modificar los días festivos dentro de las vacaciones.\n              setTimeout(function(){\n                contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==response.inicio_vacaciones[\"dia\"];}).removeClass(\"festivo\");\n                contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==response.fin_vacaciones[\"dia\"];}).removeClass(\"festivo\");\n                // Se comprueba si existe al inicio de vacaciones día siguiente con festivo de traslado para eliminarlo.\n                if(contenedor.find(\"#div_leyenda h4[id='\"+(response.inicio_vacaciones[\"dia\"]+1)+\"']\").next().text().indexOf(\"Traslado\") >= 0){\n                    contenedor.find(\"#div_leyenda h4[id='\"+(response.inicio_vacaciones[\"dia\"]+1)+\"']\").next().remove();\n                    contenedor.find(\"#div_leyenda h4[id='\"+(response.inicio_vacaciones[\"dia\"]+1)+\"']\").remove();\n                    contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==(response.inicio_vacaciones[\"dia\"]+1);}).removeClass(\"festivo\");                \n                }\n                // Se añade la clase vacaciones a los días correspondientes.\n                for(var i = response.inicio_vacaciones[\"dia\"]; i <= response.fin_vacaciones[\"dia\"]; i++){\n                  contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==i;}).closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n                  contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==i;}).closest(\"td a\").addClass(\"no_lectivo\");\n\n                  contenedor.find(\"#div_leyenda h4[id='\"+i+\"']\").addClass(\"vacaciones\"); \n                  contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'][class='ui-datepicker-unselectable'] a\").filter(function(){return $(this).text()==i;}).attr(\"title\",contenedor.find(\"#div_leyenda h4[class='vacaciones']\").next().text().replace(\"Inicio \",\"\"));\n                }\n                // Si se repite el día de inicio de vacaciones, se elimina la clase vacaciones en los días de la leyenda que no contiene la información de las vacaciones.\n                if(contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").length>1){\n                  contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").each(function(){\n                    if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                      $(this).removeClass(\"vacaciones\");\n                    }\n                  });\n                }\n                // Si se repite el día de fin de vacaciones, se elimina la clase vacaciones en los días de la leyenda que no contiene la información de las vacaciones.\n                if(contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").length>1){\n                  contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").each(function(){\n                    if($(this).next().text().indexOf(\" Vacaciones \")<0){\n                      $(this).removeClass(\"vacaciones\");\n                    }               \n                    // Se elimina el día de final de vacaciones en la leyenda para unificarlo con el día de inicio.\n                    else if($(this).next().text().indexOf(\" Vacaciones \")>=0){\n                      $(this).next().remove();\n                      $(this).remove();\n                    }\n                  });\n                  // Se modifica el inicio de vacaciones en la leyenda para añadir el día de fin de vacaciones.\n                  contenedor.find(\"#div_leyenda h4[class='vacaciones']\").text(response.inicio_vacaciones[\"dia\"]+\"-\"+response.fin_vacaciones[\"dia\"]);\n                  contenedor.find(\"#div_leyenda h4[class='vacaciones']\").next().text(contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text().replace(\"Inicio \",\"\"));\n                }\n              }, 20);\n            }\n          }\n          else if(response.inicio_vacaciones){\n            var date = new Date(año,mes,1);\n            var fecha_ultimoDia = new Date(date.getFullYear(), date.getMonth() , 0).toString().split(\" \");\n            último_día=fecha_ultimoDia[2];\n            \n            setTimeout(function(){\n            // Si se repite el día de inicio de vacaciones, se asigna la clase vacaciones al día de inicio de las vacaciones.\n            if(contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").length>1){\n              contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").each(function(){\n                if($(this).next().text().indexOf(\" Vacaciones \")>0){\n                  $(this).addClass(\"vacaciones\");   \n                }\n              });\n              // Se comprueba que el festivo está tras las vacaciones en la leyenda, en caso contrario se modifica.\n              if(contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").closest(\"h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").text()==response.inicio_vacaciones[\"dia\"]){\n                vacaciones=contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text();\n                contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().remove();\n                contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class='vacaciones']\").remove();\n\n                $( \"<h4 id='\"+response.inicio_vacaciones[\"dia\"]+\"'class='vacaciones'>\"+response.inicio_vacaciones[\"dia\"]+\"</h4><h4 id='h4_descripcion'>\"+vacaciones+\"</h4>\" ).insertBefore( contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"'][class!='vacaciones']\")); \n              }\n            }\n            else{\n              contenedor.find(\"#div_leyenda h4[id='\"+response.inicio_vacaciones[\"dia\"]+\"']\").addClass(\"vacaciones\");\n            }\n            // Se modifica los días desde inicio de vacaciones hasta final de mes puesto que sigue en el siguiente mes.\n            for(var i = response.inicio_vacaciones[\"dia\"]; i <= último_día; i++){\n              contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==i;}).closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n              contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==i;}).closest(\"td a\").addClass(\"no_lectivo\");\n              \n              contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'][class='ui-datepicker-unselectable'] a\").filter(function(){return $(this).text()==i;}).attr(\"title\",contenedor.find(\"#div_leyenda h4[class='vacaciones']\").next().text().replace(\"Inicio \",\"\"));\n            }\n\n            }, 50);\n          }\n          else if(response.fin_vacaciones){\n\n            setTimeout(function(){\n            //Se añade la clase vacaciones, solo a los elementos de ese día que contiene la información de las vacaciones.\n            if(contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").length>1){\n              contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").each(function(){\n                if($(this).next().text().indexOf(\" Vacaciones \")>0){\n                  $(this).addClass(\"vacaciones\");   \n                }\n              });\n              // Se comprueba que el festivo está tras las vacaciones en la leyenda, en caso contrario se modifica.\n              if(contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").closest(\"h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").text()==response.fin_vacaciones[\"dia\"]){\n                vacaciones=contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().text();\n                contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").next().remove();\n                contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class='vacaciones']\").remove();\n\n                $( \"<h4 id='\"+response.fin_vacaciones[\"dia\"]+\"'class='vacaciones'>\"+response.fin_vacaciones[\"dia\"]+\"</h4><h4 id='h4_descripcion'>\"+vacaciones+\"</h4>\" ).insertBefore( contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"'][class!='vacaciones']\")); \n              }\n            }\n            else{\n              contenedor.find(\"#div_leyenda h4[id='\"+response.fin_vacaciones[\"dia\"]+\"']\").addClass(\"vacaciones\");\n            }\n            // Se modifica los días desde inicio del mes hasta final de vacaciones puesto que sigue en el mes anterior.\n            for(var i = response.fin_vacaciones[\"dia\"]; i >= 1; i--){\n              contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==i;}).closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n              contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'] a\").filter(function(){return $(this).text()==i;}).closest(\"td a\").addClass(\"no_lectivo\");\n\n              contenedor.find(\".ui-datepicker-calendar td[data-month='\"+(mes-1)+\"'][class='ui-datepicker-unselectable']\").find(\"a\").filter(function(){return $(this).text()==i;}).attr(\"title\",contenedor.find(\"#div_leyenda h4[class='vacaciones']\").next().text().replace(\"Fin \",\"\"));\n            }\n            }, 50);\n          }\n        }\n      })\n\n      // Se Comprueba si el último día del mes anterior es un domingo y es festivo, para traspasar el festivo al primer día del mes actual.\n      dia_1=contenedor.find(\"tbody tr:first td:first a\");\n      if( dia_1.text() == \"1\" ){\n        // Se obtiene un string con los datos el último día del mes anterior (Ej: Sun Jan 31 2016) .\n        fecha=new Date(dia_1.closest(\"div\").find(\"div>span:nth-child(2) \").text(), \"0\"+contenedor.find(\"tbody tr:first td:first\").attr(\"data-month\"), 0).toDateString();\n        fecha=fecha.split(\" \");\n        dia_ant=fecha[2];\n        // Asignamos a una variable el mes anterior que correcponda. En datepicker aparece el número del mes-1.\n        if(contenedor.find(\"tbody tr:first td:first\").attr(\"data-month\")==\"0\"){\n          mes_ant=\"12\";\n        }\n        else if(contenedor.find(\"tbody tr:first td:first\").attr(\"data-month\").length==\"1\"){\n          mes_ant=0+contenedor.find(\"tbody tr:first td:first\").attr(\"data-month\");\n        }\n        else{\n          mes_ant=contenedor.find(\"tbody tr:first td:first\").attr(\"data-month\");\n        }\n        var MES = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('comprobar_festivo'),\n          data: {mes:mes_ant, dia:dia_ant},\n          dataType: 'json',\n          success: function(response) {\n            if(response.data!=null)\n            {\n              dia_1.closest(\"td\").addClass(\"ui-datepicker-unselectable\");\n              dia_1.closest(\"td a\").addClass(\"no_lectivo\");\n              setTimeout(function(){\n                contenedor.find(\"#div_leyenda\").prepend(\"<h4 id='\"+dia_1.text()+\"'>\"+dia_1.text()+\"</h4><h4 id='h4_descripcion'>Traslado del Festivo del día \"+dia_ant+\" de \"+MES[contenedor.find(\"tbody tr:first td:last\").attr(\"data-month\")-1]+\" </h4>\" );\n              }, 20);\n            }\n          }\n        })\n      }\n      setTimeout(function(){\n        // Se actualizan los title de los festivos que aún no tiene el atributo asignado.\n        contenedor.find(\"#div_leyenda h4[id!='h4_descripcion']\").each(function(){\n          dato=$(this).text();\n          if((contenedor.find(\".ui-datepicker-calendar td\").find(\"a\").filter(function(){return $(this).text()==dato;}).attr(\"title\")!=\"Vacaciones de Semana Santa\" && contenedor.find(\".ui-datepicker-calendar td\").find(\"a\").filter(function(){return $(this).text()==dato;}).attr(\"title\")!=\"Vacaciones de Navidad\") || (contenedor.find(\".ui-datepicker-calendar td\").find(\"a\").filter(function(){return $(this).text()==dato;}).attr(\"title\")==undefined) ){\n            contenedor.find(\".ui-datepicker-calendar td\").find(\"a\").filter(function(){return $(this).text()==dato;}).attr(\"title\",$(this).next(\"h4\").text());\n          }\n        }); \n        // Se unifica el título de las vacaciones.\n        contenedor.find(\".ui-datepicker-calendar td a[title^='Inicio de Vacaciones']\").each(function(){\n          $(this).attr(\"title\",$(this).attr(\"title\").replace(\"Inicio \",\"\"));\n        });\n        contenedor.find(\".ui-datepicker-calendar td a[title^='Fin de Vacaciones']\").each(function(){\n          $(this).attr(\"title\",$(this).attr(\"title\").replace(\"Fin \",\"\"));\n        });\n      }, 200); \n    }, 170);\n  });\n\n\n  $(document).on('click',\"#contenedor_reserva_equipamientos button\",function(event){ \n    contenedor= $(this).closest(\"div[id^='reserva_']\");\n\n    // Se marca el equipamiento seleccionado.\n    if(!$(this).hasClass(\"elected\")){\n      contenedor.find(\"#contenedor_reserva_equipamientos button\").removeClass(\"elected\"); \n      $(this).addClass(\"elected\");\n    }\n\n    // Se llama a la función de comprobar las horas de reserva cuando seleccionamos una instalación y un día.\n    if(contenedor.find(\"#contenedor_reserva tbody td a\").hasClass(\"ui-state-default ui-state-active\")){\n      HorasReserva(contenedor.find(\"#contenedor_reserva_horas\"));\n    }\n\n    // Se desactiva el botón de guardar al cambiar de día.\n    contenedor.find(\"#reserva_save\").prop(\"disabled\",true);\n  });\n\n  //Se simula el hacer click en el calendario, haciendo click en un input oculto que contiene el día deleccionado.\n  $(document).on('click',\"#dia_seleccionado\",function(e){\n    contenedor= $(this).closest(\"div[id^='reserva_']\");\n\n    if(contenedor.find(\"#contenedor_reserva_equipamientos button\").hasClass(\"elected\")){\n      HorasReserva(contenedor.find(\"#contenedor_reserva_horas\"));\n    }\n  });\n\n  //Se marca las horas de reserva seleccionada y se habilita el botón guardar si existe al menos una hora seleccionada.\n  $(document).on('click',\"#contenedor_reserva_horas button\",function(event){\n    contenedor= $(this).closest(\"div[id^='reserva_']\");\n\n    if($(this).hasClass(\"elected\")){\n      $(this).removeClass(\"elected\");\n    }\n    else{\n      $(this).addClass(\"elected\");\n    }\n\n    if(contenedor.find('#contenedor_reserva_horas .elected').length) {\n      contenedor.find(\"#reserva_save\").prop(\"disabled\",false);\n    }\n    else{\n      contenedor.find(\"#reserva_save\").prop(\"disabled\",true);\n    }\n  });\n\n\n  $(document).on('click',\"div[id^='reserva_'] #reserva_save\",function(event){ \n    // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n    $(\".ui-pnotify\").remove();\n\n    contenedor= $(this).closest(\"div[id^='reserva_']\");\n\n\n    if(contenedor.find(\".contenedor_reserva .elected\").size()>1 || contenedor.find(\"#contenedor_reserva .ui-state-active\").size()>1 ){\n\n      arr=contenedor.attr(\"id\").split(\"_\");\n      var texto=\"\";\n\n      if(contenedor.find(\".contenedor_reserva .elected\").size()>1){\n\n        arr=contenedor.attr(\"id\").split(\"_\");\n        if(arr[1]==\"instalaciones\"){\n          texto+=\"<span>Instalación<span>\";\n        }\n        else{\n          texto+=\"<span>Equipamiento<span>\";\n        }\n      }\n\n      if(contenedor.find(\"#contenedor_reserva .ui-state-active\").size()>1){\n        texto+=\"<span>Fecha de reserva<span>\";\n      }\n      errorPNotify.play();\n      new PNotify({\n        title: \"Las siguientes opciones no pueden tener valores multiples seleccionados:\",\n        text:texto,\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        width: \"335px\",\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: left_Stack,\n        animate_speed: \"fast\",\n        animate: {\n          animate: true,\n          in_class: \"fadeInLeft\",\n          out_class: \"fadeOutLeft\",\n        }\n      });\n      contenedor.find(\"#reserva_save\").prop(\"disabled\",true);\n      return false;\n    }\n\n    fecha=contenedor.find(\"#dia_seleccionado\").val();\n    if(fecha){\n      fecha= fecha.split(\"/\");\n      fecha= fecha[2]+\"-\"+fecha[1]+\"-\"+fecha[0]; \n    }\n\n    equipamiento=contenedor.find(\"#contenedor_reserva_equipamientos button[class='elected']\").text();\n\n    // Se obtiene las horas seleccionadas.\n    var objDatos= Array();\n    contenedor.find(\"div[id='contenedor_reserva_horas'] button[class='elected']\").each(function(){\n      objDatos.push($(this).attr(\"clase\"));\n    });\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('reserva_create'),\n      data:{objDatos:objDatos,equipamiento:equipamiento,fecha:fecha}, \n      dataType: 'json',\n      success: function(response) {\n        nombre_contenedor=contenedor.attr(\"id\");\n        array=nombre_contenedor.split(\"_\");\n        tipo=array[1];\n\n        contenedor.find(\"div[id='contenedor_reserva_equipamientos'] button[class='elected']\").trigger(\"click\");\n        // Se comrpueba si hay alguna opción sin marcar para mostrar la notificación de error.\n        if(response.error.length != 0){\n          var texto=\"\";\n          for (var key in response.error) {\n            texto+=\"<span>\"+response.error[key]+\"<span>\";\n          }\n          if(tipo==\"instalaciones\"){\n            texto=texto.replace(\"Equipamiento\", \"Instalación\");\n          }\n          errorPNotify.play();\n          new PNotify({\n            title: \"Debe seleccionar los siguientes datos para realizar la reserva:\",\n            text:texto,\n            addclass: \"custom\",\n            type: \"error\",\n            shadow: true,\n            hide: true,\n            width: \"335px\",\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: left_Stack,\n            animate_speed: \"fast\",\n            animate: {\n              animate: true,\n              in_class: \"fadeInLeft\",\n              out_class: \"fadeOutLeft\",\n            }\n          });\n          $(\"#reserva_equipamientos #reserva_save\").prop(\"disabled\",true);\n          return false;\n        }\n\n        if(response.message==\"festivo\"){\n          // Se indica que el día seleccionado es festivo.\n          texto=\"El día seleccionado <span>no es lectivo</span>, por lo que no se puede realizar la reserva.<br><br>\";\n          dia=contenedor.find(\"#contenedor_reserva a[class*='ui-state-active']\").text();\n          mes=contenedor.find(\"#contenedor_reserva span[class='ui-datepicker-month']\").text();\n          anyo=contenedor.find(\"#contenedor_reserva span[class='ui-datepicker-year']\").text();\n          texto+=\"<p>Día seleccionado: <span>\"+dia+\" de \"+mes+\" de \"+anyo+\"</span></p><br>\";\n          motivo=contenedor.find(\"#contenedor_reserva a[class*='ui-state-active']\").attr(\"title\");\n          texto+=\"<p>Motivo no lectivo:  <span>\"+motivo+\"</span></p>\";\n          \n          error.play();\n          swal({\n            title: \"Se ha producido un error en el sistema\",\n            html: texto,\n            type: \"error\",\n            confirmButtonColor: color,\n            closeOnConfirm: false\n          });\n          return false;\n        }\n        if(response.data.length != 0)\n        {\n          var texto= 'El equipamiento <span class=\"negrita\">'+equipamiento+'</span> no se puede reservar en los siguientes módulos de clase porque ya esta reservado:<br><br>';\n          for (var key in response.data) {\n            hora=contenedor.find(\"#contenedor_reserva_horas button[clase='\"+response.data[key]+\"']\").text(); \n            texto+=\"<h4>\"+hora+\"</h4>\";\n          }\n          error.play();\n          swal({\n            title: \"Se ha producido un error en el sistema al realizar la reserva\",\n            html: texto,\n            type: \"error\",\n            confirmButtonColor: color,\n            closeOnConfirm: false\n            }).then(function () {\n\n              if(response.message==1){\n                exito.play();\n                new PNotify({\n                  text:\"1 reserva efectuada.\",\n                  addclass: \"custom\",\n                  type: \"success\",\n                  shadow: true,\n                  hide: true,\n                  buttons: {\n                    sticker: false,\n                    labels:{close: \"Cerrar\"}\n                  },\n                  stack: right_Stack,\n                  animate: {\n                    animate: true,\n                    in_class: \"fadeInRight\",\n                    out_class: \"fadeOutRight\",\n                  }\n                });\n                // Se actualiza las pestañas de equipamientos o instalaciones\n                $(\"#consultar_\"+tipo).update_tab();\n                $(\"#reservar_\"+tipo).update_tab();\n              }\n              else if(response.message!=0){\n                titulo=response.message+ \" reservas efectuadas.\";\n                exito.play();\n\n                new PNotify({\n                  text:titulo,\n                  addclass: \"custom\",\n                  type: \"success\",\n                  shadow: true,\n                  hide: true,\n                  buttons: {\n                    sticker: false,\n                    labels:{close: \"Cerrar\"}\n                  },\n                  stack: right_Stack,\n                  animate: {\n                    animate: true,\n                    in_class: \"fadeInRight\",\n                    out_class: \"fadeOutRight\",\n                  }\n                });\n                // Se actualiza las pestañas de equipamientos o instalaciones\n                $(\"#consultar_\"+tipo).update_tab();\n                $(\"#reservar_\"+tipo).update_tab();\n              }\n              else{\n                errorPNotify.play();\n\n                new PNotify({\n                  text:'No se ha realizado ninguna reserva',\n                  addclass: \"custom\",\n                  type: \"error\",\n                  shadow: true,\n                  hide: true,\n                  buttons: {\n                    sticker: false,\n                    labels:{close: \"Cerrar\"}\n                  },\n                  stack: right_Stack,\n                  animate: {\n                    animate: true,\n                    in_class: \"fadeInRight\",\n                    out_class: \"fadeOutRight\",\n                  }\n                });\n              }\n            }, function (dismiss) {\n\n            }\n          );\n        }\n        else{\n          if(response.message==1){\n            exito.play();\n            new PNotify({\n              text:\"1 reserva efectuada.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n          else{\n            titulo=response.message+ \" reservas efectuadas.\";\n            exito.play();\n\n            new PNotify({\n              text:titulo,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n          // Se actualiza las pestañas de equipamientos o instalaciones\n          $(\"#consultar_\"+tipo).update_tab();\n          $(\"#reservar_\"+tipo).update_tab();\n        }\n      }\n    })\n  });\n  // Función para deshabilitar los botones de las horas reservadas.\n  function HorasReserva(contenedor) {\n    container=contenedor.closest(\"div[id^='reserva_']\");\n    \n    fecha=container.find(\"#dia_seleccionado\").val();\n    fecha= fecha.split(\"/\");\n    fecha= fecha[2]+\"-\"+fecha[1]+\"-\"+fecha[0];\n    equipamiento=container.find(\"#contenedor_reserva_equipamientos button[class='elected']\").text();\n\n    // Se comprueba si el usuario tiene reservas en el día indicado y se muestra.\n    // Se comprueba si quedan unidades de equipamiento o la instalación está libre para el día indicado.\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_reserva'),\n      data: {equipamiento:equipamiento, fecha:fecha},\n      dataType: 'json',\n      success: function(response) {\n        contenedor.find(\"button\").prop(\"disabled\",false);\n        contenedor.find(\"button\").removeClass();\n\n        if(response.data!=null)\n        {\n          for (var key in response.data) { \n            container.find(\"#contenedor_reserva_horas button[clase=\"+response.data[key][\"horaClase\"]+\"]\").prop(\"disabled\", true);\n            container.find(\"#contenedor_reserva_horas button[clase=\"+response.data[key][\"horaClase\"]+\"]\").addClass(\"reservado\");\n          }\n        }\n        if(response.data2!=null)\n        {\n          for (var key in response.data2) { \n            container.find(\"#contenedor_reserva_horas button[clase=\"+response.data2[key][\"horaClase\"]+\"]\").prop(\"disabled\", true);\n          }\n        }\n\n        // Se desactivan las horas de reserva del día actual inferiores a la hora actual.\n        var f = new Date();\n        if(String(f.getDate()).length==1){\n          if(String(f.getMonth()+1).length==1){\n            d=\"0\"+f.getDate()+\"/0\"+(f.getMonth()+1)+\"/\"+f.getFullYear();\n          }\n          else{\n            d=\"0\"+f.getDate()+\"/\"+(f.getMonth()+1)+\"/\"+f.getFullYear();\n          }\n        }\n        else{\n          if(String(f.getMonth()+1).length==1){\n            d=f.getDate()+\"/0\"+(f.getMonth()+1)+\"/\"+f.getFullYear();\n          }\n          else{\n            d=f.getDate()+\"/\"+(f.getMonth()+1)+\"/\"+f.getFullYear();\n          }\n        }\n\n        if(d==container.find(\"#dia_seleccionado\").val()){\n\n          container.find(\"#contenedor_reserva_horas button\").each(function(){\n            var dt = new Date();\n            var time = ('0'+dt.getHours()).slice(-2) + \":\" + ('0'+dt.getMinutes()).slice(-2);\n   \n            if($(this).attr(\"min\").replace(':', '') <= time.replace(':', '')){\n              $(this).prop(\"disabled\",true);\n            }\n          });\n        }\n      }\n    })\n  }\n\n  /////////////////////////////////////////////////////\n  //  Consulta reservas Instalaciones/Equipamientos  //\n  /////////////////////////////////////////////////////\n\n  // Función para comprobar si hay scroll vertical en la pantalla.\n  (function($) {\n    $.fn.hasScrollBar = function() {\n        return this.get(0).scrollHeight > this.height();\n    }\n  })(jQuery);\n  //Se utilizaba ésta variable para obtener el día de la semana pero lo cambiamos al número de día.\n  var dia_semana = [\"Domingo\",\"Lunes\",\"Martes\",\"Miércoles\",\"Jueves\",\"Viernes\",\"Sábado\"];\n  \n  // Se muestra la información del profesor al situar el ratón sobre una reserva de un profesor.\n  $(document).on(\"mouseenter\",\"div[id^='consulta_reservas'] .scrollContent tr[id!='centro']\", function () {\n    container= $(this).closest(\"div[id^='consulta_reservas']\");\n\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    container.find(\".contenido_info #sin_seleccionar\").addClass(\"oculto\");\n\n    hover=1;\n    tr=$(this);\n    //Se comprueba que no es una reserva del centro y que no es un aviso predeterminado.\n    if($(this).attr(\"id\")!=\"centro\" && !$(this).find(\"td\").hasClass(\"dataTables_empty\")){\n      container= $(this).closest(\"div[id^='consulta_reservas']\");\n\n      from=$(this).find(\"td:nth-child(3)\").attr(\"data-order\").split(\"/\");\n\n      fecha = new Date(from[2], from[0]-1 , from[1]);\n      //Se para el número de día de la semana.\n      dia_semanal=fecha.getDay();\n\n      hora_inicio=$(this).find(\"td:nth-child(4)\").attr(\"inicio\");\n      hora_fin=$(this).find(\"td:nth-child(4)\").attr(\"fin\");\n      ini=hora_inicio+\":00\";\n      fin=hora_fin+\":00\";\n\n      profesor=$(this).attr(\"id\");\n\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('datos_imparte'),\n        data: {dia_semanal:dia_semanal, ini:ini, fin:fin, profesor:profesor},\n        dataType: 'json',\n        success: function(response) {\n          container.find(\".contenido_info #seleccionado\").load(Routing.generate('datos_profesor', {id:tr.attr(\"id\")}), function(){\n            if(hover==1){\n              if(response.data){\n                container.find(\".contenido_info #grupo\").append(response.curso+\" \"+response.nivel+\" \"+response.grupo);\n                container.find(\".contenido_info #asignatura\").append(response.asignatura);\n              }\n              else{\n                container.find(\".contenido_info #grupo\").append(\"Sin asignar\");\n                container.find(\".contenido_info #asignatura\").append(\"Sin asignar\");\n              }\n              container.find(\".contenido_info #seleccionado\").removeClass(\"oculto\");\n              container.find(\".contenido_info #sin_seleccionar\").addClass(\"oculto\");\n            }\n          });\n        }\n      })\n    }\n    else{\n      container.find(\".contenido_info #seleccionado\").empty();\n      container.find(\".contenido_info #seleccionado\").addClass(\"oculto\");\n      container.find(\".contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }\n  });\n\n  // Se elimina la información mostrada del profesor al quitar el puntero.\n  $(document).on(\"mouseleave\",\"div[id^='consulta_reservas'] .scrollContent tr[id!='centro'] \", function () {\n    hover=0;\n    container= $(this).closest(\"div[id^='consulta_reservas']\");\n\n    container.find(\".contenido_info #seleccionado\").addClass(\"oculto\");\n    container.find(\".contenido_info #seleccionado\").empty();\n    container.find(\".contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n  // Efecto cambio de iconos de eliminar registros.\n  $(document).on(\"mouseenter\",\".scrollContent tr td #eliminar_0\", function () {\n      $(this).addClass(\"oculto\");\n      $(this).next(\"img\").removeClass(\"oculto\");\n  });\n\n  $(document).on(\"mouseleave\",\".scrollContent tr td #eliminar_1\", function () {\n      $(this).addClass(\"oculto\");\n      $(this).prev(\"img\").removeClass(\"oculto\");  \n  });\n\n  $(document).on(\"mouseleave\",\".scrollContent tr td:last-child\", function () {\n      $(this).find(\"#eliminar_1\").addClass(\"oculto\");\n      $(this).find(\"#eliminar_0\").removeClass(\"oculto\");\n  });\n\n  $(document).on(\"mouseleave\",\".scrollContent tr\", function () {\n      $(this).find(\"#eliminar_1\").addClass(\"oculto\");\n      $(this).find(\"#eliminar_0\").removeClass(\"oculto\");\n  });\n\n  //Eliminación de una reserva.\n  $(document).on(\"click\",\"div[id^='consulta_reservas'] .scrollContent tr #eliminar_1\", function(event){\n    event.preventDefault();\n    profesor=$(this).closest(\"tr\").attr(\"id\");\n    if(profesor==\"centro\"){\n      profesor=null;\n    }\n\n    equipamiento=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n\n    from=$(this).closest(\"tr\").find(\"td:nth-child(3)\").attr(\"data-order\").split(\"/\");\n    fecha= from[2]+\"-\"+from[0]+\"-\"+from[1];\n    fecha_aviso= from[1]+\"-\"+from[0]+\"-\"+from[2];   \n\n    hora_inicio=$(this).closest(\"tr\").find(\"td:nth-child(4)\").attr(\"inicio\");\n    hora_fin=$(this).closest(\"tr\").find(\"td:nth-child(4)\").attr(\"fin\");\n    ini=hora_inicio+\":00\";\n    fin=hora_fin+\":00\";\n\n    nombre_profesor=$(this).closest(\"tr\").find(\"td:nth-child(1)\").text();\n\n    aviso.play();\n    swal({\n      title: \"Eliminación de reserva\",\n      html: \"<table><p>Se va a eliminar la siguiente reserva: <br></p><thead><tr><th>Profesor</th><th>Equipamiento</th><th>Fecha</th><th>Módulo</th></tr></thead><tbody><tr><td>\"+nombre_profesor+\"</td><td>\"+equipamiento+\"</td><td>\"+fecha_aviso+\"</td><td>\"+hora_inicio+\" - \"+hora_fin+\"</td></tr></tbody></p></table><br><br>¿Estas seguro de continuar? No podrás deshacer este paso...<br>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"600px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('obtener_reserva'),\n          data: {profesor:profesor,equipamiento:equipamiento, ini:ini, fin:fin,fecha:fecha },\n          dataType: 'json',\n          success: function(response) {\n            numReserva=response.num;\n            \n            $.ajax({\n              type: 'DELETE',\n              url: Routing.generate(\"reserva_delete\", {id:numReserva}),\n              success: function() {\n                // Se actualiza las pestañas de consulta y reserva.   \n                if(response.tipo==\"Instalación\"){\n                  $(\"#consultar_instalaciones\").update_tab();\n                  $(\"#reservar_instalaciones\").update_tab();\n                }\n                else{\n                  $(\"#consultar_equipamientos\").update_tab();\n                  $(\"#reservar_equipamientos\").update_tab();\n                }\n                if(profesor!=null){\n                  alert(\"Se le menda un mensaje privado al profesor avisando de la eliminación de la reserva\");\n                }\n              }\n            })\n          }\n        })\n        return false;\n      }, function (dismiss) {\n\n      }\n    );\n    //Se detiene la propagación del evento para que no detecte hacer click en el elemento \"tr\" que lo contiene.\n    event.stopPropagation();   \n  });\n\n  ////////////////////////////////////////////\n  //    Registro Nº de Alumnos en Cursos    //\n  ////////////////////////////////////////////\n\n  // Se quita la marca del input modificado y se actualiza el ratio.\n  $(document).on('click',\"#contenedor_ratio_grupos button\",function(event){\n    tr=$(this).closest(\"tr\");\n    tr.find(\"input\").removeClass(\"modified\");\n    curso=tr.children('td').slice(0, 2).html();\n    nivel=tr.children('td').slice(1, 2).html();\n    ratio=tr.find(\"input\").val();\n    alumnos_asignados=tr.attr(\"ratio\");\n\n    if(parseInt(alumnos_asignados)>parseInt(ratio)){\n      /*\n      texto=\"<p class='justificado'>No se puede asignar la tutoría de este grupo al profesor seleccionado ya que no es el tutor del grupo.<br></p>\"\n      error.play();\n      swal({\n        title: \"Asignación no permitida\",\n        html: texto,\n        type: \"error\",\n        width: \"500px\",\n        confirmButtonColor: color,\n        showCancelButton: false\n      });\n*/\n      if($(\"#button_grupos_all\").hasClass('clicked')){\n        tr.find(\"td:nth-child(3) input\").addClass('modified');\n        tr.addClass('max');\n      }\n      else{\n        texto=\"<p class='justificado'>No se puede asignar el número de alumnos indicado en el curso <strong class='negrita'>\"+tr.find(\"td:first-child\").text()+\" de \"+tr.find(\"td:nth-child(2)\").text()+\"</strong>, ya que hay un mayor número de alumnos matriculados en alguno de los grupos del curso.<br></p>\"\n        error.play();\n        swal({\n          title: \"Asignación no permitida\",\n          html: texto,\n          type: \"error\",\n          width: \"500px\",\n          confirmButtonColor: color,\n          showCancelButton: false\n        });\n        tr.find(\"td:nth-child(3) input\").addClass('modified');\n      }\n\n    }\n    else{\n      // Se actualiza el atributo ratio de la entidad Curso.\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('asignar_ratio'),\n        data: {curso:curso,nivel:nivel,ratio:ratio},\n        success: function() {\n          // Se actualiza el nuevo valor inicial.\n          tr.find(\"input\").attr(\"value\",ratio);\n\n          // Se actualiza la pestaña asignar grupo.\n          $(\"#asignar_grupo\").update_tab();\n        }\n      })\n    }\n  });\n\n  // Se modifica el estilo de los input modificados.\n  $(document).on(\"change\",\"#contenedor_ratio_grupos input\", function () {\n    if($(this).val()!=$(this).attr(\"value\")){\n      $(this).addClass(\"modified\");\n    }\n    else{\n      $(this).removeClass(\"modified\");\n    }\n  });\n\n  // Se quita la marca de los input modificados y actualizan los ratios modificados.\n  $(document).on('click',\"#registro_ratio #button_grupos_all\",function(event){\n    //Se indica que se ha pulsado el botón de guardar todos para no mostrar los avisos de errores individuales.\n    $(this).addClass('clicked');\n    //Se elimina la clase \"max\" de cada curso por si se ha mostrado avisosde errores anteriores.\n    $(\"#contenedor_ratio_grupos tr\").removeClass('max');\n    //Se llama al evento principal para que guarde individualmente el ratio modificado.\n    $(\"#contenedor_ratio_grupos input[class='modified']\").each(function(){  \n      $(this).closest(\"tr\").find(\"button\").trigger(\"click\");\n    });\n\n    //Se muestra los avisos de error si hay.\n    if($(\"#contenedor_ratio_grupos tr[class='max']\").size()>1){\n      texto=\"<p class='justificado'>No se puede asignar el número de alumnos indicado en los siguientes cursos, ya que hay un mayor número de alumnos matriculados en alguno de los grupos del curso:<br><br></p>\";\n      $(\"#contenedor_ratio_grupos tr[class='max']\").each (function(){ \n        texto=texto+\"<p class='justificado negrita'>- \"+$(this).find(\"td:first-child\").text()+\" de \"+$(this).find(\"td:nth-child(2)\").text()+\"</p>\";\n      });\n      \n      error.play();\n      swal({\n        title: \"Asignación no permitida\",\n        html: texto,\n        type: \"error\",\n        width: \"500px\",\n        confirmButtonColor: color,\n        showCancelButton: false\n      });\n      tr.find(\"td:nth-child(3) input\").addClass('modified');\n      $(this).removeClass('clicked');\n    }\n    else if($(\"#contenedor_ratio_grupos tr[class='max']\").size()==1)\n    {\n      texto=\"<p class='justificado'>No se puede asignar el número de alumnos indicado en el curso <strong class='negrita'>\"+tr.find(\"td:first-child\").text()+\" de \"+tr.find(\"td:nth-child(2)\").text()+\"</strong>, ya que hay un mayor número de alumnos matriculados en alguno de los grupos del curso.<br></p>\";\n      \n      error.play();\n      swal({\n        title: \"Asignación no permitida\",\n        html: texto,\n        type: \"error\",\n        width: \"500px\",\n        confirmButtonColor: color,\n        showCancelButton: false\n      });\n      tr.find(\"td:nth-child(3) input\").addClass('modified');\n      $(this).removeClass('clicked');\n    }\n  });\n\n  // Se restablece los valorea iniciales\n  $(document).on(\"click\",\"#registro_ratio #button_grupos_rest\", function () {\n      $(\"#ratio_curso\").update_tab();\n  });\n  // Se eliminar el foco del elemento input al pulsar \"Enter\".\n  $(document).on(\"keydown\",'#registro_ratio input', function(e){\n    if(e.keyCode == 13)\n    {\n      $(this).blur();\n    }\n  });\n\n  ///////////////////////////////////////////\n  //    Matricula de Antiguos Alumnos      //\n  ////////////////////////////////// ////////\n\n  // Se muestra la información del alumno.\n  $(document).on(\"mouseenter\",\"#consulta_antiguo_alumno .scrollContent tr\", function () {\n\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #sin_seleccionar\").addClass(\"oculto\");\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").removeClass(\"oculto\");\n\n    \n    tr=$(this);\n    alumno=$(this).attr(\"id\");\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('datos_imparte'),\n      data: {alumno:alumno},\n      dataType: 'json',\n      success: function(response) {\n        tr.closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").load(Routing.generate('datos_alumno', {id:tr.attr(\"id\")}), function(){\n        });\n      }\n    })\n  });\n\n  // Se elimina la información mostrada del alumno al quitar el puntero.\n  $(document).on(\"mouseleave\",\"#consulta_antiguo_alumno .scrollContent tr\", function () {\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").addClass(\"oculto\");\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").empty();\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n\n  // Se evita que se pueda hacer click en los registros que muestran los avisos predeterminados.\n  $(document).on(\"mouseover\",\" .dataTable .scrollContent tr td\", function () {\n    if($(this).hasClass(\"dataTables_empty\")){\n      $(this).closest(\"tr\").addClass(\"no_cursor\");\n    }\n  });\n\n  // Se modifica el select de búsqueda de antiguo alumno.\n  $(document).on('change','#consulta_antiguo_alumno #lista_cursos select',function(event) {\n    event.preventDefault();\n    div=$(this).closest(\"div[class*='antiguo_alumno']\");\n    //Se reemplaza el nombre del select añadiendo también una separación antes del \"de\" para que funcione bien la búsqueda.\n    curso=$(this).find(\"option:selected\").text().replace(\" de\", \"\");\n\n    //Se elimina el contenido del buscador cuando se selecciona un curso para la búsqueda.\n    div.find(\"#buscador input\").val(\"\"); \n    div.find(\"#buscador input\").keyup(); \n\n    id=1;\n    //Se asigna el select correspondiente a la columna \"último curso\" según la tabla mostrada.\n    if($(this).parent().attr(\"class\")==\"lista_activos\"){\n      id=1;\n    }\n    else{\n      id=2;\n    }\n\n    valor=div.find(\"#lista_cursos select option:selected\").val();\n    // Se modifica el valor en las dos listas.\n    if($(\".lista_activos select option:selected\").val()!= $(\".lista_inactivos select option:selected\").val()){\n      $(\"#consulta_antiguo_alumno #lista_cursos select\").val(valor).change();\n    }\n    // Se selecciona el option del select oculto con z-index para filtrar el curso.\n    if(div.find(\"select[class='\"+id+\"'] option[value='\"+curso+\"']\").length){\n      div.find(\"#buscador input\").prop(\"disabled\",false);    \n      // Se selecciona y se muestra con change().\n      div.find(\"select[class='\"+id+\"']\").val(curso).change();\n    }\n    else if($(this).find(\"option:selected\").text()==\"Todos los cursos\"){\n      div.find(\"#buscador input\").prop(\"disabled\",false);\n      div.find(\"select[class='\"+id+\"']\").val(\"\").change();\n    }\n    else{\n      div.find(\"tbody\").empty();\n      div.find(\"tbody\").append(\"<tr class='odd no_cursor'><td class='dataTables_empty'>Actualmente no existe antiguos alumnos para el curso seleccionado</td></tr>\");\n      div.find(\"thead tr th\").removeClass(\"sorting_asc\");\n      div.find(\"#buscador input\").prop(\"disabled\",true);\n    }\n    //Se cambia los estilos según el scroll vertical.\n    if( div.find('table tbody').get(0).scrollHeight>div.find('table tbody').height()){\n        div.find(\"table thead tr>th:last-child\").attr('style', 'width: 10% !important');\n    }\n    else{\n        div.find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n  // Se muestra la información del alumno.(Forma General)\n  $(document).on(\"mouseenter\",\".busqueda_general .scrollContent tr\", function () {\n\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #sin_seleccionar\").addClass(\"oculto\");\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").removeClass(\"oculto\");\n\n    \n    tr=$(this);\n    alumno=$(this).attr(\"id\");\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('datos_imparte'),\n      data: {alumno:alumno},\n      dataType: 'json',\n      success: function(response) {\n        tr.closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").load(Routing.generate('datos_alumno', {id:tr.attr(\"id\")}), function(){\n        });\n      }\n    })\n  });\n\n  // Se elimina la información mostrada del alumno al quitar el puntero.(Forma General)\n  $(document).on(\"mouseleave\",\".busqueda_general .scrollContent tr\", function () {\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").addClass(\"oculto\");\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").empty();\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n\n  // Se modifica el select de búsqueda de las tablas de consultas. (Forma General)\n  $(document).on('change','.busqueda_general #lista_cursos select',function(event) {\n    div=$(this).closest(\".busqueda_general\");\n    //Se añade también una separación antes del \"de\" para que funcione bien la búsqueda.\n    curso=$(this).find(\"option:selected\").text().replace(\" de\", \"\");\n    valor=div.find(\"#lista_cursos select option:selected\").val();\n\n    //Se elimina el contenido del buscador cuando se selecciona un curso para la búsqueda.\n    div.find(\"#buscador input\").val(\"\"); \n    div.find(\"#buscador input\").keyup(); \n\n    //Se selecciona el option del select oculto con z-index para filtrar el curso.\n    if(div.find(\"select[class='1'] option[value='\"+curso+\"']\").length){\n      div.find(\"#buscador input\").prop(\"disabled\",false);\n      // Se selecciona y se muestra con change().\n      div.find(\"select[class='1']\").val(curso).change();\n    }\n    else if($(this).find(\"option:selected\").text()==\"Todos los cursos\"){\n      div.find(\"#buscador input\").prop(\"disabled\",false);\n      div.find(\"select[class='1']\").val(\"\").change();\n    }\n    else{\n      div.find(\"tbody\").empty();\n      div.find(\"tbody\").append(\"<tr class='odd no_cursor'><td class='dataTables_empty'>Actualmente no existe alumnos para el curso seleccionado</td></tr>\");\n      div.find(\"thead tr th\").removeClass(\"sorting_asc\");\n      div.find(\"#buscador input\").prop(\"disabled\",true);\n    }\n      //Se cambia los estilos según el scroll vertical.\n    if( div.find('table tbody').get(0).scrollHeight>div.find('table tbody').height()){\n      div.find(\"table thead tr>th:last-child\").attr('style', 'width: 10% !important');\n    }\n    else{\n      div.find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n  //Se abre el div con la información del antiguo alumno para actualizar y matricular.\n  $(document).on(\"click\",\"div[id^='antiguo_alumno'] td\", function(event){ \n    event.preventDefault();\n    \n    var div= $(this).closest(\"div[id^='tabs-']\");\n    //$(div).empty();\n    // Se añade un gif para la espera de la carga del contenido actualizado.\n    //$(div).html('<div class=\"ajaxload\"><img src=\"/Symfony/web/bundles/backend/images/loading.gif\"/></div>');\n\n    $(div).load(Routing.generate('alumno_old_edit', {id:$(this).closest(\"tr\").attr(\"id\")}));\n  });\n\n  // Se habilita/deshabilita el botón enviar selecionados del contenedor correspodiente.\n  $(document).on(\"change\",\".dataTable input:checkbox\", function(event){ \n    cont=$(this).closest(\".contenedor_registro\");\n    event.preventDefault();\n    valor=0;\n    cont.find(\"td input:checkbox\").each (function(){ \n      // Se comprueba si hay algún registro seleccionado\n      if( $(this).is(':checked') ) {\n        cont.find(\" #enviar_select button\").prop(\"disabled\", false);\n        valor=1;\n        return false;\n      }\n    });\n    if(!valor){\n      cont.find(\" #enviar_select button\").prop(\"disabled\", true);\n    }\n  });\n\n  //Se selecciona el checkbox del alumno si se da al input, y se registra la matrícula si se da al botón.\n  $(document).on(\"click\",\"#multiples_alumnos td\", function(event){ \n    event.preventDefault();\n    input=$(this).closest(\"tr\").find(\"td input\");\n\n    if($(event.target).is('input')){\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n        if(input.is(':checked') ){\n          input.prop(\"checked\",false);\n        }\n        else{\n          input.prop(\"checked\",true);\n        }\n        // Se habilita/deshabilita el botón enviar selecionados.\n        if( $(\"#multiples_alumnos td input\").is(':checked') ) {\n          $(\"#multiples_alumnos #enviar_select button\").prop(\"disabled\", false);\n        } \n        else {\n          $(\"#multiples_alumnos #enviar_select button\").prop(\"disabled\", true);\n        }\n      }, 20);\n    }\n    ///// Se envía la información para matricular al alumno. //////\n    else if($(event.target).is('button')){\n      id=$(this).closest(\"tr\").attr(\"id\");\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('multiple_alumno_update', {id}),\n        dataType: 'json',\n      \n        success: function(response) {\n\n          if(response.validate){\n\n            if(response.validate==\"curso_incorrecto\"){\n              titulo=\"Matrícula cancelada\";              \n              texto= '<span>'+response.nombre+'</span> ya tiene superado el curso';\n            }\n            else if(response.validate==\"año_incorrecto\"){\n              titulo=\"Matrícula cancelada\";              \n              texto= '<span>'+response.nombre+'</span> ya tiene una matrícula registrada en el Año Académico.';\n            }\n            else{\n              titulo=\"Matrícula cancelada\";              \n              texto= 'No hay plazas vacantes en el curso <span>'+response.curso+'</span> para el alumno <span>'+response.nombre+'</span>.';\n            }\n            error.play();\n            new PNotify({\n              title:titulo,\n              text:texto,\n              addclass: \"custom\",\n              type: \"error\",\n              shadow: true,\n              hide: true,\n              buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            return false;\n          }\n          // Se registra la matrícula una vez validado los datos.\n          alumno=response.data;\n          $.ajax({\n            type: 'POST',\n            url: Routing.generate('matricular_alumno'),\n            data: {alumno:alumno},\n            dataType: 'json',\n            success: function(response) {\n\n            //Se muestra aviso si se pulsa en enviar uno solo (input no checked)\n            if(!input.is(':checked') ){\n              exito.play();\n\n              new PNotify({\n                text:\"Matrícula registrada.\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              }); \n            }\n              // Actualización de pestañas.\n              $(\"#alumnos_antiguo\").update_tab();\n              //Se actualiza la pestaña de asignar grupos si está abierta y tiene seleccionado el curso actualizado.\n              if($(\"#asignar_grupos #lista_cursos select option:selected\").attr(\"value\")==response.curso){\n                $(\"#asignar_grupo\").update_tab();   \n              }\n              $(\"#anular_matricula\").update_tab();\n              $(\"#asignar_optativa\").update_tab();\n              $(\"#ficha_alumno\").update_tab();\n\n\n              div=input.closest(\"div[id^='tabs-']\");\n              $(div).load(Routing.generate('search_multiple'));\n            }\n          })\n        } \n      })\n    }\n    else{\n      if(input.is(':checked') ){\n        input.prop(\"checked\",false);\n      }\n      else{\n        input.prop(\"checked\",true);\n      }\n              // Se habilita/deshabilita el botón enviar selecionados.\n        valor=0;\n        $(\"#multiples_alumnos td input:checkbox\").each (function(){ \n          // Se comprueba si hay algún registro seleccionado\n          if( $(this).is(':checked') ) {\n            $(\"#multiples_alumnos #enviar_select button\").prop(\"disabled\", false);\n            valor=1;\n            return false;\n          }\n        });\n        if(!valor){\n          $(\"#multiples_alumnos #enviar_select button\").prop(\"disabled\", true);\n        }\n    }\n           \n  });\n\n  // Se matricula los alumnos seleccionados.\n  $(document).on(\"click\",\"#multiples_alumnos #enviar_select button\", function(event){ \n\n    // Se añade un gif para la espera de la carga del contenido actualizado.\n    $(\"#multiples_alumnos #loading\").html('<div class=\"ajaxload\"><img src=\"/Symfony/web/bundles/backend/images/loading.gif\"/></div>');\n\n    num_matriculas_inicial=0;\n    contador=0;\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('num_matriculas'),\n      data: {},\n      dataType: 'json',\n      success: function(response) {\n        // Se actualiza la lista de antiguos alumnos.\n        num_matriculas_inicial=response.matriculas;\n      }\n    })\n\n    $(\"#multiples_alumnos table tbody input:checkbox:checked\").each(function() {\n        $(this).closest(\"tr\").find(\"button\").trigger('click');\n        contador++;\n    });\n\n    setTimeout(function(){\n      //Se quita el incono de loading.\n      $(\"#multiples_alumnos #loading\").empty();\n      num_matriculas=0;\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('num_matriculas'),\n        data: {},\n        dataType: 'json',\n        success: function(response) {\n          // Se actualiza la lista de antiguos alumnos.\n          num_matriculas=response.matriculas;\n          matriculas_registradas= parseInt(num_matriculas) - parseInt(num_matriculas_inicial);\n          if(matriculas_registradas){\n            exito.play();\n            if(contador>1){\n              texto=matriculas_registradas+\" / \"+contador+\" matrículas registradas.\";\n            }\n            else if(contador==1 && matriculas_registradas==1 ){\n              texto=\"Matrícula registrada.\";\n            }\n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            }); \n          }\n          else{\n            errorPNotify.play();\n\n             new PNotify({\n              text:'No se ha registrado ninguna matrícula',\n              addclass: \"custom\",\n              type: \"error\",\n              shadow: true,\n              hide: true,\n              buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n        }\n      })\n    }, 1000);\n  });\n\n  // Se restablece el valor inicial del formulario del antiguo alumno.\n  $(document).on(\"click\",\"#antiguo_alumno_rest\", function(event){ \n    event.preventDefault();\n    alum=$(this).closest(\"form\").attr(\"alum\");\n    \n    var div= $(this).closest(\"div[id^='tabs-']\");\n\n    $(div).load(Routing.generate('alumno_old_edit', {id:alum}));\n  });\n\n  // Se vuelve a la lista de Antiguos Alumnos Activos.\n  $(document).on('click',\"#antiguo_alumno_buscar\", function(event){\n    event.preventDefault();\n    // Se cierra las notificaciones.\n    PNotify.removeAll();\n\n    div=$(this).closest(\"div[id^='tabs-']\");\n    $(div).load(Routing.generate('search_old'));\n  });\n\n  //Se guarda el formulario antiguo alumno editado con los nuevos datos de matriculación.\n  $(document).on(\"submit\",\"#antiguo_alumno_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    //Se comprueba si la lista de curso tiene un valor seleccionado.\n    if( $(\"#antiguo_alumno_edit #lista_cursos\").length>0 && $(\"#antiguo_alumno_edit #lista_cursos select\").val()==null){\n      $(\"#antiguo_alumno_edit #lista_cursos select\").attr(\"validated\",false);\n      $(\"#antiguo_alumno_edit #lista_cursos select\").addClass(\"invalid\");\n      $(\"#antiguo_alumno_edit #lista_cursos select\").after(\"<span class='mensaje' style='display: none;'>Debe seleccionar un curso</span>\");\n      val=1;\n    }\n    else{\n      $(\"#antiguo_alumno_edit #lista_cursos select\").attr(\"validated\",true);\n    }\n\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    form.find(\":input[type!='file']\").each(function(){\n      //Si no tiene segundo responsable se asigna true al valor de validated para que sean aceptados en la validación.\n      if( $(this).closest(\"div[id='responsable']\").hasClass(\"oculto\")){\n        $(this).attr(\"validated\",true);\n      }\n      if(!$(this).attr(\"validated\") || $(this).attr(\"validated\")==false){\n        if($(this).attr(\"validation\")){\n          validation($(this));\n        }\n      }\n    });\n\n    //\":input\"añade a los input radio,select...\n    form.find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    var estado= \"\";\n\n    if(!form.find(\"#actual\").hasClass(\"oculto\")){\n      estado= \"actual\";\n    }\n    else if(!form.find(\"#actualizada\").hasClass(\"oculto\")){\n      estado= \"actualizado\";\n    }\n    else{\n      estado= \"eliminado\";\n    }\n    \n    // Se asigna el valor del curso a matricular.\n    if(form.find(\"#c_old_student_active\").length){\n      var curso=form.find(\"#c_old_student_active input\").attr(\"id\");\n    }\n    else{\n      var curso=form.find(\"#lista_cursos select\").val();\n    }\n    \n    var formdata=new FormData($(this)[0]);\n    formdata.append('estado', estado);\n    formdata.append('curso', curso);\n\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: $(this).attr('action'),\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function(response) {\n\n          if(response.validate){\n            if(response.validate==\"curso_incorrecto\"){\n              titulo=\"Matrícula cancelada\";              \n              texto= '<span class=\"negrita\">'+response.nombre+'</span> ya tiene superado este curso.';\n            }\n            else if(response.validate==\"año_incorrecto\"){\n              titulo=\"Matrícula cancelada\";              \n              texto= '<span class=\"negrita\">'+response.nombre+'</span> ya tiene una matrícula registrada en el Año Académico actual.';\n            }\n            else{\n              titulo=\"Matrícula cancelada\";              \n              texto= 'No hay plazas vacantes en el curso <span>'+response.curso+'</span> para el alumno <span>'+response.nombre+'</span>.';\n            }\n            error.play();\n            swal({\n              title: titulo,\n              html: texto,\n              type: \"error\",\n              width: \"500px\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n              return false;\n          }\n          \n          // Se registra la matrícula una vez validado los datos.\n          alumno=response.data;\n          $.ajax({\n            type: 'POST',\n            url: Routing.generate('matricular_alumno'),\n            data: {alumno:alumno},\n            dataType: 'json',\n            success: function(response) {\n\n              // Se actualiza la lista de multiples alumnos.\n              $(\"#alumnos_multiple\").update_tab();\n\n              div=form.closest(\"div[id^='tabs-']\");\n              $(div).load(Routing.generate('search_old'), function(responseTxt, statusTxt, xhr){\n                if(statusTxt == \"success\"){\n                  // Notificación de confirmación\n                  exito.play();\n              \n                  new PNotify({\n                    text:\"Alumno Matriculado\",\n                    addclass: \"custom\",\n                    type: \"success\",\n                    shadow: true,\n                    hide: true,\n                    buttons: {\n                    sticker: false,\n                    labels:{close: \"Cerrar\"}\n                    },\n                    stack: right_Stack,\n                    animate: {\n                      animate: true,\n                      in_class: \"fadeInRight\",\n                      out_class: \"fadeOutRight\",\n                    }\n                  });\n\n                  // Actualización de pestañas.\n                  $(\"#alumnos_antiguo\").update_tab();\n                  //Se actualiza la pestaña de asignar grupos si está abierta y tiene seleccionado el curso actualizado.\n                  if($(\"#asignar_grupos #lista_cursos select option:selected\").attr(\"value\")==response.curso){\n                    $(\"#asignar_grupo\").update_tab();   \n                  }\n                  $(\"#anular_matricula\").update_tab();\n                  $(\"#asignar_optativa\").update_tab();\n                  $(\"#ficha_alumno\").update_tab();\n                }\n\n                if(statusTxt == \"error\")\n                  alert(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n              });\n            }\n          })\n        } \n      })\n    }\n  });\n\n  $(document).on('change',\"#antiguo_alumno_edit #lista_cursos select\",function(event){\n    event.preventDefault();\n    if($(this).val()!=\"\"){\n      $(this).removeClass(\"invalid\");\n      $(this).next().remove();\n      $(\"#antiguo_alumno_edit #lista_cursos select\").attr(\"validated\",true);\n    }\n    else{\n      $(\"#antiguo_alumno_edit #lista_cursos select\").attr(\"validated\",false);\n      $(\"#antiguo_alumno_edit #lista_cursos select\").addClass(\"invalid\");\n      $(\"#antiguo_alumno_edit #lista_cursos select\").after(\"<span class='mensaje' style='display: none;'>Debe seleccionar un curso</span>\");\n    }\n    comprobarSelect($(\"#antiguo_alumno_edit\"));\n  });\n\n  $(document).on('blur',\"#antiguo_alumno_edit #lista_cursos select\",function(event){\n    event.preventDefault();\n    if($(this).val()!=\"\"){\n      $(this).removeClass(\"invalid\");\n      $(this).next().remove();\n      $(\"#antiguo_alumno_edit #lista_cursos select\").attr(\"validated\",true);\n    }\n    else{\n      $(\"#antiguo_alumno_edit #lista_cursos select\").attr(\"validated\",false);\n      $(\"#antiguo_alumno_edit #lista_cursos select\").addClass(\"invalid\");\n      $(\"#antiguo_alumno_edit #lista_cursos select\").after(\"<span class='mensaje' style='display: none;'>Debe seleccionar un curso</span>\");\n    }\n  });\n  // Se muestra la lista de antiguos alumnos activos.\n  $(document).on('click',\"#consulta_antiguo_alumno #btn_activos\",function(event){\n    $(\"#antiguo_alumno\").addClass(\"oculto\");\n    $(\"#antiguo_alumno_activo\").removeClass(\"oculto\");\n\n    //Se cambia los estilos según el scroll vertical.\n    if( $(\"#antiguo_alumno_activo\").find('table tbody').get(0).scrollHeight>$(\"#antiguo_alumno_activo\").find('table tbody').height()){\n        $(\"#antiguo_alumno_activo\").find(\"table thead tr>th:last-child\").attr('style', 'width: 10.5% !important');\n    }\n    else{\n        $(\"#antiguo_alumno_activo\").find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n  // Se muestra la lista de antiguos alumnos inactivos.\n  $(document).on('click',\"#consulta_antiguo_alumno #btn_inactivos\",function(event){\n    $(\"#antiguo_alumno_activo\").addClass(\"oculto\");\n    $(\"#antiguo_alumno\").removeClass(\"oculto\");\n\n    //Se cambia los estilos según el scroll vertical.\n    if( $(\"#antiguo_alumno\").find('table tbody').get(0).scrollHeight>$(\"#antiguo_alumno\").find('table tbody').height()){\n        $(\"#antiguo_alumno\").find(\"table thead tr>th:last-child\").attr('style', 'width: 10% !important');\n    }\n    else{\n        $(\"#antiguo_alumno\").find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n  // Marcar o desmarcar todos los registros de alumnos mostrados en la lista.\n  $(document).on('click',\"#checkbox-all\",function(event){\n    if($(\"#checkbox-all\").is(':checked') ){\n      $(this).closest(\"table\").find(\"tbody td input\").each (function(){ \n          $(this).prop(\"checked\",true);\n      });\n    }\n    else{\n      $(this).closest(\"table\").find(\"tbody td input\").each (function(){ \n          $(this).prop(\"checked\",false);\n      });\n    }\n  });\n\n  ///////////////////////////////////////////\n  //            Anular Matrícula           //\n  ///////////////////////////////////////////\n\n  // Se modifica el número de matrículas registradas en la tabla de anular matrículas.\n  $(document).on(\"change\",\"#anular_matricula #lista_cursos select\", function(event){\n    event.preventDefault();\n    if($(\"#anular_matricula #lista_cursos select\").val()==0){\n      $(\"#anular_matricula #texto\").empty();\n      $(\"#anular_matricula #texto\").append('<p>Total de Matrículas</p>');\n      $(\"#anular_matricula #num_matriculas p\").text($(\"#anular_matricula #matriculas tbody tr\").size());\n    }\n    else{\n      texto=$(\"#anular_matricula #lista_cursos select option[value='\"+$(\"#anular_matricula #lista_cursos select\").val()+\"']\").text();\n      $(\"#anular_matricula #texto\").empty();\n      $(\"#anular_matricula #texto\").append('<p>Matrículas de</p><p class=\"bold\">'+texto+'</p>');\n      $(\"#anular_matricula #num_matriculas p\").text($(\"#anular_matricula #matriculas tbody tr:not(.no_cursor)\").size());\n    }\n  });\n  \n  // Se elimina la matrícula seleccionada.\n  $(document).on(\"click\",\"#anular_matricula td\", function(event){\n    event.preventDefault();\n    id=$(this).closest(\"tr\").attr(\"id\");\n    curso=$(this).closest(\"tr\").find(\"td:nth-child(2)\").attr(\"id\");\n\n    aviso.play();\n    swal({\n      title: \"Anulación de Matrícula\",\n      html: \"<table><p>Se va a eliminar la siguiente matrícula, ¿Estas seguro de continuar? <br></p><thead><tr><th>Alumno</th><th>Curso Matriculado</th><th>Año Académico</th></tr></thead><tbody><tr><td>\"+$(this).closest(\"tr\").find(\"td:nth-child(1)\").text()+\"</td><td>\"+$(this).closest(\"tr\").find(\"td:nth-child(2)\").text()+\"</td><td>\"+$(this).closest(\"tr\").find(\"td:nth-child(3)\").text()+\"</td></tr></tbody><br></p></table>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"600px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('anular_matricula'),\n          data: {id:id},\n          dataType: 'json',\n          success: function(response) {\n\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:\"Matrícula Anulada.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            //Actualización de pestañas.\n            $(\"#anular_matricula\").update_tab();\n            $(\"#alumnos_antiguo\").update_tab();\n            $(\"#asignar_optativa\").update_tab();\n            $(\"#ficha_alumno\").update_tab();\n            $(\"#alumnos_multiple\").update_tab();\n\n            //Se actualiza la pestaña de asignar grupos si está abierta y tiene seleccionado el curso actualizado.\n            if($(\"#asignar_grupos #lista_cursos select option:selected\").attr(\"value\")==curso){\n              $(\"#asignar_grupo\").update_tab();   \n            }\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  ///////////////////////////////////////////\n  //           Antiguos profesores         //\n  ///////////////////////////////////////////\n\n  $(document).on('click',\"#consulta_antiguo_profesor #old_teacher tbody td\",function(event){\n    event.preventDefault();\n    input=$(this).closest(\"tr\").find(\"td:last-child input\");\n    //Se desactiva seleccionar cuando hay selección en la otra tabla.\n    if(input.is(\":disabled\")){\n      return false;\n    }\n\n    if(!$(event.target).is('input')){\n\n      if(input.is(':checked') ){\n        input.prop(\"checked\",false);\n      }\n      else{\n        input.prop(\"checked\",true);\n      }\n    }\n    else{\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n        if(input.is(':checked') ){\n          input.prop(\"checked\",false);\n        }\n        else{\n          input.prop(\"checked\",true);\n        }\n      }, 5);\n    }\n    // Se habilita/deshabilita el botón enviar selecionados.\n    if( $(\"#consulta_antiguo_profesor #old_teacher td input\").is(':checked') ) {\n      $(\"#consulta_antiguo_profesor #baja\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor .baja_active\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor #alta\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor .alta_limpiar\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor #old_teacher_no_active tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",true);\n      });\n    } \n    else {\n      $(\"#consulta_antiguo_profesor #baja\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor .baja_disable\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor #alta\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor .alta_disable\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor #old_teacher_no_active tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",false);\n      });\n    }\n  });\n\n\n  $(document).on('click',\"#consulta_antiguo_profesor #old_teacher_no_active tbody td\",function(event){\n    event.preventDefault();\n    input=$(this).closest(\"tr\").find(\"td:first-child input\");\n    \n    //Se desactiva seleccionar cuando hay selección en la otra tabla.\n    if(input.is(\":disabled\")){\n      return false;\n    }\n\n    if(!$(event.target).is('input')){\n\n      if(input.is(':checked') ){\n        input.prop(\"checked\",false);\n      }\n      else{\n        input.prop(\"checked\",true);\n      }\n    }\n    else{\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n        if(input.is(':checked') ){\n          input.prop(\"checked\",false);\n        }\n        else{\n          input.prop(\"checked\",true);\n        }\n      }, 5);\n    }\n    // Se habilita/deshabilita el botón enviar selecionados.\n    if( $(\"#consulta_antiguo_profesor #old_teacher_no_active td input\").is(':checked') ) {\n          $(\"#consulta_antiguo_profesor #alta\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_profesor .alta_active\").removeClass(\"oculto\");\n          $(\"#consulta_antiguo_profesor #baja\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_profesor .baja_limpiar\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor #old_teacher tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",true);\n      });\n    } \n    else {\n          $(\"#consulta_antiguo_profesor #alta\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_profesor .alta_disable\").removeClass(\"oculto\");\n          $(\"#consulta_antiguo_profesor #baja\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_profesor .baja_disable\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor #old_teacher tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",false);\n      });\n    }\n  });\n  //Se limpia la selección al pulsar el botón correspondiente.\n  $(document).on(\"click\",\"#consulta_antiguo_profesor .baja_limpiar button\", function () {\n    $(\"#consulta_antiguo_profesor #old_teacher_no_active tbody td input:checked\").each (function(){ \n       //Se realiza el evento en el td ya que en input haría click dos veces.\n       $(this).closest(\"td\").click();\n    });\n  });\n\n  $(document).on(\"click\",\"#consulta_antiguo_profesor .alta_limpiar button\", function () {\n    $(\"#consulta_antiguo_profesor #old_teacher tbody td input:checked\").each (function(){ \n      $(this).closest(\"td\").click();\n    });\n  });\n\n  //Se muestra la info del profesor al colocar el cursor.\n  $(document).on(\"mouseenter\",\"#consulta_antiguo_profesor .scrollContent tr\", function(){\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(\"#consulta_antiguo_profesor .contenido_info #sin_seleccionar\").addClass(\"oculto\");\n\n    //Se comprueba que no es un aviso predeterminado.\n    if(!$(this).find(\"td\").hasClass(\"dataTables_empty\")){\n\n      $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").load(Routing.generate('datos_antiguo_profesor', {id:$(this).attr(\"id\")}), function(){\n        $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").removeClass(\"oculto\");\n        $(\"#consulta_antiguo_profesor .contenido_info #sin_seleccionar\").addClass(\"oculto\");     \n      });\n    }\n    else{\n      $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").empty();\n      $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }\n  });\n\n  // Se elimina la información mostrada del profesor al quitar el puntero.\n  $(document).on(\"mouseleave\",\"#consulta_antiguo_profesor .scrollContent tr\", function () {\n    $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").addClass(\"oculto\");\n    $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").empty();\n    $(\"#consulta_antiguo_profesor .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n  // Se elimina la información con retraso al salir de la tabla por si aún se estan cargando datos anteriores.\n  $(document).on(\"mouseleave\",\"#old_teacher\", function () {\n    setTimeout(function() {\n      $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_profesor .contenido_info #seleccionado\").empty();\n      $(\"#consulta_antiguo_profesor .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }, 300);\n  });\n\n  //Se realiza la nueva alta del profesor.\n  $(document).on(\"click\",\"#consulta_antiguo_profesor .alta_active button\", function(event) {\n    event.preventDefault();\n    var array= Array(); \n    $(\"#consulta_antiguo_profesor #old_teacher_no_active tbody td input:checked\").each (function(){ \n      //alert($(this).closest(\"tr\").find(\"#nivel\").text());\n      array.push($(this).closest(\"tr\").attr(\"id\"));\n    });\n\n    if(array.length==1){\n      nombre=\"\";\n      nivel=\"\";\n    $(\"#consulta_antiguo_profesor #old_teacher_no_active tbody td input:checked\").each (function(){ \n      nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n      nivel=$(this).closest(\"tr\").find(\"#nivel\").text();\n    });\n\n      //titulo=\"<table><p>Se va a registrar el alta del antiguo profesor X, ¿Estas seguro de continuar? <br></p><thead><tr><th>Evento</th><th>Fecha</th><th>Hora</th></tr></thead><tbody><tr><td>\"+titulo+\"</td><td>\"+fecha+\"</td><td>\"+hora+\"</td></tr></tbody><br></p></table>\",\n      titulo=\"<table><p>Se va a registrar el alta del antiguo profesor:<br></p><thead><tr><th>Nombre</th><th>Nivel</th></tr></thead><tbody><tr><td>\"+nombre+\"</td><td>\"+nivel+\"</td></tr></tbody><br></p></table><br>¿Estas seguro de continuar?\";\n    }\n    else{\n      titulo=\"<table ><p>Se va a registrar el alta de los antiguos profesores:<br></p><thead><tr><th>Nombre</th><th>Nivel</th></tr></thead><tbody>\";\n      $(\"#consulta_antiguo_profesor #old_teacher_no_active tbody td input:checked\").each (function(){ \n        nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n        nivel=$(this).closest(\"tr\").find(\"#nivel\").text();\n        titulo+=\"<tr><td>\"+nombre+\"</td><td>\"+nivel+\"</td></tr>\";\n       });\n      titulo+=\"</tbody><br></p></table><br>¿Estas seguro de continuar?\";\n    }\n\n    aviso.play();\n    swal({\n      title: \"Alta de Profesores\",\n      html: titulo,\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"500px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('alta_profesor'),\n          data: {array:array},\n          dataType: 'json',\n          success: function(response) {\n            if(array.length==1){\n              texto=\"Alta registrada.\";\n            }else{\n              texto=array.length+\" altas registradas.\";\n            }\n\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n\n            // Se actualiza todas las pestañas con tablas de profesores.\n            $(\"#profesor_antiguo\").update_tab();\n            $(\"#ficha_profesor\").update_tab();\n            $(\"#consultar_equipamientos\").update_tab();\n            $(\"#consultar_instalaciones\").update_tab();\n            $(\"#tutor_grupo\").update_tab();\n            $(\"#profesor_asignar_grupo\").update_tab();\n            $(\"#clases_impartidas\").update_tab();\n            $(\"#equipo_directivo\").update_tab();\n            $(\"#clases_impartidas\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se realiza la baja del profesor.\n  $(document).on(\"click\",\"#consulta_antiguo_profesor .baja_active button\", function(event)  {\n    event.preventDefault();\n    var array= Array(); \n    $(\"#consulta_antiguo_profesor #old_teacher tbody td input:checked\").each (function(){ \n      //alert($(this).closest(\"tr\").find(\"#nivel\").text());\n      array.push($(this).closest(\"tr\").attr(\"id\"));\n    });\n\n    if(array.length==1){\n      nombre=\"\";\n      nivel=\"\";\n    $(\"#consulta_antiguo_profesor #old_teacher tbody td input:checked\").each (function(){ \n      nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n      nivel=$(this).closest(\"tr\").find(\"#nivel\").text();\n    });\n\n      //titulo=\"<table><p>Se va a registrar el alta del antiguo profesor X, ¿Estas seguro de continuar? <br></p><thead><tr><th>Evento</th><th>Fecha</th><th>Hora</th></tr></thead><tbody><tr><td>\"+titulo+\"</td><td>\"+fecha+\"</td><td>\"+hora+\"</td></tr></tbody><br></p></table>\",\n      titulo=\"<table><p>Se va a registrar la baja del siguiente profesor:<br></p><thead><tr><th>Nombre</th><th>Nivel</th></tr></thead><tbody><tr><td>\"+nombre+\"</td><td>\"+nivel+\"</td></tr></tbody><br></table><br><br><span>AVISO:</span><span> Si el profesor está asignado a un grupo o es tutor, se eliminará automáticamente esa asignación y no se podrá recuperar.</span><br><br>¿Estas seguro de continuar?\";\n    }\n    else{\n      titulo=\"<table><p>Se va a registrar la baja de los siguientes profesores:<br></p><thead><tr><th>Nombre</th><th>Nivel</th></tr></thead><tbody>\";\n      $(\"#consulta_antiguo_profesor #old_teacher tbody td input:checked\").each (function(){ \n        nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n        nivel=$(this).closest(\"tr\").find(\"#nivel\").text();\n        titulo+=\"<tr><td>\"+nombre+\"</td><td>\"+nivel+\"</td></tr>\";\n       });\n      titulo+=\"</tbody><br></p></table><br><br><p class='justificado'>AVISO: Si algún profesor está asignado a un grupo o es tutor, se eliminará automáticamente esa asignación y no se podrá recuperar.</p><br>¿Estas seguro de continuar?\";\n    }\n\n    aviso.play();\n    swal({\n      title: \"Baja de Profesores\",\n      html: titulo,\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"500px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('baja_profesor'),\n          data: {array:array},\n          dataType: 'json',\n          success: function(response) {\n            if(array.length==1){\n              texto=\"Baja registrada.\";\n            }else{\n              texto=array.length+\" bajas registradas.\";\n            }\n\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n\n            // Se actualiza todas las pestañas con tablas de profesores.\n            $(\"#profesor_antiguo\").update_tab();\n            $(\"#ficha_profesor\").update_tab();\n            $(\"#consultar_equipamientos\").update_tab();\n            $(\"#consultar_instalaciones\").update_tab();\n            $(\"#tutor_grupo\").update_tab();\n            $(\"#profesor_asignar_grupo\").update_tab();\n            $(\"#clases_impartidas\").update_tab();\n            $(\"#equipo_directivo\").update_tab();\n            $(\"#clases_impartidas\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  ///////////////////////////////////////////\n  //            Asignar Grupos             //\n  ///////////////////////////////////////////\n\n  $(document).on('change',\"#asignar_grupos #lista_cursos select\",function(event){\n    event.preventDefault();\n    div= $(this).closest(\"div[id^='tabs']\");\n    curso=$(this).find(\"option:selected\").val();\n     // Se añade un gif para la espera de la carga del contenido actualizado.\n    $(\"#asignar_grupos #loading\").html('<div class=\"ajaxload\"><img src=\"/Symfony/web/bundles/backend/images/loading.gif\"/></div>');\n    div.load(Routing.generate('curso_asignar_grupo', {curso:curso}), function(){\n      //Se muestra el select cuando se devuelve un alumno nuevo al contenedor inicial. \n      if($(\"#asignar_grupos #contenedor_cursos li\").size()>0){\n        $(\"#asignar_grupos #btn_generar button\").prop(\"disabled\",false);\n      }\n      else{\n        $(\"#asignar_grupos #btn_generar button\").prop(\"disabled\",true);\n      } \n    });\n\n  });\n\n  //Se restablece la listas del curso seleccionado.\n  $(document).on('click',\"#asignar_grupos #button_grupos_rest\",function(event){\n      $(\"#asignar_grupos #lista_cursos select option:selected\").change();\n  });\n\n\n  //Se actualiza el grupo a todos los alumnos del curso seleccionado.\n  $(document).on('click',\"#asignar_grupos #button_grupos_all\",function(event){\n    event.preventDefault();\n    div= $(this).closest(\"div[id^='tabs']\");\n    var asignaciones = new Object();\n    var index = 1;\n    $(\"#asignar_grupos #contenedor_asignar_grupos\").each(function(){ \n      letra=$(this).find(\"ol\").attr(\"id\").replace(\"grupo_\",\"\");\n      orden=1;\n      $(this).find(\"ol li\").each(function(){ \n          alumno=$(this).attr(\"id\").replace(\"curso-\",\"\");\n          \n          asignaciones[index++]=[alumno, orden, letra];  \n\n          orden++;\n      });\n    });\n\n    //Se avisa si no existe cambios.\n    if($.isEmptyObject(asignaciones)){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No se ha asignado ningún alumno a los grupos.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      return false;\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('asignar_grupo_update'),\n      data: {asignaciones:asignaciones},\n      dataType: 'json',\n      success: function(response) {\n        // Notificación de confirmación\n        exito.play();\n        if($(\"#asignar_grupos #contenedor_asignar_grupos:not(.container_disabled)\").size()>1){\n          texto=\"Grupos Asignados\";\n        }\n        else{\n          texto=\"Grupo Asignado\";\n        }\n\n        new PNotify({\n          text:texto,\n          addclass: \"custom\",\n          type: \"success\",\n          shadow: true,\n          hide: true,\n          buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n          },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n        });\n        div.load(Routing.generate('asignar_grupo'));\n        \n        //Actualización de pestañas.\n        $(\"#ficha_alumno\").update_tab();\n        $(\"#asignar_optativa\").update_tab();\n\n      },\n      error: function (response, desc, err){\n        error.play();\n        swal({\n          title: \"Error en el sistema\",\n          html: \"Se ha producido un error en el sistema, por favor cierra la pestaña <span class='negrita'>Asignar Grupos</span> y vuelva a intentarlo de nuevo.\",\n          type: \"error\",\n          showCancelButton: false,\n          confirmButtonColor: color\n        });\n      }\n    })\n  });\n\n\n  ///////////////////////////////////////////\n  //      Asignar tutor a los grupos       //\n  ///////////////////////////////////////////\n\n\n  $(document).on(\"click\",\" #tutor_grupos #one\",function(event){\n    event.preventDefault();\n\n    $(\"#tutor_grupos #grupos_infantil\").removeClass('oculto');\n    $(\"#tutor_grupos #grupos_primaria\").addClass('oculto');\n  });\n\n\n  $(document).on(\"click\",\"#tutor_grupos #two\",function(event){\n    event.preventDefault();\n\n    $(\"#tutor_grupos #grupos_infantil\").addClass('oculto');\n    $(\"#tutor_grupos #grupos_primaria\").removeClass('oculto');\n  });\n\n  //Se elimina una asignación de tutor.\n  $(document).on(\"click\",\"#tutor_grupos #lista_grupos img\",function(event){\n    event.preventDefault();\n\n    id=$(this).prev().find(\"li\").attr(\"id\");\n    //Se pasa la lista a su posición inicial en la tabla de profesores y se muestra la lista que estaba oculta.\n    // $('#tutor_grupos .lista_profesores tr[id=\"'+id+'\"] ul').append($(this).prev().find(\"li\"));\n    $(this).prev().find(\"li\").appendTo('#tutor_grupos .lista_profesores tr[id=\"'+id+'\"] ul');\n    $('#tutor_grupos .lista_profesores tr[id=\"'+id+'\"]').removeClass('oculto');\n    //Se quita el estilo a la lista en la tabla de tutores aisgnados y ocultamos la imagen en esa lista. \n    $(this).closest('td').removeClass('placeholder_list_table_td_mod');\n    $(this).addClass('oculto');\n    //Se elimina el título que se le dio a la nueva asignación.\n    $(this).closest('td').attr('title',\"\");\n    //Se añade de nuevo la clase \"sortable\" a la fila para que se pueda realizar otra asignación.\n    $(this).closest('td').find(\"ul\").addClass('sortable');\n\n    //Se elimina la clase de asignado por modificado y se cambia el título.\n    $(this).closest(\"td\").removeClass('back_asignado');\n    if($(this).closest('td').attr(\"value\")!=\"\"){\n      $(this).closest(\"td\").attr('title', 'Tutor Eliminado');\n      $(this).closest(\"td\").addClass('eliminado');\n    }\n    else{\n      $(this).closest(\"td\").removeClass('back_modificado');\n    }\n\n    //Se comprueba si hay modificación para mostrar los botones.\n    $(\"#tutor_grupos #tutor_guardar\").prop(\"disabled\",true);\n    $(\"#tutor_grupos #tutor_rest\").prop(\"disabled\",true);\n\n    if($(\"#tutor_grupos #lista_grupos td\").hasClass('back_modificado') || $(\"#tutor_grupos #lista_grupos td\").hasClass('eliminado') ){\n      $(\"#tutor_grupos #tutor_guardar\").prop(\"disabled\",false);\n      $(\"#tutor_grupos #tutor_rest\").prop(\"disabled\",false);\n    }\n  });\n\n  $(document).on(\"click\",\"#tutor_grupos #tutor_rest\",function(event){\n    event.preventDefault();\n    nivel= $(\"#tutor_grupos .head_change label[class='']\").attr(\"id\");\n\n    div=$(this).closest(\"div[id^='tabs-']\");\n    $(div).load(Routing.generate(\"tutor_grupo\"), function(){\n      if(nivel==\"one\"){\n        $(\"#tutor_grupos #one\").click();\n      }\n      else{\n        $(\"#tutor_grupos #two\").click();\n      }\n    });\n  });\n\n  $(document).on(\"click\",\"#tutor_grupos #tutor_guardar\",function(event){\n\n    event.preventDefault();\n\n    var asignaciones = new Object();\n    var eliminados = Array();\n    var1=0;\n    var2=0;\n    //Se obtiene los grupos y profesores donde se ha asignado un tutor.(Insertar/Actualizar)\n    $(\"#tutor_grupos #lista_grupos td[class*='placeholder_list_table_td_mod']\").each(function(){\n      grupo=$(this).closest(\"tr\").attr(\"grupo\");\n      id=$(this).find(\"li\").attr(\"id\");\n\n      asignaciones[grupo] = id;\n      var1++;\n    });\n\n\n    // Se obtienen los grupos cuyos tutores han sido eliminados.(Eliminar)\n    $(\"#tutor_grupos #lista_grupos .eliminado\").each(function(){\n      grupo=$(this).closest(\"tr\").attr(\"grupo\");\n\n      if($(this).find(\"li\").size()==0){\n        eliminados.push(grupo);\n        var2++;\n      }\n    });\n\n    //Se avisa si no existe cambios.\n    if($.isEmptyObject(asignaciones) && $.isEmptyObject(eliminados)){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No se ha modificado ningún tutor en los grupos.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      return false;\n    }\n    div=$(this).closest(\"div[id^='tabs-']\");\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('asignar_tutor_grupo'),\n      data: { asignaciones:asignaciones, eliminados:eliminados},\n      dataType: 'json',\n      success: function(response) {\n        if(response.data==null){\n          errorPNotify.play();\n\n          new PNotify({\n            text:'No se ha modificado ningún tutor en los grupos.',\n            addclass: \"custom\",\n            type: \"error\",\n            shadow: true,\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          return false;\n        }\n        texto=\"\";\n        if(var1==1){\n          texto+=\" <span>\"+var1+\" Tutor <strong>registrado</strong><span>\";\n        }\n        else if(var1>1){\n          texto+=\" <span>\"+var1+\" Tutores <strong>registrados</strong><span>\";\n        }\n\n        if(var2==1){\n          texto+=\" <span>\"+var2+\" Tutor <strong>eliminado</strong><span>\";\n        }\n        else if(var2>1){\n          texto+=\" <span>\"+var2+\" Tutores <strong>eliminados</strong><span>\";\n        }\n        exito.play();\n        new PNotify({\n          text:texto,\n          addclass: \"custom\",\n          type: \"success\",\n          shadow: true,\n          hide: true,\n          animation: \"fade\",\n          animate_speed: 'fast',\n          delay: 4000,\n          buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n          },\n          stack: right_Stack,\n          animate: {\n            animate: true,\n            in_class: \"fadeInRight\",\n            out_class: \"fadeOutRight\",\n          }\n        });\n\n        nivel= $(\"#tutor_grupos .head_change label[class='']\").attr(\"id\");\n\n        $(div).load(Routing.generate(\"tutor_grupo\"), function(){\n          if(nivel==\"one\"){\n            $(\"#tutor_grupos #one\").click();\n          }\n          else{\n            $(\"#tutor_grupos #two\").click();\n          }\n        });\n      }\n    })\n  });\n\n\n\n\n\n\n\n  ///////////////////////////////////////////\n  //            Registrar Eventos          //\n  ///////////////////////////////////////////\n\n  //Se simula el hacer click en el calendario, haciendo click en un input oculto que contiene el día deleccionado.\n  $(document).on('click',\"#registrar_evento #dia_seleccionado\",function(e){\n    //Se habilita todos los campos.\n    $(\"#container_evento :input\").prop(\"disabled\",false);\n  });\n\n  //Se habilita el botón guardar cuando todos los campos esten completos.\n  $(document).on('keyup',\"#registrar_evento :input\",function(e){\n    //Se habilita todos los campos.\n    if($(\"#registrar_evento #titulo\").val()!=\"\" && $(\"#registrar_evento #descripcion\").val()!=\"\" && ($(\"#registrar_evento #hora\").val()!=\"\" || $(\"#registrar_evento #all_day input\").prop('checked'))){\n      $(\"#registrar_evento #reserva_save\").prop(\"disabled\",false);\n    }\n    else{\n      $(\"#registrar_evento #reserva_save\").prop(\"disabled\",true);\n    }\n  });\n\n  //Se habilita el botón guardar cuando todos los campos esten completos.(change)\n  $(document).on('change',\"#registrar_evento :input\",function(e){\n    //Se habilita todos los campos.\n    if($(\"#registrar_evento #titulo\").val()!=\"\" && $(\"#registrar_evento #descripcion\").val()!=\"\" && ($(\"#registrar_evento #hora\").val()!=\"\" || $(\"#registrar_evento #all_day input\").prop('checked'))){\n      $(\"#registrar_evento #reserva_save\").prop(\"disabled\",false);\n    }\n    else{\n      $(\"#registrar_evento #reserva_save\").prop(\"disabled\",true);\n    }\n  });\n    //Se habilita el botón guardar cuando todos los campos esten completos.(blur)\n    $(document).on('blur',\"#registrar_evento :input\",function(e){\n    //Se habilita todos los campos.\n    if($(\"#registrar_evento #titulo\").val()!=\"\" && $(\"#registrar_evento #descripcion\").val()!=\"\" && ($(\"#registrar_evento #hora\").val()!=\"\" || $(\"#registrar_evento #all_day input\").prop('checked'))){\n      $(\"#registrar_evento #reserva_save\").prop(\"disabled\",false);\n    }\n    else{\n      $(\"#registrar_evento #reserva_save\").prop(\"disabled\",true);\n    }\n  });\n  //Se eliminar el valor de hora si se marca la opción \"Todo el dia\".\n  $(document).on('click',\"#registrar_evento #all_day input\",function(e){\n\n    if(!$(this).prop('checked')){\n      $(\"#registrar_evento #hora\").prop(\"disabled\",false);\n    }\n    else{\n      $(\"#registrar_evento #hora\").val(\"\");\n      $(\"#registrar_evento #hora\").prop(\"disabled\",true);\n    }\n  });\n\n  $(document).on('click',\"#registrar_evento #reserva_save\",function(e){\n    // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n    $(\".ui-pnotify\").remove();\n\n    fecha=$(\"#registrar_evento #dia_seleccionado\").val();\n    if(fecha){\n      fecha= fecha.split(\"/\");\n      fecha= fecha[2]+\"-\"+fecha[1]+\"-\"+fecha[0]; \n    }\n\n    titulo=$(\"#registrar_evento #titulo\").val();\n    categoria=$(\"#registrar_evento #categoria\").val();\n    if($(\"#registrar_evento #all_day input\").prop('checked')){\n      hora=\"Todo el día\";\n    }\n    else{\n      hora=$(\"#registrar_evento #hora\").val();\n    }\n    descripcion=$(\"#registrar_evento #descripcion\").val();\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('eventos_create'),\n      data:{titulo:titulo, categoria:categoria, hora:hora, descripcion:descripcion,fecha:fecha}, \n      dataType: 'json',\n      success: function(response){\n  \n        // Se comrpueba que no sea  un día festivo.\n        if(response.message==\"festivo\"){\n          // Se indica que el día seleccionado es festivo.\n          texto=\"El día seleccionado <span>no es lectivo</span>, por lo que no se puede realizar ningún evento.<br><br>\";\n          dia=$(\"#contenedor_evento a[class*='ui-state-active']\").text();\n          mes=$(\"#contenedor_evento span[class='ui-datepicker-month']\").text();\n          anyo=$(\"#contenedor_evento span[class='ui-datepicker-year']\").text();\n          texto+=\"<p>Día seleccionado: <span>\"+dia+\" de \"+mes+\" de \"+anyo+\"</span></p><br>\";\n          motivo=$(\"#contenedor_evento a[class*='ui-state-active']\").attr(\"title\");\n          texto+=\"<p>Motivo no lectivo:  <span>\"+motivo+\"</span></p>\";\n          \n          error.play();\n          swal({\n            title: \"Se ha producido un error en el sistema\",\n            html: texto,\n            type: \"error\",\n            confirmButtonColor: color\n          });\n        }\n\n        // Se comprueba si hay alguna opción sin marcar para mostrar la notificación de error.\n        if(response.error.length != 0){\n          var texto=\"\";\n          for (var key in response.error) {\n            texto+=\"<span>\"+response.error[key]+\"<span>\";\n          }\n          errorPNotify.play();\n          new PNotify({\n            title: \"Debe completar los siguientes datos para registrar el evento:\",\n            text:texto,\n            addclass: \"custom\",\n            type: \"error\",\n            shadow: true,\n            hide: true,\n            width: \"335px\",\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: left_Stack,\n            animate_speed: \"fast\",\n            animate: {\n              animate: true,\n              in_class: \"fadeInLeft\",\n              out_class: \"fadeOutLeft\",\n            }\n          });\n          $(\"#registrar_evento #reserva_save\").prop(\"disabled\",true);\n          return false;\n        }\n        else{\n          exito.play();\n          new PNotify({\n            text:\"Evento registrado.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            animation: \"fade\",\n            animate_speed: 'fast',\n            delay: 4000,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          \n          // Se actualiza las pestañas de eventos.\n          $(\"#registrar_eventos\").update_tab();\n          $(\"#consultar_eventos\").update_tab();\n        }\n      }\n    })\n  });\n\n\n  ///////////////////////////////////////////\n  //            Consultar Eventos          //\n  ///////////////////////////////////////////\n\n  //Se muestra la descripción del evento al hacer click en el registro.\n  $(document).on(\"click\",\"#consultar_eventos .scrollContent tr\", function () {\n\n      if($(this).hasClass(\"tr_select_descrip\")){\n        $(this).removeClass(\"tr_select_descrip\");\n        $(\"#consultar_eventos .descripcion\").slideUp();\n        $(\"#consultar_eventos .descripcion\").remove();\n      }\n      else{\n        $(\"#consultar_eventos .tr_select_descrip\").removeClass(\"tr_select_descrip\");\n        $(\"#consultar_eventos .descripcion\").remove();\n        $(this).after(\"<div class='descripcion' style='display: none'>\"+$(this).find(\"td:last\").text()+\"</div>\");\n        $(this).addClass(\"tr_select_descrip\");\n        $(\"#consultar_eventos .descripcion\").slideDown( \"fast\" );\n      }\n      setTimeout(function(){ \n        if($('#consulta_eventos tbody').get(0).scrollHeight>$('#consulta_eventos tbody').height() ){\n            $(\"#consulta_eventos thead tr>th:nth-child(5)\").attr('style', 'width: 6.3% !important');\n        }\n        else{\n            $(\"#consulta_eventos thead tr>th:nth-child(5)\").attr('style', 'width: 5.7% !important');\n        }\n      },120);\n  });\n\n  // Se elimina el estilo del registro seleccionado si hay antes de ordenar la tabla.\n  $(document).on(\"click\",\"#consultar_eventos th\", function () {\n    $(\"#consultar_eventos .tr_select_descrip\").removeClass(\"tr_select_descrip\");\n  });\n\n\n  // Efecto cambio de iconos de editar.\n  $(document).on(\"mouseenter\",\".scrollContent tr td #editar_0\", function () {\n      $(this).addClass(\"oculto\");\n      $(this).next(\"img\").removeClass(\"oculto\");\n  });\n\n  $(document).on(\"mouseleave\",\".scrollContent tr td #editar_1\", function () {\n      $(this).addClass(\"oculto\");\n      $(this).prev(\"img\").removeClass(\"oculto\");  \n  });\n\n  $(document).on(\"mouseleave\",\".scrollContent tr td:last-child\", function () {\n      $(this).find(\"#editar_1\").addClass(\"oculto\");\n      $(this).find(\"#editar_0\").removeClass(\"oculto\");\n  });\n\n  $(document).on(\"mouseleave\",\".scrollContent tr\", function () {\n      $(this).find(\"#editar_1\").addClass(\"oculto\");\n      $(this).find(\"#editar_0\").removeClass(\"oculto\");\n  });\n\n  //Eliminación de una reserva.\n  $(document).on(\"click\",\"#consultar_eventos .scrollContent tr #eliminar_1\", function(event){\n    event.preventDefault();\n    evento=$(this).closest(\"tr\").attr(\"id\");\n\n    titulo=$(this).closest(\"tr\").find(\"td:nth-child(1)\").text();\n\n    from=$(this).closest(\"tr\").find(\"td:nth-child(2)\").attr(\"data-order\").split(\"/\");\n    fecha= from[1]+\"-\"+from[0]+\"-\"+from[2];    \n\n    hora=$(this).closest(\"tr\").find(\"td:nth-child(3)\").attr(\"hora\");\n\n    aviso.play();\n    swal({\n      title: \"Eliminación del evento\",\n      html: \"<table><p>Se va a eliminar el siguiente evento: </p><thead><tr><th>Evento</th><th>Fecha</th><th>Hora</th></tr></thead><tbody><tr><td>\"+titulo+\"</td><td>\"+fecha+\"</td><td>\"+hora+\"</td></tr></tbody><br></p></table><br><br>¿Estas seguro de continuar? <br>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"550px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'DELETE',\n          url: Routing.generate(\"eventos_delete\", {id:evento}),\n          success: function() {\n          // Se actualiza la pestaña de consulta de eventos..   \n            $(\"#consultar_eventos\").update_tab();\n          }\n        })\n        return false;\n      }, function (dismiss) {\n\n      }\n    );\n    //Se detiene la propagación del evento para que no detecte hacer click en el elemento \"tr\" que lo contiene.\n    event.stopPropagation();   \n  });\n\n// Se abre la ventana modal de Editar Evento.\n  $(document).on('click',\"#consultar_eventos #editar_1\",function(event){\n    event.preventDefault();\n    evento=$(this).closest(\"tr\").attr(\"id\");\n    \n    $('#evento_dialog').load(Routing.generate(\"eventos_edit\", {id:evento}), function(){\n      $('#evento_dialog form').attr(\"evento\",evento );\n    }).dialog('open'); \n\n    //Se detiene la propagación del evento para que no detecte hacer click en el elemento \"tr\" que lo contiene.\n    event.stopPropagation(); \n  });\n\n  ///////////////////////////////////////////\n  //             Editar Eventos            //\n  ///////////////////////////////////////////\n\n  // Se actualiza la hora guardada al cambiar en timepicki\n  $(document).on('click',\"#eventos_edit .timepicker_wrap .prev \",function(event){\n    hora=$(\"#eventos_edit .time input\").val();\n    minutos=$(\"#eventos_edit .mins input\").val();\n    $(\"#eventos_edit #eventos_hora\").val(hora+\":\"+minutos);\n\n    //Se quita la opción \"Todo el día\" si está marcada.\n    $(\"#eventos_edit #all_day input\").prop(\"checked\", false);\n\n    comprobarEditForm($(this).closest(\"form\"));\n\n  });\n\n  // Se actualiza la hora guardada al cambiar en timepicki.\n  $(document).on('click',\"#eventos_edit .timepicker_wrap .next \",function(event){\n    hora=$(\"#eventos_edit .time input\").val();\n    minutos=$(\"#eventos_edit .mins input\").val();\n    $(\"#eventos_edit #eventos_hora\").val(hora+\":\"+minutos);\n\n    //Se quita la opción \"Todo el día\" si está marcada.\n    $(\"#eventos_edit #all_day input\").prop(\"checked\", false);\n\n    comprobarEditForm($(this).closest(\"form\"));\n\n  });\n\n  //Se eliminar el valor de hora si se marca la opción \"Todo el dia\".\n  $(document).on('click',\"#eventos_edit #all_day input\",function(e){\n\n    if(!$(this).prop('checked')){\n      $(\"#eventos_edit .mins input\").prop(\"disabled\",false);   \n      $(\"#eventos_edit .time input\").prop(\"disabled\",false);\n\n      $(\"#eventos_edit .timepicker_wrap div\").removeClass(\"disabled\");\n\n      $(\"#eventos_edit .mins input\").val($(\"#eventos_edit .mins input\").attr(\"value\"));   \n      $(\"#eventos_edit .time input\").val($(\"#eventos_edit .time input\").attr(\"value\"));    \n    }\n    else{\n      $(\"#eventos_edit .mins input\").prop(\"disabled\",true);   \n      $(\"#eventos_edit .time input\").prop(\"disabled\",true);\n\n      $(\"#eventos_edit .timepicker_wrap div\").addClass(\"disabled\");\n      $(\"#eventos_edit #eventos_hora\").val(\"Todo el día\");\n      \n      $(\"#eventos_edit .mins input\").val(\"\");   \n      $(\"#eventos_edit .time input\").val(\"\");\n\n      $(\"#eventos_edit .mins input\").removeClass(\"modified\");   \n      $(\"#eventos_edit .time input\").removeClass(\"modified\"); \n    }\n    comprobarEditForm($(this).closest(\"form\"));\n  });\n\n\n  $(document).on(\"submit\",\"#eventos_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    form.find(\":input[type!='file']\").each(function(){\n      if(!$(this).attr(\"validated\") || $(this).attr(\"validated\")==false){\n        if($(this).attr(\"validation\")){\n          validation($(this));\n        }\n      }\n    });\n\n    //\":input\"añade a los input radio,select...\n    form.find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    if(val==0){\n      $.ajax({\n        type: 'PUT',\n        url: $(this).attr('action'),\n        data: $(this).serialize(), \n\n        success: function(response) {\n\n          // Notificación de confirmación\n          exito.play();\n              \n          new PNotify({\n            text:\"Evento actualizado\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          // Se actualiza las pestañas de eventos.\n          $(\"#registrar_eventos\").update_tab();\n          $(\"#consultar_eventos\").update_tab();\n          $(\"#evento_dialog\").dialog('close');\n        },\n        error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {\n            //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n            form.find(\":input\").each(function(i){  \n              $(this).prev().find(\".error\").remove();\n              $(this).next(\".mensaje\").remove();\n              $(this).removeClass(\"invalid\");\n              //Si tiene alguna validación se le asigna validate: true, para que se vuelva a validar.\n              //En caso contrario se valida con las reglas de validación de Symfony.\n              if($(this).attr(\"validation\")){\n                $(this).attr(\"validated\", true);\n              }\n            });\n            //Se muestra los campos inválidos.        \n            for (var key in response.responseJSON.data) { \n              form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");\n              form.find(\":input[id='\"+key+\"']\").removeClass(\"modified\");\n              //Si tiene alguna validación se le asigna validate: false, para indicar el campo inválido.\n              //En caso contrario se valida con las reglas de validación de Symfony.\n              if($(this).attr(\"validation\")){\n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n              }\n              form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n              if(response.responseJSON.data[key]==\"Este valor no debería estar vacío.\"){\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato requerido</span>\");\n              }\n              else{\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n            }\n            //Se muestra el primer campo inválido.\n            for (var key in response.responseJSON.data) { \n              form.find(\":input[id='\"+key+\"']\").focus();\n              return false;\n            }\n          } \n          else {\n            error.play();\n            swal({\n              title: \"Error en el sistema\",\n              html: \"Se ha producido un error en el sistema, por favor cierra la ventana <span class='negrita'>Editar Evento</span> y vuelva a intentarlo de nuevo.\",\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n          }\n        }\n      })\n    }\n  });\n\n\n  ///////////////////////////////////////////\n  //            Insertar Noticias          //\n  ///////////////////////////////////////////\n\n  //Se abre la ventana para insertar la imagen de la noticia.\n  $(document).on('click',\"#registrar_noticias #insertar_imagen button, #registrar_noticias #cambiar_imagen button[id!='btn_eliminar']\",function(event){\n    event.preventDefault();\n    $('#imagen_noticia_dialog').load(Routing.generate(\"noticias_imagen\"), function(){\n      //Se oculta el botón que corresponde a editar noticias.\n      $('#imagen_noticia_dialog .upload-result-edit_noticia').addClass('oculto');\n      $('#imagen_noticia_dialog .upload-result').removeClass('oculto');\n\n      $('#imagen_noticia_dialog #btn_file #upload').trigger('click');\n    }).dialog('open'); \n  }); \n\n  //Se habilita el botón guardar cuando todos los campos esten completos.\n  $(document).on('keyup  input ',\"#registrar_noticias :input\",function(e){\n    //Se habilita todos los campos.\n\n    if($(\"#registrar_noticias #titulo\").val()!=\"\" && tinyMCE.get('descripcion').getContent()!=\"\"){\n      $(\"#registrar_noticias #save\").prop(\"disabled\",false);\n    }\n    else{\n      $(\"#registrar_noticias #save\").prop(\"disabled\",true);\n    }\n  });\n\n  $(document).on('click',\"#registrar_noticias #save\",function(e){\n    e.preventDefault();\n    // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n    $(\".ui-pnotify\").remove();\n\n    titulo=$(\"#registrar_noticias #titulo\").val();\n    categoria=$(\"#registrar_noticias #categoria\").val();\n    if(!$(\"#registrar_noticias #mostrar_imagen\").hasClass(\"oculto\")){\n      imagen=$(\"#registrar_noticias #mostrar_imagen img\").attr(\"file\");\n      pos=$(\"#registrar_noticias #slider-vertical\").attr(\"value\");\n    }\n    else{\n      imagen=null;\n      pos=null;\n    }\n    descripcion=tinyMCE.get('descripcion').getContent();\n\n    if(!$(\"#registrar_noticias #galeria_noticia\").hasClass(\"oculto\")){\n      galeria=$(\"#registrar_noticias #galeria_noticia\").attr(\"title\");\n    }\n    else{\n      galeria=null;\n    }\n    \n    if($(\"#registrar_noticias #imagen_noticia #btn_activos\").hasClass(\"btn_selected\")){\n      show=\"yes\";\n    }\n    else{\n      show=\"no\";\n    }\n    \n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('noticias_create'),\n      data:{titulo:titulo, categoria:categoria, imagen:imagen, galeria:galeria, pos:pos, descripcion:descripcion, show:show}, \n      dataType: 'json',\n      success: function(response){\n\n        // Se comprueba si hay alguna opción sin marcar para mostrar la notificación de error.\n        if(response.error.length != 0){\n          var texto=\"\";\n          for (var key in response.error) {\n            texto+=\"<span>\"+response.error[key]+\"<span>\";\n          }\n          errorPNotify.play();\n          new PNotify({\n            title: \"Debe completar los siguientes datos para registrar la noticia:\",\n            text:texto,\n            addclass: \"custom\",\n            type: \"error\",\n            shadow: true,\n            hide: true,\n            width: \"335px\",\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: left_Stack,\n            animate_speed: \"fast\",\n            animate: {\n              animate: true,\n              in_class: \"fadeInLeft\",\n              out_class: \"fadeOutLeft\",\n            }\n          });\n          $(\"#registrar_noticias #save\").prop(\"disabled\",true);\n          return false;\n        }\n        else{\n          exito.play();\n          new PNotify({\n            text:\"Noticia registrada.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            animation: \"fade\",\n            animate_speed: 'fast',\n            delay: 4000,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          \n          // Se actualiza las pestañas de noticias.\n          $(\"#registrar_noticias\").update_tab();\n          $(\"#consultar_noticias\").update_tab();\n        }\n      }\n    })\n  });\n\n  //Se elimina la imagen seleccionada para la lista de noticias.\n  $(document).on('click',\"#registrar_noticias #imagen_noticia #btn_eliminar\",function(event){\n    event.preventDefault();\n    $(\"#registrar_noticias #insertar_imagen button\").prop(\"disabled\", false);\n\n    $(\"#registrar_noticias #imagen_noticia\").addClass( \"oculto\" );\n  }); \n\n  // Se activa la imagen en el contenido de la noticia.\n  $(document).on('click',\"#registrar_noticias #btn_activos\",function(event){\n    $(\"#registrar_noticias #btn_activos\").addClass(\"btn_selected\");\n    $(\"#registrar_noticias #show\").removeClass(\"oculto\");\n\n    $(\"#registrar_noticias #btn_inactivos\").removeClass(\"btn_selected\");\n    $(\"#registrar_noticias #hidden\").addClass(\"oculto\");\n  });\n\n  // Se oculta la imagen en el contenido de la noticia.\n  $(document).on('click',\"#registrar_noticias #btn_inactivos\",function(event){\n    $(\"#registrar_noticias #btn_activos\").removeClass(\"btn_selected\");\n    $(\"#registrar_noticias #show\").addClass(\"oculto\");\n\n    $(\"#registrar_noticias #btn_inactivos\").addClass(\"btn_selected\");\n    $(\"#registrar_noticias #hidden\").removeClass(\"oculto\");\n  });\n\n  // Se abre la ventana para añadir galería.\n  $(document).on('click',\"#insertar_galeria button\",function(event){\n    event.preventDefault();\n    $('#galeria_noticia_dialog').load(Routing.generate(\"noticias_galeria\"), function(){\n\n      $('#galeria_noticia_dialog #btn_file #btn_files').trigger('click');\n    }).dialog('open');\n    $.ajax({url: Routing.generate('galerias_delete'),type: \"POST\"});\n  }); \n\n  // Se abre la ventana para modificar la galería.\n  $(document).on('click',\"#registrar_noticias #galeria_noticia #btn_cambiar\",function(event){\n    event.preventDefault();\n    $('#galeria_noticia_dialog').load(Routing.generate(\"noticias_galeria\"), function(){\n      //Se elimina la clase \".upload-result\" que guarda la galería añadida. \n      $('#galeria_noticia_dialog #btn_upload button').removeClass('upload-result');\n      // Se añade la clase \".btn-success\" para guardar la galería editada.\n      $('#galeria_noticia_dialog #btn_upload button').addClass('upload-result-edit');\n      //Se añade el título de la galería en el input y como variable para mandarla al servidor.\n      titulo=$(\"#registrar_noticias #galeria_noticia\").attr(\"title\");\n      $(\"#galeria_noticia_dialog #titulo\").val(titulo.replace(/_/g, \" \"));\n      //Se añade el título como variable para mandarla al servidor.\n      $(\"#galeria_noticia_dialog #titulo\").attr(\"antiguo\",titulo);\n\n      //Se añaden las imágenes de la galería.\n      $(\"#galeria_noticia #galeria_show div>img\").each (function(item){ \n        array=$(this).attr(\"src\").split(\"/\");\n        $('#galeria_noticia_dialog #contenido ul').append('<li><div class=\"cont_img\"><img class=\"thumb\" id=\"antiguo\" src=\"'+$(this).attr(\"src\")+'\" title=\"'+array[array.length-1]+'\"></img></div><div class=\"eliminar\" title=\"Eliminar imagen\"></div></li>');\n      });\n      //Se indica el número de imágenes.\n      $('#galeria_noticia_dialog #num_imagenes').removeClass(\"red\");\n\n      if($('#galeria_noticia_dialog #list li').length>1){\n        $('#galeria_noticia_dialog #num_imagenes').text($('#galeria_noticia_dialog #list li').length + \" imágenes añadidas\");\n      }\n      else if($('#galeria_noticia_dialog #list li').length==1) {\n        $('#galeria_noticia_dialog #num_imagenes').text($('#galeria_noticia_dialog #list li').length + \" imagen añadida\");\n      }\n      else{\n        $('#galeria_noticia_dialog #num_imagenes').empty();\n      }\n\n    }).dialog('open'); \n  }); \n\n  //Se elimina la imagen seleccionada.\n  $(document).on('click',\"#galeria_noticia_dialog #list .eliminar\",function(event){\n    event.preventDefault();\n    $(this).closest(\"li\").remove();\n    if($('#galeria_noticia_dialog #list li').length>1){\n      $('#galeria_noticia_dialog #num_imagenes').text($('#galeria_noticia_dialog #list li').length + \" imágenes añadidas\");\n    }\n    else if($('#galeria_noticia_dialog #list li').length==1) {\n      $('#galeria_noticia_dialog #num_imagenes').text($('#galeria_noticia_dialog #list li').length + \" imagen añadida\");\n    }\n    else{\n      $('#galeria_noticia_dialog #num_imagenes').empty();\n    }\n  }); \n\n  $(document).on('blur',\"#galeria_noticia_dialog #titulo\",function(e){\n    var filter = /^([A-Za-záéíóúÁÉÍÓÚüÜñÑ0-9]+)([\\s][A-Za-záéíóúÁÉÍÓÚüÜñÑ0-9]+)*$/;\n\n    if($(this).val()==\"\"){\n      $(\"#galeria_noticia_dialog #titulo\").next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");    \n    }\n    else if(!filter.test($(this).val())){\n      $(\"#galeria_noticia_dialog #titulo\").next().next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n    }\n    else{\n      $(\"#galeria_noticia_dialog #titulo\").next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").removeClass(\"invalid\");\n    }\n  });\n\n  // Se guarda la galería añadida.\n  $(document).on('click',\"#galeria_noticia_dialog .upload-result\",function(event){\n    event.preventDefault();\n    val=0;\n    if($(\"#galeria_noticia_dialog #titulo\").val()==\"\"){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else if($(\"#galeria_noticia_dialog #titulo\").hasClass('invalid')){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else{\n      $(\"#galeria_noticia_dialog #titulo\").next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").removeClass(\"invalid\");\n    }\n\n    if($('#galeria_noticia_dialog #list li').length==0){\n      val=1;\n      $('#galeria_noticia_dialog #num_imagenes').text(\"Debe añadir alguna imagen a la galería\");\n      $('#galeria_noticia_dialog #num_imagenes').addClass(\"red\");\n    }\n    if(!val){\n      nombre=$(\"#galeria_noticia_dialog #titulo\").val();\n      nombre = nombre.replace(/ /g, \"_\"); //Se añade la opción g(global) para que cambie todas las ocurrencias.\n      var imagenes = new Array();\n      $('#galeria_noticia_dialog #list li').each (function(item){ \n        array=$(this).find(\"img\").attr(\"title\").split('.');\n        imagenes[\"Imagen-\"+(item+1)+\".\"+array[array.length-1]]=$(this).find(\"img\").attr(\"src\");\n      });\n      \n      var formdata=new FormData();\n      for (var key in imagenes) {\n        formdata.append(key, imagenes[key]);\n      }\n      formdata.append('nombre', nombre);\n\n      $.ajax({\n        url: Routing.generate('galeria_create'),\n        type: \"POST\",\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function (data) {\n          if(data.validate){     \n            error.play();\n            swal({\n              title:\"Nombre de la galería asignado\",\n              html: 'Ya existe una galería con ese nombre en el sistema.<br>Inserte otro nombre para continuar.',\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n            return false;\n          }\n\n          $(\"#registrar_noticias #galeria_noticia #galeria_show div\").remove();\n            imagenes=data.imagenes.replace(\"[\", \"\").replace(\"]\", \"\").replace(/\"/g, \"\");\n            imagenes=imagenes.split(\",\");\n            imagenes.forEach(function(item){\n              $(\"#registrar_noticias #galeria_show\").append(\"<div id='cont_imagen_mini' class='imgLiquidFill imgLiquid'><img src='/Symfony/web/uploads/noticias/galeria/\"+data.directory+item+\"' alt='Imagen de la galería'/></div>\");\n              $(\".imgLiquidFill\").imgLiquid();\n            });\n\n\n          $(\"#registrar_noticias #insertar_galeria button\").prop(\"disabled\", true);\n          $(\"#registrar_noticias #galeria_noticia\").removeClass( \"oculto\" );\n          $(\"#galeria_noticia_dialog\").dialog( \"close\" );\n          //Se muestra el título sin \"_\"\n          //$(\"#registrar_noticias #galeria_noticia\").attr(\"title\", nombre.replace(/_/g, \" \"));\n          $(\"#registrar_noticias #galeria_noticia\").attr(\"title\", nombre);\n        }\n      });  \n    }\n  }); \n\n  // Se guarda la galería editada.\n  $(document).on('click',\"#galeria_noticia_dialog .upload-result-edit\",function(event){\n    event.preventDefault();\n    val=0;\n    if($(\"#galeria_noticia_dialog #titulo\").val()==\"\"){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else if($(\"#galeria_noticia_dialog #titulo\").hasClass('invalid')){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else{\n      $(\"#galeria_noticia_dialog #titulo\").next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").removeClass(\"invalid\");\n    }\n\n    if($('#galeria_noticia_dialog #list li').length==0){\n      val=1;\n      $('#galeria_noticia_dialog #num_imagenes').text(\"Debe añadir alguna imagen a la galería\");\n      $('#galeria_noticia_dialog #num_imagenes').addClass(\"red\");\n    }\n    if(!val){\n      nombre=$(\"#galeria_noticia_dialog #titulo\").val();\n      nombre = nombre.replace(/ /g, \"_\"); //Se añade la opción g(global) para que cambie todas las ocurrencias.\n      antiguo=$(\"#galeria_noticia_dialog #titulo\").attr(\"antiguo\");\n      antiguo = antiguo.replace(/ /g, \"_\"); //Se añade la opción g(global) para que cambie todas las ocurrencias.\n      var imagenes = new Array();\n      $('#galeria_noticia_dialog #list li').each (function(item){ \n        if($(this).find(\"img\").attr(\"id\")==\"antiguo\"){\n          array=$(this).find(\"img\").attr(\"title\").split('.');\n          imagenes[\"0Imagen-\"+(item+1)+\".\"+array[array.length-1]]=$(this).find(\"img\").attr(\"src\");\n        }else{\n          array=$(this).find(\"img\").attr(\"title\").split('.');\n          imagenes[\"Imagen-\"+(item+1)+\".\"+array[array.length-1]]=$(this).find(\"img\").attr(\"src\");\n        }\n      });\n      \n      var formdata=new FormData();\n      var array= Array(); //Array que contiene el nombre de las imagenes para mostrar en el contenedor.\n      for (var key in imagenes) {\n        formdata.append(key, imagenes[key]);\n        array.push(key);\n      }\n      formdata.append('nombre', nombre);\n      formdata.append('antiguo', antiguo);\n\n      $.ajax({\n        url: Routing.generate('galeria_editar'),\n        type: \"POST\",\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function (data) {   \n          if(data.validate){     \n            error.play();\n            swal({\n              title:\"Nombre de la galería asignado\",\n              html: 'Ya existe una galería con ese nombre en el sistema.<br>Inserte otro nombre para continuar.',\n              type: \"error\",\n\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n            return false;\n          }\n\n          $(\"#registrar_noticias #galeria_noticia #galeria_show div\").each (function(){ \n            this.remove();\n          });\n          galeria=nombre;\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('mostrar_galeria_editada'),\n          data:{galeria:galeria}, \n          dataType: 'json',\n          success: function(response){\n            imagenes=response.imagenes.replace(\"[\", \"\").replace(\"]\", \"\").replace(/\"/g, \"\");\n            imagenes=imagenes.split(\",\");\n            imagenes.forEach(function(item){\n              $(\"#registrar_noticias #galeria_show\").append(\"<div id='cont_imagen_mini' class='imgLiquidFill imgLiquid'><img src='/Symfony/web/uploads/noticias/galeria/\"+data.directory+item+\"' alt='Imagen de la galería'/></div>\");\n              $(\".imgLiquidFill\").imgLiquid();\n            });\n\n            $(\"#registrar_noticias #insertar_galeria button\").prop(\"disabled\", true);\n            $(\"#registrar_noticias #galeria_noticia\").removeClass( \"oculto\" );\n            $(\"#galeria_noticia_dialog\").dialog( \"close\" );\n            //Se muestra el título sin \"_\"\n            //$(\"#registrar_noticias #galeria_noticia\").attr(\"title\", galeria.replace(/_/g, \" \"));\n            $(\"#registrar_noticias #galeria_noticia\").attr(\"title\", galeria);\n          }\n        });\n        }\n      });  \n    }\n  }); \n\n  //Se elimina la galería añadida.\n  $(document).on('click',\"#registrar_noticias #galeria_noticia #btn_eliminar\",function(event){\n    event.preventDefault();\n    $(\"#registrar_noticias #insertar_galeria button\").prop(\"disabled\", false);\n\n    $(\"#registrar_noticias #galeria_noticia #galeria_show div\").remove();\n    $(\"#registrar_noticias #galeria_noticia\").addClass( \"oculto\" );\n  }); \n\n  ///////////////////////////////////////////\n  //           Consultar Noticias          //\n  ///////////////////////////////////////////\n\n  //Eliminación de una reserva.\n  $(document).on(\"click\",\"#consultar_noticias .scrollContent tr #eliminar_1\", function(event){\n    event.preventDefault();\n    noticia=$(this).closest(\"tr\").attr(\"id\");\n\n    titulo=$(this).closest(\"tr\").find(\"td:nth-child(1)\").text();\n\n    from=$(this).closest(\"tr\").find(\"td:nth-child(2)\").attr(\"data-order\").split(\"/\");\n    fecha= from[1]+\"-\"+from[0]+\"-\"+from[2];    \n\n    hora=$(this).closest(\"tr\").find(\"td:nth-child(3)\").attr(\"hora\");\n\n\n    aviso.play();\n    swal({\n      title: \"Eliminación de noticias\",\n      html: \"<table><p>Se va a eliminar la siguiente noticia:</p><thead><tr><th>Noticia</th><th>Fecha</th><th>Hora</th></tr></thead><tbody><tr><td>\"+titulo+\"</td><td>\"+fecha+\"</td><td>\"+hora+\"</td></tr></tbody><br></p></table><br><br>¿Estas seguro de continuar? <br>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"600px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'DELETE',\n          url: Routing.generate(\"noticias_delete\", {id:noticia}),\n          success: function() {\n          // Se actualiza las pestañas de consulta de noticias.   \n            $(\"#consultar_noticias\").update_tab();\n          }\n        })\n        return false;\n      }, function (dismiss) {\n\n      }\n    );\n    //Se detiene la propagación del evento para que no detecte hacer click en el elemento \"tr\" que lo contiene.\n    event.stopPropagation();   \n  });\n\n// Se abre la ventana modal de Editar Noticias.\n  $(document).on('click',\"#consultar_noticias #editar_1\",function(event){\n    event.preventDefault();\n    noticia=$(this).closest(\"tr\").attr(\"id\");\n    \n    $('#noticia_dialog').load(Routing.generate(\"noticias_edit\", {id:noticia}), function(){\n      $('#noticia_dialog form').attr(\"noticia\",noticia );\n    }).dialog('open'); \n\n    //Se detiene la propagación del evento para que no detecte hacer click en el elemento \"tr\" que lo contiene.\n    event.stopPropagation(); \n  });\n\n\n  //Se abre la ventana para insertar la imagen de la noticia.\n  $(document).on('click',\"#insertar_imagen_edit button, #cambiar_imagen_edit button[id!='btn_eliminar']\",function(event){\n    event.preventDefault();\n    $('#imagen_noticia_dialog').load(Routing.generate(\"noticias_imagen\"), function(){\n      //Se oculta el botón que corresponde a registrar noticias.\n      $('#imagen_noticia_dialog .upload-result-edit_noticia').removeClass('oculto');\n      $('#imagen_noticia_dialog .upload-result').addClass('oculto');\n\n      $('#imagen_noticia_dialog #btn_file #upload').trigger('click');\n    }).dialog('open'); \n  }); \n\n  //Se elimina la imagen seleccionada para la lista de noticias.\n  $(document).on('click',\"#noticias_edit #cambiar_imagen_edit  #btn_eliminar\",function(event){\n    event.preventDefault();\n    $(\"#noticias_edit #insertar_imagen_edit button\").prop(\"disabled\", false);\n\n    $(\"#noticias_edit #imagen_noticia\").addClass( \"oculto\" );\n  /*  titulo=$(\"#noticias_edit #imagen_noticia #cont_imagen img\").attr(\"file\");\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('imagen_delete'),\n      data:{titulo:titulo}, \n      dataType: 'json',\n      success: function(response){\n      }\n    });\n*/\n  }); \n\n  // Se activa la imagen en el contenido de la noticia.\n  $(document).on('click',\"#noticias_edit #btn_activos\",function(event){\n    $(\"#noticias_edit #btn_activos\").addClass(\"btn_selected\");\n    $(\"#noticias_edit #show\").removeClass(\"oculto\");\n\n    $(\"#noticias_edit #btn_inactivos\").removeClass(\"btn_selected\");\n    $(\"#noticias_edit #hidden\").addClass(\"oculto\");\n  });\n\n  // Se oculta la imagen en el contenido de la noticia.\n  $(document).on('click',\"#noticias_edit #btn_inactivos\",function(event){\n    $(\"#noticias_edit #btn_activos\").removeClass(\"btn_selected\");\n    $(\"#noticias_edit #show\").addClass(\"oculto\");\n\n    $(\"#noticias_edit #btn_inactivos\").addClass(\"btn_selected\");\n    $(\"#noticias_edit #hidden\").removeClass(\"oculto\");\n  });\n\n  // Se abre la ventana para añadir galería.\n  $(document).on('click',\"#noticias_edit #insertar_galeria_edit button\",function(event){\n    event.preventDefault();\n    $('#galeria_noticia_dialog').load(Routing.generate(\"noticias_galeria\"), function(){\n      //Se elimina la clase \".upload-result\" que guarda la galería añadida. \n      $('#galeria_noticia_dialog #btn_upload button').removeClass('upload-result');\n      // Se añade la clase \".btn-success\" para guardar la galería editada.\n      $('#galeria_noticia_dialog #btn_upload button').addClass('upload-result-edit_noticia');\n\n      $('#galeria_noticia_dialog #btn_file #btn_files').trigger('click');\n    }).dialog('open');\n    $.ajax({url: Routing.generate('galerias_delete'),type: \"POST\"});\n  }); \n\n  // Se abre la ventana para modificar la galería.\n  $(document).on('click',\"#noticias_edit #galeria_noticia #btn_cambiar\",function(event){\n    event.preventDefault();\n    $('#galeria_noticia_dialog').load(Routing.generate(\"noticias_galeria\"), function(){\n      //Se elimina la clase \".upload-result\" que guarda la galería añadida. \n      $('#galeria_noticia_dialog #btn_upload button').removeClass('upload-result');\n      // Se añade la clase \".btn-success\" para guardar la galería editada.\n      $('#galeria_noticia_dialog #btn_upload button').addClass('upload-result-edit-edit_noticia');\n      //Se añade el título de la galería en el input y como variable para mandarla al servidor.\n      titulo=$(\"#noticias_edit #galeria_noticia\").attr(\"title\");\n      $(\"#galeria_noticia_dialog #titulo\").val(titulo.replace(/_/g, \" \"));\n      //Se añade el título como variable para mandarla al servidor.\n      $(\"#galeria_noticia_dialog #titulo\").attr(\"antiguo\",titulo);\n\n      //Se añaden las imágenes de la galería.\n      $(\"#noticias_edit #galeria_noticia #galeria_show div>img\").each (function(item){ \n        array=$(this).attr(\"src\").split(\"/\");\n        $('#galeria_noticia_dialog #contenido ul').append('<li><div class=\"cont_img\"><img class=\"thumb\" id=\"antiguo\" src=\"'+$(this).attr(\"src\")+'\" title=\"'+array[array.length-1]+'\"></img></div><div class=\"eliminar\" title=\"Eliminar imagen\"></div></li>');\n      });\n      //Se indica el número de imágenes.\n      $('#galeria_noticia_dialog #num_imagenes').removeClass(\"red\");\n\n      if($('#galeria_noticia_dialog #list li').length>1){\n        $('#galeria_noticia_dialog #num_imagenes').text($('#galeria_noticia_dialog #list li').length + \" imágenes añadidas\");\n      }\n      else if($('#galeria_noticia_dialog #list li').length==1) {\n        $('#galeria_noticia_dialog #num_imagenes').text($('#galeria_noticia_dialog #list li').length + \" imagen añadida\");\n      }\n      else{\n        $('#galeria_noticia_dialog #num_imagenes').empty();\n      }\n\n\n    }).dialog('open'); \n  }); \n\n  // Se guarda la galería añadida.\n  $(document).on('click',\"#galeria_noticia_dialog .upload-result-edit_noticia\",function(event){\n    event.preventDefault();\n    val=0;\n    if($(\"#galeria_noticia_dialog #titulo\").val()==\"\"){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else if($(\"#galeria_noticia_dialog #titulo\").hasClass('invalid')){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else{\n      $(\"#galeria_noticia_dialog #titulo\").next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").removeClass(\"invalid\");\n    }\n\n    if($('#galeria_noticia_dialog #list li').length==0){\n      val=1;\n      $('#galeria_noticia_dialog #num_imagenes').text(\"Debe añadir alguna imagen a la galería\");\n      $('#galeria_noticia_dialog #num_imagenes').addClass(\"red\");\n    }\n    if(!val){\n      nombre=$(\"#galeria_noticia_dialog #titulo\").val();\n      nombre = nombre.replace(/ /g, \"_\"); //Se añade la opción g(global) para que cambie todas las ocurrencias.\n      var imagenes = new Array();\n      $('#galeria_noticia_dialog #list li').each (function(item){ \n        array=$(this).find(\"img\").attr(\"title\").split('.');\n        imagenes[\"Imagen-\"+(item+1)+\".\"+array[array.length-1]]=$(this).find(\"img\").attr(\"src\");\n      });\n      \n      var formdata=new FormData();\n      for (var key in imagenes) {\n        formdata.append(key, imagenes[key]);\n      }\n      formdata.append('nombre', nombre);\n\n      $.ajax({\n        url: Routing.generate('galeria_create'),\n        type: \"POST\",\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function (data) {\n          if(data.validate){     \n            error.play();\n            swal({\n              title:\"Nombre de la galería asignado\",\n              html: 'Ya existe una galería con ese nombre en el sistema.<br>Inserte otro nombre para continuar.',\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n            return false;\n          }\n\n          $(\"#noticias_edit #galeria_noticia #galeria_show div\").remove();\n            imagenes=data.imagenes.replace(\"[\", \"\").replace(\"]\", \"\").replace(/\"/g, \"\");\n            imagenes=imagenes.split(\",\");\n            imagenes.forEach(function(item){\n              $(\"#noticias_edit #galeria_show\").append(\"<div id='cont_imagen_mini' class='imgLiquidFill imgLiquid'><img src='/Symfony/web/uploads/noticias/galeria/\"+data.directory+item+\"' alt='Imagen de la galería'/></div>\");\n              $(\".imgLiquidFill\").imgLiquid();\n            });\n\n\n          $(\"#noticias_edit #insertar_galeria_edit button\").prop(\"disabled\", true);\n          $(\"#noticias_edit #galeria_noticia\").removeClass( \"oculto\" );\n          $(\"#galeria_noticia_dialog\").dialog( \"close\" );\n          //Se muestra el título sin \"_\"\n          //$(\"#noticias_edit #galeria_noticia\").attr(\"title\", nombre.replace(/_/g, \" \"));\n\n          $(\"#noticias_edit #galeria_noticia\").attr(\"title\", nombre);\n        }\n      });  \n    }\n  }); \n\n  // Se guarda la galería editada.\n  $(document).on('click',\"#galeria_noticia_dialog .upload-result-edit-edit_noticia\",function(event){\n    event.preventDefault();\n    val=0;\n    if($(\"#galeria_noticia_dialog #titulo\").val()==\"\"){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else if($(\"#galeria_noticia_dialog #titulo\").hasClass('invalid')){\n      val=1;\n      $(\"#galeria_noticia_dialog #titulo\").next().next().removeClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").addClass(\"invalid\");\n      $(\"#galeria_noticia_dialog #titulo\").focus();\n    }\n    else{\n      $(\"#galeria_noticia_dialog #titulo\").next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").next().next().addClass(\"oculto\");\n      $(\"#galeria_noticia_dialog #titulo\").removeClass(\"invalid\");\n    }\n\n    if($('#galeria_noticia_dialog #list li').length==0){\n      val=1;\n      $('#galeria_noticia_dialog #num_imagenes').text(\"Debe añadir alguna imagen a la galería\");\n      $('#galeria_noticia_dialog #num_imagenes').addClass(\"red\");\n    }\n    if(!val){\n      nombre=$(\"#galeria_noticia_dialog #titulo\").val();\n      nombre = nombre.replace(/ /g, \"_\"); //Se añade la opción g(global) para que cambie todas las ocurrencias.\n      antiguo=$(\"#galeria_noticia_dialog #titulo\").attr(\"antiguo\");\n      antiguo = antiguo.replace(/ /g, \"_\"); //Se añade la opción g(global) para que cambie todas las ocurrencias.\n      var imagenes = new Array();\n      $('#galeria_noticia_dialog #list li').each (function(item){ \n        if($(this).find(\"img\").attr(\"id\")==\"antiguo\"){\n          array=$(this).find(\"img\").attr(\"title\").split('.');\n          imagenes[\"0Imagen-\"+(item+1)+\".\"+array[array.length-1]]=$(this).find(\"img\").attr(\"src\");\n        }else{\n          array=$(this).find(\"img\").attr(\"title\").split('.');\n          imagenes[\"Imagen-\"+(item+1)+\".\"+array[array.length-1]]=$(this).find(\"img\").attr(\"src\");\n        }\n      });\n      \n      var formdata=new FormData();\n      var array= Array(); //Array que contiene el nombre de las imagenes para mostrar en el contenedor.\n      for (var key in imagenes) {\n        formdata.append(key, imagenes[key]);\n        array.push(key);\n      }\n      formdata.append('nombre', nombre);\n      formdata.append('antiguo', antiguo);\n\n      $.ajax({\n        url: Routing.generate('galeria_editar'),\n        type: \"POST\",\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function (data) {   \n          if(data.validate){     \n            error.play();\n            swal({\n              title:\"Nombre de la galería asignado\",\n              html: 'Ya existe una galería con ese nombre en el sistema.<br>Inserte otro nombre para continuar.',\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n            return false;\n          }\n\n          $(\"#noticias_edit #galeria_noticia #galeria_show div\").each (function(){ \n            this.remove();\n          });\n          galeria=nombre;\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('mostrar_galeria_editada'),\n          data:{galeria:galeria}, \n          dataType: 'json',\n          success: function(response){\n            imagenes=response.imagenes.replace(\"[\", \"\").replace(\"]\", \"\").replace(/\"/g, \"\");\n            imagenes=imagenes.split(\",\");\n            imagenes.forEach(function(item){\n              $(\"#noticias_edit #galeria_show\").append(\"<div id='cont_imagen_mini' class='imgLiquidFill imgLiquid'><img src='/Symfony/web/uploads/noticias/galeria/\"+data.directory+item+\"' alt='Imagen de la galería'/></div>\");\n              $(\".imgLiquidFill\").imgLiquid();\n            });\n            \n            $(\"#noticias_edit #noticias_galeria\").val( $(\"#galeria_noticia_dialog #titulo\").val().replace(/ /g, \"_\") );\n\n            $(\"#noticias_edit #insertar_galeria_edit button\").prop(\"disabled\", true);\n            $(\"#noticias_edit #galeria_noticia\").removeClass( \"oculto\" );\n            $(\"#galeria_noticia_dialog\").dialog( \"close\" );\n\n            //Se muestra el título sin \"_\"\n            //$(\"#noticias_edit #galeria_noticia\").attr(\"title\", galeria.replace(/_/g, \" \"));\n            $(\"#noticias_edit #galeria_noticia\").attr(\"title\", galeria);\n          }\n        });\n        }\n      });  \n    }\n  }); \n\n  //Se elimina la galería añadida.\n  $(document).on('click',\"#noticias_edit #galeria_noticia #btn_eliminar\",function(event){\n    event.preventDefault();\n    $(\"#insertar_galeria_edit button\").prop(\"disabled\", false);\n    $(\"#noticias_edit #galeria_noticia\").attr(\"title\",\"\");\n\n    $(\"#noticias_edit #galeria_noticia #galeria_show div\").remove();\n    $(\"#noticias_edit #galeria_noticia\").addClass( \"oculto\" );\n\n    $.ajax({url: Routing.generate('galerias_delete'),type: \"POST\"});\n\n  }); \n  //Se valida el título de la noticia. (La descripción es validada dentro tinymce)\n  $(document).on(\"change keyup paste click input propertychange blur cut\",'#noticias_edit #noticias_titulo', function(){\n    $(\"#noticias_edit #input_titulo\").find(\".error\").remove();\n    titulo=$(\"#noticias_edit #noticias_titulo\").val();\n\n    if(titulo==\"\"){\n      $(\"#noticias_edit #noticias_titulo\").prev().append(\"<span class='error'>Dato Requerido</span>\");\n      $(\"#noticias_edit #noticias_titulo\").addClass(\"invalid\");\n      $(\"#noticias_edit #noticias_titulo\").attr(\"validated\",false);\n    }\n    else{\n      $(\"#noticias_edit #noticias_titulo\").removeClass(\"invalid\");\n      $(\"#noticias_edit #noticias_titulo\").attr(\"validated\",true);\n    }\n  });\n\n\n  //Se actualiza la noticia.\n  $(document).on(\"submit\",\"#noticias_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    // Se establece el efecto para la notificación de error en el caso de que se de varias veces seguidas a guardar con algunas opción sin marcar.\n    $(\".ui-pnotify\").remove();\n\n    if(!$(\"#noticias_edit #imagen_noticia\").hasClass(\"oculto\")){\n      imagen=$(\"#noticias_edit #mostrar_imagen img\").attr(\"file\");\n      pos=$(\"#noticias_edit #slider-vertical\").attr(\"value\");\n    }\n    else{\n      imagen=\"\";\n      pos=null;\n    }\n    if(!$(\"#noticias_edit #galeria_noticia\").hasClass(\"oculto\")){\n      galeria=$(\"#noticias_edit #galeria_noticia\").attr(\"title\").split(' ').join('_');\n    }\n    else{\n      galeria=\"\";\n    }\n    if($(\"#noticias_edit #imagen_noticia #btn_activos\").hasClass(\"btn_selected\")){\n      show=\"yes\";\n    }\n    else{\n      show=\"no\";\n    }\n    \n    titulo=$(\"#noticias_edit #noticias_titulo\").val();\n    descripcion=tinyMCE.get('noticias_descripcion').getContent();  \n\n    var val=0;\n    $(\"#noticias_edit\").find(\".error\").remove();\n    if(titulo==\"\"){\n      val=1;\n      $(\"#noticias_edit #noticias_titulo\").prev().append(\"<span class='error'>Dato Requerido</span>\");\n      $(\"#noticias_edit #noticias_titulo\").addClass(\"invalid\");\n      $(\"#noticias_edit #noticias_titulo\").attr(\"validated\",false);\n      $(\"#noticias_edit #noticias_titulo\").focus();\n    }\n    else{\n      $(\"#noticias_edit #noticias_titulo\").removeClass(\"invalid\");\n      $(\"#noticias_edit #noticias_titulo\").attr(\"validated\",true);\n    }\n\n    if(descripcion==\"\"){\n      val=1;\n      $(\"#noticias_edit .editor>label\").append(\"<span class='error'>Dato Requerido</span>\");\n      $(\"#noticias_edit .editor>div\").addClass(\"invalid\");\n      $(\"#noticias_edit #noticias_descripcion\").attr(\"validated\",false);\n      if(titulo!=\"\"){\n        tinyMCE.get('noticias_descripcion').focus();\n      }\n    }\n    else{\n      $(\"#noticias_edit .editor>div\").removeClass(\"invalid\");\n      $(\"#noticias_edit #noticias_descripcion\").attr(\"validated\",true);     \n    }\n\n\n    if(val==0){\n      $.ajax({\n        type: 'PUT',\n        url: $(this).attr('action'),\n\n        data: $(this).serialize()+\"&imagen=\"+imagen+\"&pos=\"+pos+\"&galeria=\"+galeria+\"&show=\"+show, \n\n        success: function(response) {\n\n          // Notificación de confirmación\n          exito.play();\n              \n          new PNotify({\n            text:\"Noticia actualizada\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          // Se actualiza las pestañas de eventos.\n          $(\"#registrar_noticias\").update_tab();\n          $(\"#consultar_noticias\").update_tab();\n          $(\"#noticia_dialog\").dialog('close');\n        },\n        error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {\n            //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n            form.find(\":input\").each(function(i){  \n              $(this).prev().find(\".error\").remove();\n              $(this).next(\".mensaje\").remove();\n              $(this).removeClass(\"invalid\");\n              //Si tiene alguna validación se le asigna validate: true, para que se vuelva a validar.\n              //En caso contrario se valida con las reglas de validación de Symfony.\n              if($(this).attr(\"validation\")){\n                $(this).attr(\"validated\", true);\n              }\n            });\n            //Se muestra los campos inválidos.        \n            for (var key in response.responseJSON.data) { \n              form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");\n              form.find(\":input[id='\"+key+\"']\").removeClass(\"modified\");\n              //Si tiene alguna validación se le asigna validate: false, para indicar el campo inválido.\n              //En caso contrario se valida con las reglas de validación de Symfony.\n              if($(this).attr(\"validation\")){\n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n              }\n              form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n              if(response.responseJSON.data[key]==\"Este valor no debería estar vacío.\"){\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato Requerido</span>\");\n              }\n              else{\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n            }\n            //Se muestra el primer campo inválido.\n            for (var key in response.responseJSON.data) { \n              form.find(\":input[id='\"+key+\"']\").focus();\n              return false;\n            }\n          } \n          else {\n            error.play();\n            swal({\n              title: \"Error en el sistema\",\n              html: \"Se ha producido un error en el sistema, por favor cierra la ventana <span class='negrita'>Editar Evento</span> y vuelva a intentarlo de nuevo.\",\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color\n            });\n          }\n        }\n      })\n    }\n  });\n\n\n \n/////////////////////////////////\n// Asignar profesores a grupos //\n/////////////////////////////////\n\n  $(document).on('click',\"#asignar_profesor a[id$='_modal']\",function(event){\n    event.preventDefault();\n    var curso= $(this).closest(\"h2\").text();\n    var id=$(this).closest(\"div\").attr(\"grupo\");\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_asignaturas'),\n      success: function(response) {\n        // Si no hay asignaturas registradas muestra un aviso.\n        if(response.data==null){\n          error.play(); \n          swal({\n            title:\"No se pueden asignar profesores a los grupos\",\n            text: 'Actualmente no hay asignaturas registrada en el sistema.',\n            type: \"error\",\n            showCancelButton: false,\n            confirmButtonColor: color\n          });\n        }\n        else{\n          $('#profesor_asignatura_grupo_dialog').load(Routing.generate(\"asignar_grupo_profesores_new\", {id:id}), function(){\n          }).dialog('open'); \n        }\n      }\n    })\n  });\n\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #div_lista button\",function(event){ \n    //Se marca el profesor seleccionado.\n    if(!$(this).hasClass(\"elected\")){\n      $(\"#profesor_asignatura_grupo_dialog #div_lista button\").removeClass(\"elected\"); \n      $(this).addClass(\"elected\");\n    }\n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas input:checkbox:checked\").size()>0){\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").removeClass('disabled');\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").removeClass('disab');\n    }\n    else{\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").addClass('disabled');\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").addClass('disab');\n    }\n    //Se deshabilita el botón \"restablecer\".\n    $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",false);\n  });\n  //Se modifica el title del select con el nombre del aula seleccionada.\n  $(document).on('change',\"#profesor_asignatura_grupo_dialog select\",function(event){\n    titulo= $(this).find(\"option:selected\").text();\n    $(this).attr(\"title\",titulo);\n  });\n\n  $(document).on('change',\"#profesor_asignatura_grupo_dialog input:checkbox\",function(event){ \n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas input:checkbox:checked\").size()==0){\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").addClass('disabled');\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").addClass('disab');\n    }\n    else{\n      if($(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").size()==1){\n        $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").removeClass('disabled');\n        $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").removeClass('disab');\n      }\n    }\n    //Si se marca una asignatura opcional se deshabilita los checkbox de las otras opcionales para que no se pueda añadir el mismo profesor.\n    if($(this).closest(\"li\").attr(\"opcional\")==1)\n    {\n      if($(this).is(':checked')){\n        $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] input:checkbox\").each (function(){ \n          $(this).prop('disabled', true);\n        });\n        $(this).prop('disabled', false);\n      }\n      else{\n        $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] input:checkbox\").each (function(){ \n          $(this).prop('disabled', false);\n        });\n      }\n    }\n\n\n  });\n\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog li\",function(event){ \n   event.preventDefault();\n   //Se ejecuta solo al marcar los checkbox.\n   if(!$(this).find(\"#no_asignado\").hasClass('oculto')){\n    input=$(this).find(\"#no_asignado input\");\n    //Se pulsa el checkbox.\n    if($(event.target).is('input')){\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",false);\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n        if(input.is(':checked') ){\n          input.prop(\"checked\",false).change();\n          // Se habilita el botón de asignar.\n          if($(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").size()==1 && $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas #no_asignado input:checkbox:checked\").size()>0){\n            $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").removeClass('disabled');\n            $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").removeClass('disab');\n          }\n          else{\n            $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").addClass('disabled');\n            $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").addClass('disab');\n          }\n\n          if($(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").size()==0 && $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas #no_asignado input:checkbox:checked\").size()==0  && $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .eliminado\").size()==0 && $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .back_modificado\").size()==0){\n            $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",true);\n            $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",true);\n          }\n        }\n        else{\n          input.prop(\"checked\",true).change();\n          // Se deshabilita el botón de asignar.\n          if($(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").size()==1){\n            $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").removeClass('disabled');\n            $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").removeClass('disab');\n          }\n\n        }\n      }, 5);\n    }//Se pulsa la imagen de eliminar asignación.\n    else if($(event.target).is('img')){\n\n    }\n    else if($(event.target).is('select')){\n\n    }\n    //Se pulsa la lista.\n    else{\n      $(this).find(\"#no_asignado input:checkbox\").click();\n    }\n   }\n  });\n\n  // Marcar o desmarcar todos las asignaturas troncales.\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #all\",function(event){\n    if($(this).is(':checked') ){\n      $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[tipo='Troncal']\").each (function(){ \n          $(this).find(\"#no_asignado input\").prop(\"checked\",true);\n      });\n    }\n    else{\n      $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[tipo='Troncal']\").each (function(){ \n          $(this).find(\"#no_asignado input\").prop(\"checked\",false);\n      });\n    }\n  });\n\n  //Se oculta el title con el nombre del aula al abrir el select.\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas select\",function(event){\n    $(this).attr(\"title\",\"\");\n  });\n  //Se muestra el title con el nombre del aula al modificar el select.\n  $(document).on('change',\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas select\",function(event){\n    $(this).attr(\"title\",$(this).find(\"option:selected\").text());\n    //Se comprueba cuando se modifica el aula si el aula o el profesor ha sido modificado para añadirle las clases.\n    if($(this).attr(\"valor\")){\n      if($(this).attr(\"valor\")!=$(this).val() || $(this).prev().attr(\"valor\")!=$(this).prev().attr(\"value\")){\n        $(this).closest('li').addClass('back_modificado');\n        $(this).closest('li').removeClass('back_asignado');\n        $(this).prev().attr(\"title\", \"Profesor Asignado con cambio de Aula\");\n     }\n      else{\n        $(this).closest('li').removeClass('back_modificado');\n        $(this).closest('li').addClass('back_asignado');\n        $(this).prev().attr(\"title\", \"Profesor Asignado\");\n      }\n    }\n\n    //Se deshabilita el aula asignada a una asignatura opcional en el listado de las otras.\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] #asignado:not('.oculto') select option\").prop('disabled', false);\n    \n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] #asignado:not('.oculto') select\").each (function(){\n      aula=$(this).val();\n      li=$(this).closest(\"li\").attr(\"id\");\n      if(aula!=0){\n        $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] #asignado:not('.oculto') select\").each (function(){\n          //Se deshabilita las aulas asignadas en los otros select, excepto cuando la opción está seleccionada en el select.\n          //(Caso validado desde javascript para que no pueda seleccionarse el mismo, pero es necesario para comprobar aula asignada en php)\n          if($(this).closest(\"li\").attr(\"id\")!=li && $(this).val()!=aula){\n            $(this).find(\"option[value='\"+aula+\"']\").prop('disabled', true);\n          }\n\n        });\n      }\n    });\n\n    //Se comprueba si hay modificaciones para habilitar o deshabilitar los botones de \"guardar\" y \"restablecer\".\n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .back_modificado\").size()>0 || $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .eliminado\").size()>0){\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",false);\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",false);\n    }else{\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",true);\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",true);\n    }\n    $(this).blur();\n  });\n\n  //Se añade el profesor y a las asignaturas seleccionadas en el curso correspondiente.\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #btn_asignar\",function(event){\n\n    //Se comprueba que esté seleccionado un profesor y alguna asignatura.\n    if($(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").size()==0 || $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas input:checkbox:checked\").size()==0){\n      texto=\"\";\n      if($(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").size()==0){\n        texto+=\"<span>- Profesor.</span>\";\n      }\n      if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas input:checkbox:checked\").size()==0){\n        texto+=\"<span>- Asignaturas.</span>\";\n      }\n      errorPNotify.pause();\n      errorPNotify.currentTime=0.0;\n      $(\".ui-pnotify\").remove();\n        \n      errorPNotify.play();\n      new PNotify({\n        title: \"Debe seleccionar los siguientes datos para realizar la asignación:\",\n        text:texto,\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        width: \"335px\",\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        animate_speed: \"fast\",\n        stack: right_Stack_dialog,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").addClass('disabled');\n      $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").addClass('disab');\n      return false;\n    }\n\n    profesor=$(\"#profesor_asignatura_grupo_dialog .elected\").text();\n    id=$(\"#profesor_asignatura_grupo_dialog .elected\").attr(\"id\");\n    tutoria_no_asignada=0;\n    //Se asignan las asignaturas troncales y específicas(excepto las opcionales)\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional!='1'] div:not('.oculto') input:checkbox:checked\").each (function(){ \n      //Se comrpueba que el profesor seleccionado es el tutor del grupo para poder asignarle la Tutoría.\n      if($(this).closest(\"li\").attr(\"nombre\")==\"Tutoría\" && $(\"#profesor_asignatura_grupo_dialog #tutor .elected\").size()==0){\n        tutoria_no_asignada=1;\n      }\n      else{\n        $(this).closest(\"#no_asignado\").addClass('oculto');\n        $(this).closest(\"#no_asignado\").next().removeClass('oculto');\n        $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"value\",profesor);\n        $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"id\",id);\n        $(this).closest(\"li\").removeClass();\n      \n        $(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").removeClass('elected');\n        $(this).prop(\"checked\", false);\n        if($(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"value\")==$(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"valor\")){\n          //Se le asigna un color y un title a los profesores ya asignados.\n          $(this).closest(\"li\").addClass(\"back_asignado\");\n          $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"title\",\"Profesor Asignado\");\n\n          aula= $(this).closest(\"#no_asignado\").next().find('select').attr(\"valor\");\n          $(this).closest(\"#no_asignado\").next().find('select').val(aula);\n          $(this).closest(\"#no_asignado\").next().find('select').attr(\"title\",$(this).closest(\"#no_asignado\").next().find('select option:selected').text());\n\n        }else{\n          //Se le asigna un color y un title a los profesores pendientes de asignar.\n          $(this).closest(\"li\").addClass(\"back_modificado\");\n          $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"title\",\"Profesor pendiente de Asignar\");\n\n          aula=$(this).closest(\"fieldset\").attr(\"aula\");\n          $(this).closest(\"#no_asignado\").next().find('select').val(aula);\n          $(this).closest(\"#no_asignado\").next().find('select').attr(\"title\",$(this).closest(\"#no_asignado\").next().find('select option:selected').text());\n        }\n      }\n    });\n    var asignaturas = Array();\n    //Se asignan las asignaturas específicas opcionales.\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] div:not('.oculto') input:checkbox:checked\").each (function(){ \n      //Se comprueba si el profesor está asignado a otra asignatura opcional.\n      if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] div:not('.oculto') input[type='text']\").size()>0 && $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] div:not('.oculto') input[id='\"+id+\"']\").size()>0){\n        contenido=$(this).next(\"p\").text();\n        arr=contenido.split(\"(\");\n        asignatura=arr[0];\n\n        asignaturas.push(asignatura);\n      }\n      else{\n        div=$(this).closest(\"#no_asignado\").next();\n        //Se deshabilita del listado de aulas disponibles las aulas ya asignadas.\n        $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] #asignado:not('.oculto') select\").each (function(){ \n          aula=$(this).val();\n          if(aula!=0){\n            div.find(\"select option[value='\"+aula+\"']\").prop('disabled', true);\n          }\n        });\n\n        $(this).closest(\"#no_asignado\").addClass('oculto');\n        $(this).closest(\"#no_asignado\").next().removeClass('oculto');\n        $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"value\",profesor);\n        $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"id\",id);\n        $(this).closest(\"li\").removeClass();\n      \n        $(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").removeClass('elected');\n        $(this).prop(\"checked\", false);\n        if($(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"value\")==$(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"valor\")){\n          //Se le asigna un color y un title a los profesores ya asignados.\n          $(this).closest(\"li\").addClass(\"back_asignado\");\n          $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"title\",\"Profesor Asignado\");\n\n          $(this).closest(\"#no_asignado\").next().find('select').val(0).change();\n\n          $(this).closest(\"#no_asignado\").next().find('select').attr(\"title\",$(this).closest(\"#no_asignado\").next().find('select option:selected').text());\n\n        }else{\n\n          //Se le asigna un color y un title a los profesores pendientes de asignar.\n          $(this).closest(\"li\").addClass(\"back_modificado\");\n          $(this).closest(\"#no_asignado\").next().find('input[type=\"text\"]').attr(\"title\",\"Profesor pendiente de Asignar\");\n\n          $(this).closest(\"#no_asignado\").next().find('select').val(0).change();\n     \n          $(this).closest(\"#no_asignado\").next().find('select').attr(\"title\",$(this).closest(\"#no_asignado\").next().find('select option:selected').text());\n        \n        }\n      }\n    });\n\n    //Se comprueba si hay modificaciones para habilitar o deshabilitar los botones de \"guardar\" y \"restablecer\".\n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .back_modificado\").size()>0 || $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .eliminado\").size()>0){\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",false);\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",false);\n    }else{\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",true);\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",true);\n    }\n    // Se deshabilita el botón \"Asignar\".\n    $(\"#profesor_asignatura_grupo_dialog #btn_asignar\").addClass('disabled');\n    $(\"#profesor_asignatura_grupo_dialog #btn_asignar span\").addClass('disab');\n   \n    // Se desmarca el checkbox o se oculta si no hay más asignaturas troncales por asignar.\n    $(\"#profesor_asignatura_grupo_dialog #all\").prop(\"checked\", false);\n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[tipo='Troncal'] #no_asignado:not(.oculto)\").size()<2){\n      $(\"#profesor_asignatura_grupo_dialog #all\").addClass('oculto');\n    }\n    //Se habilita los checkbox restante por si se habían deshabilitado con las asignaturas opcionales.\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li input:checkbox\").each (function(){ \n      $(this).prop('disabled', false);\n      $(this).prop(\"checked\",false).change();\n    });\n\n    //Se elimina la clase elected del profesor seleccionado.\n    $(\"#profesor_asignatura_grupo_dialog #div_lista .elected\").removeClass('elected');\n    \n    //Se informa de que el profesor no es tutor del grupo y que no se realiza la asignacion de la tutoria del grupo al profesor.\n    if(tutoria_no_asignada==1 && !asignaturas.length){\n      texto=\"<p class='justificado'>No se puede asignar la tutoría de este grupo al profesor seleccionado ya que no es el tutor del grupo.<br></p>\"\n          error.play();\n      swal({\n        title: \"Asignación no permitida\",\n        html: texto,\n        type: \"error\",\n        width: \"500px\",\n        confirmButtonColor: color,\n        showCancelButton: false\n      });\n    }\n    //Se informa de que la asignacion de la asignatura específica opcional no se ha realizado ya que el profesor está asignado a otra.\n    else if(tutoria_no_asignada==0 && asignaturas.length){\n      texto=\"<table><p class='justificado'>La asignación siguiente no se puede realizar ya que el profesor tiene asignada una asignatura opcional en el grupo.<br></p><thead><tr><th>Profesor</th><th>Asignatura</th></tr></thead><tbody>\"\n      for (var asignatura in asignaturas) { \n        texto+=\"<tr><td>\"+profesor+\"</td><td>\"+asignaturas[asignatura]+\"</td></tr>\";\n      }\n      texto+=\"</tbody><br></p></table>\"\n\n            error.play();\n      swal({\n        title: \"Asignación no permitida\",\n        html: texto,\n        type: \"error\",\n        width: \"500px\",\n        confirmButtonColor: color,\n        showCancelButton: false\n      });\n    }\n    //Se informa los dos casos anteriores a la vez al coincidir con el mismo profesor.\n    else if(tutoria_no_asignada==1 && asignaturas.length){\n      texto=\"<table><p class='justificado'>La asignación siguiente no se puede realizar ya que el profesor tiene asignada una asignatura opcional en el grupo.<br></p><thead><tr><th>Profesor</th><th>Asignatura</th></tr></thead><tbody>\"\n      for (var asignatura in asignaturas) { \n        texto+=\"<tr><td>\"+profesor+\"</td><td>\"+asignaturas[asignatura]+\"</td></tr>\";\n      }\n      texto+=\"</tbody><br></p></table>\"\n      texto+=\"<br><p class='justificado'>Además, no se puede asignar la tutoría de este grupo al profesor ya que no es el tutor del grupo.<br></p>\"\n\n      error.play();\n      swal({\n        title: \"Asignaciones no permitidas\",\n        html: texto,\n        type: \"error\",\n        width: \"500px\",\n        confirmButtonColor: color,\n        showCancelButton: false\n      });  \n    }\n  });\n\n  // Eliminar asignación del profesor.\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas img\",function(event){\n    event.preventDefault();\n\n    $(this).closest(\"div\").addClass('oculto');\n    $(this).closest(\"div\").prev().removeClass('oculto');\n    //Se añade la clase \"eliminado\" para eliminar los registros asignados.\n    if($(this).closest(\"li\").hasClass('back_asignado')){\n      $(this).closest(\"li\").removeClass();\n      $(this).closest(\"li\").addClass(\"eliminado\");\n    }\n    else{\n      $(this).closest(\"li\").removeClass();\n    }\n\n    //Se deshabilita el aula asignada a una asignatura opcional en el listado de las otras.\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] #asignado:not('.oculto') select option\").prop('disabled', false);\n    \n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'] #asignado:not('.oculto') select\").each (function(){\n      aula=$(this).val();\n      li=$(this).closest(\"li\").attr(\"id\");\n\n      $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[opcional='1'][id!='\"+li+\"'] #asignado:not('.oculto') select\").each (function(){\n        $(this).find(\"option[value='\"+aula+\"']\").prop('disabled', true);\n      });\n    });\n\n    //Se comprueba si hay modificaciones para habilitar o deshabilitar los botones de \"guardar\" y \"restablecer\".\n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .back_modificado\").size()>0 || $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .eliminado\").size()>0){\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",false);\n      $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",false);\n    }else{\n      if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas .eliminado\").size()>0){\n        $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",false);\n      }else{\n        $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\").prop(\"disabled\",true);\n        $(\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit\").prop(\"disabled\",true);\n      }\n    }\n    // Se muestra el checkbox si hay más de una asignatura troncal por asignar.\n    if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[tipo='Troncal'] #no_asignado:not(.oculto)\").size()>1){\n      $(\"#profesor_asignatura_grupo_dialog #all\").removeClass('oculto');\n    }\n  });\n\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_restablecer\",function(event){\n    event.preventDefault();\n    $(\"#asignar_profesor #contenedor_registro:not(.oculto) img\").click();\n  });\n\n  //Guardar profesores asignados en un grupo.\n  $(document).on('click',\"#profesor_asignatura_grupo_dialog #profesor_asignatura_grupo_submit \",function(event){\n    event.preventDefault();\n\n    var asignaciones = new Object();\n    var eliminados = Array();\n\n    var index = 1;\n    // Se obtienen las asignaturas modificadas.(Insertar/Actualizar)\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[class*='back_modificado']\").each(function(){\n      id=$(this).attr(\"id\"); //Id asignatura\n      valor=$(this).find(\"input:text\").attr(\"id\"); //Id profesor\n      aula=$(this).find(\"select\").val();//Id aula\n        // Usamos un nuevo index como clave para que al recorrerlo en php no se ordene por el id asignatura\n        // Se recorre en el mismo orden introducido con el index nuevo.\n        asignaciones[index++] = [id, valor, aula];  \n    });\n\n    // Se obtienen las asignaturas que han sido eliminadas y que estaban asignadas al curso.(Eliminar)\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[class*='eliminado']\").each(function(){\n      id=$(this).attr(\"id\");\n      eliminados.push(id);\n    });\n\n    //Se avisa si no existe cambios.\n    if($.isEmptyObject(asignaciones) && $.isEmptyObject(eliminados)){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No se ha modificado ninguna asignación de profesores.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        width: \"335px\",\n        stack: right_Stack_dialog,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      return false;\n    }\n    actualizado=0;\n    $(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[class*='back_modificado']\").each(function(){\n      if($(this).find(\"input:text\").attr(\"valor\") && $(this).find(\"input:text\").attr(\"value\")!=$(this).find(\"input:text\").attr(\"valor\")){\n        actualizado=1;\n        return false;\n      }\n    });\n    grupo=$(this).closest('.dialog_button').prev().attr(\"id\"); //Id del grupo.\n    // Se muestra un aviso en caso de que se haya actualizado alguna asignación registrada. (Se eliminará el horario de dicha asignación).\n    if(actualizado){\n      aviso.play();\n      if($(\"#profesor_asignatura_grupo_dialog #contenedor_asignaturas li[class*='back_modificado']\").attr(\"opcional\")==1){\n        texto=\"<p class='justificado'>Se van a actualizar profesores asignados al grupo y se eliminará el horario de la asignatura impartida por el profesor.</p><br><p class='justificado'>Además, se va a actualizar alguna asignatura específica opcional, por lo que deberá asignar de nuevo el horario de las asignaturas específicas opcionales del grupo.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\";\n      }\n      else{\n        texto=\"<p class='justificado'>Se van a actualizar profesores asignados al grupo y se eliminará el horario de la asignatura impartida por el profesor.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\";\n      }\n      swal({\n        title: \"Actualización de Profesores en el Grupo\",\n        html: texto,\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: \"Cancelar\",\n        confirmButtonColor: color,\n        confirmButtonText: \"¡Adelante!\"}).then(function () {\n          $.ajax({\n            type: 'POST',\n            url: Routing.generate('asignar_grupo_profesores'),\n            data: { asignaciones:asignaciones, eliminados:eliminados, grupo:grupo},\n            dataType: 'json',\n            success: function(response) {\n              //Se muestra aviso si no hay nada que registrar.\n              if(response.data==null){\n                errorPNotify.play();\n                new PNotify({\n                  text:'No se ha modificado ninguna asignación de profesores.',\n                  addclass: \"custom\",\n                  type: \"error\",\n                  shadow: true,\n                  hide: true,\n                  buttons: {\n                    sticker: false,\n                    labels:{close: \"Cerrar\"}\n                  },\n                  width: \"335px\",\n                  stack: right_Stack_dialog,\n                  animate: {\n                    animate: true,\n                    in_class: \"fadeInRight\",\n                    out_class: \"fadeOutRight\",\n                  }\n                });\n              }\n\n              //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n              var1=response.asignadas;\n              var2=response.actualizadas;\n              var3=response.eliminadas;\n              text=\"\";\n              if(var1==1){\n                text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n              }\n              else if(var1>1){\n                text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n              }\n\n              if(var2==1){\n                text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n              }\n              else if(var2>1){\n                text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n              }\n\n              if(var3==1){\n                text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n              }\n              else if(var3>1){\n                text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n              }\n\n              //Se muestra aviso si hay asignaciones que no se han podido realizar debido a que los profesores no tiene horas lectivas disponibles.\n              //Se muestra aviso si hay asignaciones que contienen asignaturas específicas opcionales y el aula ya está asignada a otra opcional..\n              if(response.error!=\"\" || response.error_opcional!=\"\"){\n                texto=\"\";\n                if(response.error!=\"\"){\n                  texto+=\"<table><p class='justificado'>Las asignaciones siguientes no se han realizado ya que los profesores no tienen horas lectivas disponibles.<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\"\n                  for (var key in response.error) { \n                    texto+=\"<tr><td>\"+response.error[key][0][0]+\"</td><td>\"+response.error[key][0][1]+\"</td><td>\"+response.error[key][0][2]+\"</td></tr>\"\n                  }\n                  texto+=\"</tbody><br></p></table>\"  \n                }\n\n                if(response.error_opcional!=\"\"){\n                  if(response.error!=\"\"){\n                    texto+=\"<br>\" ;\n                  }\n                  texto+=\"<table><br><p class='justificado'>Las asignaciones siguientes no se han realizado ya que otra asignatura opcional del grupo tiene asignada el mismo aula.<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\"\n                  for (var key in response.error_opcional) { \n                    texto+=\"<tr><td>\"+response.error_opcional[key][0][0]+\"</td><td>\"+response.error_opcional[key][0][1]+\"</td><td>\"+response.error_opcional[key][0][2]+\"</td></tr>\"\n                  }\n                  texto+=\"</tbody><br></p></table>\"\n                }\n          \n                error.play();\n                swal({\n                  title: \"Asignaciones no realizadas\",\n                  type: \"error\",\n                  width: \"600px\",\n                  target: \"body\",\n                  html: texto,\n                  showCancelButton: false,\n                  confirmButtonColor: color\n                  }).then(function () {\n\n                    if(var1!=0 || var2!=0 || var3!=0){\n                      exito.play();\n                      new PNotify({\n                        text:text,\n                        addclass: \"custom\",\n                        type: \"success\",\n                        shadow: true,\n                        hide: true,\n                        width: \"335px\",\n                        animation: \"fade\",\n                        animate_speed: 'fast',\n                        delay: 4000,\n                        buttons: {\n                          sticker: false,\n                          labels:{close: \"Cerrar\"}\n                        },\n                        stack: right_Stack_dialog,\n                        animate: {\n                          animate: true,\n                          in_class: \"fadeInRight\",\n                          out_class: \"fadeOutRight\",\n                        }\n                      });\n                    }\n                    id=$(\"#asignar_profesor .lista_cursos .elected\").attr(\"id\");\n                    $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_grupo_profesores_show\"), function(){\n                      $(\"#asignar_profesor .lista_cursos button[id='\"+id+\"']\").click();\n                    });\n                    $('#profesor_asignatura_grupo_dialog').dialog('close');\n                    $(\"#asignar_horario\").update_tab();\n                    $(\"#asignar_optativa\").update_tab();\n                  }, function (dismiss) {\n\n                  }\n                );\n                return false;\n              }\n              //Se muestra el número de asignaciones si no ha habido ningún aviso anterior.\n              if(var1!=0 || var2!=0 || var3!=0){\n                exito.play();\n                new PNotify({\n                  text:text,\n                  addclass: \"custom\",\n                  type: \"success\",\n                  shadow: true,\n                  hide: true,\n                  width: \"335px\",\n                  animation: \"fade\",\n                  animate_speed: 'fast',\n                  delay: 4000,\n                  buttons: {\n                    sticker: false,\n                    labels:{close: \"Cerrar\"}\n                  },\n                  stack: right_Stack_dialog,\n                  animate: {\n                    animate: true,\n                    in_class: \"fadeInRight\",\n                    out_class: \"fadeOutRight\",\n                  }\n                });\n              }\n\n              id=$(\"#asignar_profesor .lista_cursos .elected\").attr(\"id\");\n              $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_grupo_profesores_show\"), function(){\n                $(\"#asignar_profesor .lista_cursos button[id='\"+id+\"']\").click();\n              });\n              $('#profesor_asignatura_grupo_dialog').dialog('close');\n              $(\"#asignar_horario\").update_tab();\n              $(\"#asignar_optativa\").update_tab();\n            }\n          })\n        }, function (dismiss) {\n\n        }\n      );\n    }\n    //Se realiza lo mismo sin mostrar aviso para el caso de que no exista ninguna actualización.\n    else{\n      grupo=$(this).closest('.dialog_button').prev().attr(\"id\"); //Id del grupo.\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('asignar_grupo_profesores'),\n        data: { asignaciones:asignaciones, eliminados:eliminados, grupo:grupo},\n        dataType: 'json',\n        success: function(response) {\n\n          if(response.data==null){\n            errorPNotify.play();\n\n            new PNotify({\n              text:'No se ha modificado ninguna asignación de profesores.',\n              addclass: \"custom\",\n              type: \"error\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              width: \"335px\",\n              stack: right_Stack_dialog,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n          //Se obtiene el número de asignaciones registradas, actualizadas y eliminadas.\n          var1=response.asignadas;\n          var2=response.actualizadas;\n          var3=response.eliminadas;\n          text=\"\";\n          if(var1==1){\n            text+=\" <span>\"+var1+\"  Asignación registrada <span>\";\n          }\n          else if(var1>1){\n            text+=\" <span>\"+var1+\"  Asignaciones registradas <span>\";\n          } \n\n          if(var2==1){\n            text+=\" <span>\"+var2+\"  Asignación actualizada<span>\";\n          }\n          else if(var2>1){\n            text+=\" <span>\"+var2+\"  Asignaciones actualizadas<span>\";\n          }\n\n          if(var3==1){\n            text+=\" <span>\"+var3+\"  Asignación eliminada<span>\";\n          }\n          else if(var3>1){\n            text+=\" <span>\"+var3+\"  Asignaciones eliminadas<span>\";\n          }\n\n          //Se muestra aviso si hay asignaciones que no se han podido realizar debido a que los profesores no tiene horas lectivas disponibles.\n          //Se muestra aviso si hay asignaciones que contienen asignaturas específicas opcionales y el aula ya está asignada a otra opcional..\n          if(response.error!=\"\" || response.error_opcional!=\"\"){\n            texto=\"\";\n            if(response.error!=\"\"){\n              texto+=\"<table><p class='justificado'>Las asignaciones siguientes no se han realizado ya que los profesores no tienen horas lectivas disponibles.<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\"\n              for (var key in response.error) { \n                texto+=\"<tr><td>\"+response.error[key][0][0]+\"</td><td>\"+response.error[key][0][1]+\"</td><td>\"+response.error[key][0][2]+\"</td></tr>\"\n              }\n              texto+=\"</tbody><br></p></table>\"  \n            }\n\n            if(response.error_opcional!=\"\"){\n              if(response.error!=\"\"){\n                texto+=\"<br><br>\" ;\n              }\n              texto+=\"<table><br><p class='justificado'>Las asignaciones siguientes no se han realizado ya que otra asignatura opcional del grupo tiene asignada el mismo aula.<br></p><thead><tr><th>Profesor</th><th>Asignatura</th><th>Grupo</th></tr></thead><tbody>\"\n              for (var key in response.error_opcional) { \n                texto+=\"<tr><td>\"+response.error_opcional[key][0][0]+\"</td><td>\"+response.error_opcional[key][0][1]+\"</td><td>\"+response.error_opcional[key][0][2]+\"</td></tr>\"\n              }\n              texto+=\"</tbody><br></p></table>\"\n            }\n          \n            error.play();\n            swal({\n              title: \"Asignaciones no realizadas \",\n              html: texto,\n              type: \"error\",\n              showCancelButton: false,\n              confirmButtonColor: color,\n              width: \"600px\"\n              }).then(function () {\n\n                if(var1!=0 || var2!=0 || var3!=0){\n                  exito.play();\n                  new PNotify({\n                    text:text,\n                    addclass: \"custom\",\n                    type: \"success\",\n                    shadow: true,\n                    hide: true,\n                    width: \"335px\",\n                    animation: \"fade\",\n                    animate_speed: 'fast',\n                    delay: 4000,\n                    buttons: {\n                      sticker: false,\n                      labels:{close: \"Cerrar\"}\n                    },\n                    stack: right_Stack_dialog,\n                    animate: {\n                      animate: true,\n                      in_class: \"fadeInRight\",\n                      out_class: \"fadeOutRight\",\n                    }\n                  });\n                }\n                id=$(\"#asignar_profesor .lista_cursos .elected\").attr(\"id\");\n                $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_grupo_profesores_show\"), function(){\n                  $(\"#asignar_profesor .lista_cursos button[id='\"+id+\"']\").click();\n                });\n                $('#profesor_asignatura_grupo_dialog').dialog('close');\n                $(\"#asignar_horario\").update_tab();\n                $(\"#asignar_optativa\").update_tab();\n              }, function (dismiss) {\n\n              }\n            );\n            return false;\n          }\n\n          if(var1!=0 || var2!=0 || var3!=0){\n            exito.play();\n            new PNotify({\n              text:text,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              width: \"335px\",\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack_dialog,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n\n          id=$(\"#asignar_profesor .lista_cursos .elected\").attr(\"id\");\n          $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_grupo_profesores_show\"), function(){\n            $(\"#asignar_profesor .lista_cursos button[id='\"+id+\"']\").click();\n          });\n          $('#profesor_asignatura_grupo_dialog').dialog('close');\n          $(\"#asignar_horario\").update_tab();\n          $(\"#asignar_optativa\").update_tab();\n        }\n      })\n    }\n  });\n\n  //Se elimina las asignaciones de profesores de un grupo.\n  $(document).on('click',\"#asignar_profesor #eliminar_grupo \",function(event){\n    event.preventDefault();\n\n    //Se avisa si no hay profesores asignados al grupo.\n    if($(\"#asignar_profesor #contenedor_registro:not(.oculto) tr:not(.cabecera_tipo) td[class='']\").size()==0){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay profesores asignados en el grupo.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignar_profesor #eliminar_grupo\").prop(\"disabled\",true);\n      return false;\n    }\n    nombre_grupo=$(\"#asignar_profesor .lista_cursos .elected\").text();\n    aviso.play();\n    swal({\n      title: \"Eliminación de Asignación de Profesores\",\n      html: \"<p>Se van a eliminar las asignaciones de profesores de \"+nombre_grupo+\".</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        grupo=$(\"#asignar_profesor #eliminar_grupo\").attr(\"grupo\"); //Id del grupo.\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_asignaciones_grupo'),\n          data: {grupo:grupo},\n          dataType: 'json',\n          success: function(response) {\n            if(response.data==null){\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay profesores asignados en el grupo.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n            exito.play();\n            new PNotify({\n              text:\"Se han eliminado los profesores asignados al grupo.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              width: \"335px\",\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            id=$(\"#asignar_profesor .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_grupo_profesores_show\"), function(){\n              $(\"#asignar_profesor .lista_cursos button[id='\"+id+\"']\").click();\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se elimina las asignaciones de profesores de todos los grupos.\n  $(document).on('click',\"#asignar_profesor #eliminar_todo \",function(event){\n    event.preventDefault();\n\n    //Se avisa si no hay profesores asignados en ningún grupo.\n    if($(\"#asignar_profesor #contenedor_registro tr:not(.cabecera_tipo) td[class='']\").size()==0){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay profesores asignados en ningún grupo.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignar_profesor #eliminar_todo\").prop(\"disabled\",true);\n      return false;\n    }\n    nombre_grupo=$(\"#asignar_profesor .lista_cursos .elected\").text();\n    aviso.play();\n    swal({\n      title: \"Eliminación de Asignación de Profesores\",\n      html: \"<p>Se van a eliminar las asignaciones de todos los profesores.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_todas_asignaciones_grupos'),\n          dataType: 'json',\n          success: function(response) {\n            if(response.data==null){\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay profesores asignados en ningún grupo.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n            exito.play();\n            new PNotify({\n              text:\"Se han eliminado las asignaciones de todos los profesores.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              width: \"335px\",\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            id=$(\"#asignar_profesor .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_grupo_profesores_show\"), function(){\n              $(\"#asignar_profesor .lista_cursos button[id='\"+id+\"']\").click();\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n/////////////////////////////////\n//  Asignar horarios a grupos  //\n/////////////////////////////////\n\n  //Efecto del botón pulsado en la lista.\n  $(document).on('click',\"#asignar_horario_grupos .contenido_lista button\",function(event){\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n    $(\"#asignar_horario_grupos #contenedor_registro\").addClass('oculto');\n    $(\"#asignar_horario_grupos button\").removeClass('elected');\n    $(this).addClass('elected');\n    $(\"#asignar_horario_grupos #contenedor_registro[idcurso='\"+id+\"']\").removeClass('oculto');\n\n    //Se asigna el nombre y el id del grupo al botón de eliminar horarios del grupo.\n    $(\"#asignar_horario_grupos #eliminar_grupo span\").text($(\"#asignar_horario_grupos .lista_cursos .elected\").text());\n    $(\"#asignar_horario_grupos #eliminar_grupo\").attr(\"grupo\",$(\"#asignar_horario_grupos #contenedor_registro:not(.oculto) #cabecera_lista\").attr(\"grupo\"));\n      \n    //Se muestra o se oculta el botón de Eliminar horario del grupo.\n    if($(\"#asignar_horario_grupos #contenedor_registro:not(.oculto) tr .dataTables_empty\").size()>0){\n      $(\"#asignar_horario_grupos #eliminar_grupo\").prop(\"disabled\",true);\n    }\n    else{\n      $(\"#asignar_horario_grupos #eliminar_grupo\").prop(\"disabled\",false);\n    }\n        \n    //Se muestra o se oculta la cabecera de la tabla y la información del horario seleccionada.\n    if($(\"#asignar_horario_grupos #contenedor_registro:not(.oculto) tr .dataTables_empty\").size()==0){\n      $(\"#asignar_horario_grupos #contenedor_datos\").removeClass('oculto');\n      $(\"#asignar_horario_grupos #lista_asignaturas thead\").removeClass('oculto');\n    }\n    else{\n      $(\"#asignar_horario_grupos #contenedor_datos\").addClass('oculto');\n      $(\"#asignar_horario_grupos #lista_asignaturas thead\").addClass('oculto');  \n    }\n  });\n\n  //Se muestra la información del horario al colocar el cursor sobre un módulo de clase.\n  //Se usa para evitar que se muestre la información del \"td\" que contiene las asignaturas opcionales.\n  $(document).on(\"mouseenter\",\"#asignar_horario_grupos #contenedor_registro td\", function(event){\n    event.stopPropagation(); \n  });\n\n  //Se muestra la información del horario al colocar el cursor sobre un módulo de clase.\n  $(document).on(\"mouseenter\",\"#asignar_horario_grupos #contenedor_registro td:not(.horario)\", function(event){\n    event.preventDefault();\n\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(\"#asignar_horario_grupos #contenedor_datos #sin_seleccionar\").addClass(\"oculto\");\n    \n    //Se comprueba que no es un aviso predeterminado.\n    if(!$(this).hasClass(\"dataTables_empty\")){\n      if($(this).attr(\"profesor\")){\n        profesor=$(this).attr(\"profesor\");\n      }\n      else{\n        profesor=\"(Sin asignar)\";\n      }\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #profesor\").text(profesor);\n\n      if($(this).attr(\"asignatura\")){\n        asignatura=$(this).attr(\"asignatura\");\n      }\n      else{\n        asignatura=\"(Sin asignar)\";\n      }\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #asignatura\").text(asignatura);\n\n      if($(this).attr(\"aula\")){\n        aula=$(this).attr(\"aula\");\n      }\n      else{\n        aula=\"(Sin asignar)\";\n      }\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #aula\").text(aula);\n\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado\").removeClass(\"oculto\");\n      $(\"#asignar_horario_grupos #contenedor_datos #sin_seleccionar\").addClass(\"oculto\");     \n    }\n    else{\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #profesor\").text(\"\");\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #asignatura\").text(\"\");\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #aula\").text(\"\");\n\n      $(\"#asignar_horario_grupos #contenedor_datos #seleccionado\").addClass(\"oculto\");\n      $(\"#asignar_horario_grupos #contenedor_datos #sin_seleccionar\").removeClass(\"oculto\");\n    }\n\n  });\n\n  // Se elimina la información mostrada del horario al quitar el puntero de un módulo de clase.\n  $(document).on(\"mouseleave\",\"#asignar_horario_grupos  #contenedor_registro td\", function () {\n    $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #profesor\").text(\"\");\n    $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #asignatura\").text(\"\");\n    $(\"#asignar_horario_grupos #contenedor_datos #seleccionado #aula\").text(\"\");\n\n    $(\"#asignar_horario_grupos #contenedor_datos #seleccionado\").addClass(\"oculto\");\n    $(\"#asignar_horario_grupos #contenedor_datos #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n  $(document).on('click',\"#asignar_horario_grupos a[id$='_modal']\",function(event){\n    event.preventDefault();\n    var id=$(this).closest(\"div\").attr(\"grupo\");\n    $('#asignar_horario_grupo_dialog').load(Routing.generate(\"asignar_horario_new\", {id:id}), function(){\n    }).dialog('open'); \n\n  });\n\n  //Se elimina el horario de un grupo.\n  $(document).on('click',\"#asignar_horario_grupos #eliminar_grupo \",function(event){\n    event.preventDefault();\n\n    //Se avisa si no hay horario asignado al grupo.\n    if($(\"#asignar_horario_grupos #contenedor_registro:not(.oculto) tr .dataTables_empty\").size()>0){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay horario asignado al grupo.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignar_horario_grupos #eliminar_grupo\").prop(\"disabled\",true);\n      return false;\n    }\n    nombre_grupo=$(\"#asignar_horario_grupos .lista_cursos .elected\").text();\n    aviso.play();\n    swal({\n      title: \"Eliminación de Horarios de Grupos\",\n      html: \"<p>Se va a eliminar el horario de <span class='negrita'>\"+nombre_grupo+\"</span>.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        grupo=$(\"#asignar_horario_grupos #eliminar_grupo\").attr(\"grupo\"); //Id del grupo.\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_horario_grupo'),\n          data: {grupo:grupo},\n          dataType: 'json',\n          success: function(response) {\n            if(response.data==null){\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay horario asignado al grupo.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n            exito.play();\n            new PNotify({\n              text:\"Se ha eliminado el horario asignado al grupo.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              animation: \"fade\",\n              width: \"335px\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            id=$(\"#asignar_horario_grupos .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_horario_show\"), function(){\n              $(\"#asignar_horario_grupos .lista_cursos button[id='\"+id+\"']\").click();\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se elimina los horarios de todos los grupos.\n  $(document).on('click',\"#asignar_horario_grupos #eliminar_todo \",function(event){\n    event.preventDefault();\n\n    //Se avisa si no hay horarios en ningún grupo.\n    if($(\"#asignar_horario_grupos #contenedor_registro\").size()==$(\"#asignar_horario_grupos #contenedor_registro tr .dataTables_empty\").size()){\n      $(\".ui-pnotify\").remove();\n\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay horarios asignados a ningún grupo.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignar_horario_grupos #eliminar_todo\").prop(\"disabled\",true);\n      return false;\n    }\n    nombre_grupo=$(\"#asignar_horario_grupos .lista_cursos .elected\").text();\n    aviso.play();\n    swal({\n      title: \"Eliminación de Horarios de Grupos\",\n      html: \"<p>Se van a eliminar los horarios de todos los grupos.</p><br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('eliminar_todos_horarios_grupos'),\n          dataType: 'json',\n          success: function(response) {\n            if(response.data==null){\n              errorPNotify.play();\n\n              new PNotify({\n                text:'No hay horarios asignados a ningún grupo.',\n                addclass: \"custom\",\n                type: \"error\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n              return false;\n            }\n            exito.play();\n            new PNotify({\n              text:\"Se han eliminado los horarios de todos los grupos.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              width: \"335px\",\n              animation: \"fade\",\n              animate_speed: 'fast',\n              delay: 4000,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            id=$(\"#asignar_horario_grupos .lista_cursos .elected\").attr(\"id\");\n            $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_horario_show\"), function(){\n              $(\"#asignar_horario_grupos .lista_cursos button[id='\"+id+\"']\").click();\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se abre una ventana para seleccionar el tipo de documento a descargar.\n  $(document).on('click',\"#asignar_horario_grupos #horario_pdf img \",function(event){\n    event.preventDefault();\n    id=$(this).closest(\"#contenedor_registro\").find(\"#cabecera_lista\").attr(\"grupo\");\n    $('#generar_horarios_pdf').load(Routing.generate(\"generar_horarios_pdf\", {id:id}), function(){\n    }).dialog('open'); \n  });\n\n  //Se ejecuta el controlador para la descarga el horario del grupo en PDF.\n  $(document).on('click',\"#generar_horarios_pdf #btn_horario_grupo \",function(event){\n    event.preventDefault();\n    id=$(this).attr(\"grupo\");\n    window.open(Routing.generate('horario_grupo_pdf', {id:id}),\"_self\");\n    $(\"#asignar_horario_grupos #cargando_horario_pdf\").removeClass('oculto');\n    $(\"#asignar_horario_grupos #horario_pdf\").addClass('oculto');\n    setTimeout(function() {\n      $(\"#generar_horarios_pdf\").load(Routing.generate('horario_grupo_pdf', {id:id}), function(){\n        $(\"#asignar_horario_grupos #cargando_horario_pdf\").addClass('oculto');\n        $(\"#asignar_horario_grupos #horario_pdf\").removeClass('oculto');\n        $('#generar_horarios_pdf').empty();\n      });\n    },20);\n    $('#generar_horarios_pdf').dialog('close');\n  });\n\n  //Se ejecuta el controlador para la descarga todos los horarios en PDF.\n  $(document).on('click',\"#generar_horarios_pdf #btn_horarios \",function(event){\n    event.preventDefault();\n    window.open(Routing.generate('horarios_grupos_pdf'),'_self');\n    $(\"#asignar_horario_grupos #cargando_horario_pdf\").removeClass('oculto');\n    $(\"#asignar_horario_grupos #horario_pdf\").addClass('oculto');\n    setTimeout(function() {\n      $(\"#generar_horarios_pdf\").load(Routing.generate('horarios_grupos_pdf'), function(){\n        $(\"#asignar_horario_grupos #cargando_horario_pdf\").addClass('oculto');\n        $(\"#asignar_horario_grupos #horario_pdf\").removeClass('oculto');\n        $('#generar_horarios_pdf').empty();\n      });\n    },20);\n    $('#generar_horarios_pdf').dialog('close');\n\n  });\n  \n  //Se elimina una asignatura de la lista.\n  $(document).on(\"click\",\"#asignar_horario_grupo_dialog li span\",function(event){\n    event.preventDefault();\n    //Se establece el padding para los elementos en la lista.\n    $(this).closest(\"li\").css(\"padding\",\"7px\");\n\n    //Se añade la clase eliminada a la lista cuando anteriormente tenía una asignatura asiganada.\n    if($(this).closest(\"ul\").attr(\"carga\")){\n      $(this).closest(\"ul\").removeClass('asignada');\n      $(this).closest(\"ul\").removeClass('modificada');\n      $(this).closest(\"ul\").addClass('eliminada');\n    }\n    else{\n      $(this).closest(\"ul\").removeClass('modificada');\n      $(this).closest(\"ul\").removeClass('eliminada');\n    }\n\n    id=$(this).closest(\"li\").attr(\"id\");\n    //Se pasa el elemento de la lista a su posición inicial en la lista de asignaturas y se muestra la lista que estaba oculta.\n    $(this).closest(\"li\").appendTo('#asignar_horario_grupo_dialog #pie_horario ul[asig=\"'+id+'\"]');\n    $('#asignar_horario_grupo_dialog #pie_horario ul[asig=\"'+id+'\"]').removeClass('oculto');\n    //Se actualiza el nombre por las siglas, se elimina el efecto sombra y el elemento span.\n    $(this).closest(\"li\").text($(this).closest(\"li\").attr(\"siglas\"));\n    $(this).remove();\n    $(\"#asignar_horario_grupo_dialog #pie_horario li\").removeClass('box-shadow');\n\n    //Se añade la clase \"sortable\" a las listas de la tabla y se elimina luego a las listas que tienen asignatura asignada para que no pueda añadirse otra.\n    $(\"#asignar_horario_grupo_dialog #tabla_horario ul\").addClass('sortable');\n    $(\"#asignar_horario_grupo_dialog #tabla_horario li\").closest(\"ul\").removeClass('sortable');\n\n    //Se comprueba si hay modificación para mostrar los botones. \n    $(\"#asignar_horario_grupo_dialog #horario_grupo_submit\").prop(\"disabled\",true);\n    $(\"#asignar_horario_grupo_dialog #horario_grupo_restablecer\").prop(\"disabled\",true);\n\n    if($(\"#asignar_horario_grupo_dialog #tabla_horario td ul\").hasClass('eliminada') || $(\"#asignar_horario_grupo_dialog #tabla_horario td ul\").hasClass('modificada') ){\n      $(\"#asignar_horario_grupo_dialog #horario_grupo_submit\").prop(\"disabled\",false);\n      $(\"#asignar_horario_grupo_dialog #horario_grupo_restablecer\").prop(\"disabled\",false);\n    }\n\n    //Se elimina la clase \"rojo\" de las celdas donde hay una asignatura asignada, por si permanece alguna. \n    $(\"#asignar_horario_grupo_dialog #tabla_horario li\").closest(\"td\").removeClass('rojo');\n\n  });\n\n\n  //Se muestra la info de la asignatura.\n  $(document).on(\"mouseenter\",\"#asignar_horario_grupo_dialog li\", function(){\n    //Se comprueba que tenga el atributo id para que no se mande 0, que es el valor del id del elemento \"opcional\".\n    if($(this).attr(\"id\")){\n      $(\"#asignar_horario_grupo_dialog #contenedor_info\").load(Routing.generate('datos_asignatura', {id:$(this).attr(\"id\"),id_grupo:$(this).closest(\"fieldset\").attr(\"id\")}), function(){\n      });\n    }\n  });\n\n  //Se obtiene los módulos no disponible para la asignaruta seleccionada y se muestra en el horario editable.\n  $(document).on(\"mousedown\",\"#asignar_horario_grupo_dialog li\", function(event){\n    //Se eliminan todos los iconos añadidos a las celdas anteriormente, para evitar que aparezcan varios al presionar varias veces el ratón.\n    $(\"#asignar_horario_grupo_dialog #tabla_horario td img\").remove();\n    //Se hace clicksi se mantiene el ratón en el span.\n    if($(event.target).is('span')){\n      $(this).find(\"span\").click();\n      $(this).mouseup();\n      $(\"#asignar_horario_grupo_dialog #tabla_horario li\").closest(\"td\").removeClass('rojo');\n      return false;\n    }\n    //Se comprueba que se pulsa el botón derecho del ratón.\n    if(event.which == 1){\n      //Se elimina la clase \"bloqueo\" que se añade a los módulos no disponibles.\n      $(\"#asignar_horario_grupo_dialog #tabla_horario td\").removeClass('bloqueo');\n      //Se devuelve a su sitio todas las listas que han podido quedar en \"listas_nulas\" tras moverlas al obtener los módulos no disponibles.\n      $(\"#asignar_horario_grupo_dialog #listas_nulas ul\").each (function(){ \n        $(this).appendTo($(\"#asignar_horario_grupo_dialog #tabla_horario tr[id='\"+$(this).attr(\"horario\")+\"'] td[id='\"+$(this).attr(\"dia\")+\"']\"));\n      }); \n      //Se añade la clase \"move\" al elemento seleccionado para comprobar si entra por error en un módulo no disponible al mover el ratón rapidamente.\n      //$(this).addClass('move');\n\n      //Se obtiene los módulos donde el profesor no puede impartir clase.\n      v_profesor=$(this).attr(\"profesor\");\n      v_aula=$(this).attr(\"aula\");\n      grupo=$(this).closest(\"fieldset\").attr(\"id\");\n      var profesor= Array();\n      var aula= Array();\n      if($(this).attr(\"id\")!=0){\n        profesor.push(v_profesor);\n        aula.push(v_aula);\n      }\n      else{\n        arr_prof=v_profesor.split('-');\n        arr_aul=v_aula.split('-');\n\n        for (var key in arr_prof) {\n          profesor.push(arr_prof[key]);\n        }\n\n        if(arr_aul.length==1 && arr_aul[0]==\"\"){\n          aula.push(arr_aul[0]);\n        }else{\n          for (var key in arr_aul) {\n            aula.push(arr_aul[key]);\n          }\n        }\n      }\n\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('obtener_modulos_ocupados'),\n        data: {profesor:profesor, aula:aula, grupo:grupo},\n        dataType: 'json',\n        success: function(response) {\n          //Se obtiene los módulos donde el profesor está ocupado.\n          for (var key in response.profesor){\n            dia=key;\n            horario=response.profesor[key];\n            //Se obtiene la lista no permitida de la tabla.\n            ul=$(\"#asignar_horario_grupo_dialog #tabla_horario tr[id='\"+horario+\"'] td[id='\"+dia+\"'] ul\");\n            //Se añade la clase \"bloqueo\" a la celda de la lista no permitida, para no permitir insertar un elemento o comprobar posibles errores.\n            ul.closest(\"td\").addClass('bloqueo');\n            //Se comprueba que la la lista no tenga una asignatura ya asignada.\n            //Para que no se inserte elelemento li seleccionado al mover el cursor rápidamente, comprobamos que la lista existente no tenga la clase \"ui-state-highligh\" del placeholder.\n            if(ul.find(\"li\").size()==0 || (ul.find(\"li\").size()>0 && ul.find(\"li\").hasClass('ui-state-highligh'))){\n                //Se elimina la clase del placeholder de la celda por si se permanece al soltar.\n                ul.closest(\"td\").removeClass('placeholder_list_table_td');\n                //Se añade la clase \"rojo\" para mostrar el color de la celda no disponible de la tabla.\n                ul.closest(\"td\").addClass('rojo');\n                //Se añade el icono del profesor para indicar que el profesor está ocupado en dicho módulo.\n                ul.closest(\"td\").append(\"<img src='/Symfony/web/bundles/backend/images/menu/teacher_no_dis.png'>\");\n                //Desplazamos la lista no permitida al div \"listas_nulas\", para que no se pueda insertar ningún elemento.\n                ul.appendTo('#listas_nulas');\n            }\n          }\n          //Se obtiene los módulos donde el aula está ocupada.\n          for (var key in response.aula){\n\n            dia=key;\n            horario=response.aula[key];\n          \n            //Se comrpueba  si la lista sigue en la celda de la tabla, por si se ha desplazado anteriormente comprobando al profesor.\n            if($(\"#asignar_horario_grupo_dialog #tabla_horario tr[id='\"+horario+\"'] td[id='\"+dia+\"'] ul\").size()>0){\n              //Se obtiene la lista no permitida de la tabla.\n              ul=$(\"#asignar_horario_grupo_dialog #tabla_horario tr[id='\"+horario+\"'] td[id='\"+dia+\"'] ul\");\n              //Se añade la clase \"bloqueo\" a la celda de la lista no permitida, para no permitir insertar un elemento o comprobar posibles errores.\n              ul.closest(\"td\").addClass('bloqueo');\n              //Se comprueba que la la lista no tenga una asignatura ya asignada.\n              //Para que no se inserte elelemento li seleccionado al mover el cursor rápidamente, comprobamos que la lista existente no tenga la clase \"ui-state-highligh\" del placeholder.\n              if(ul.find(\"li\").size()==0 || (ul.find(\"li\").size()>0 && ul.find(\"li\").hasClass('ui-state-highligh'))){\n                //Se elimina la clase del placeholder de la celda por si se permanece al soltar.\n                ul.closest(\"td\").removeClass('placeholder_list_table_td');\n                //Se añade la clase \"rojo\" para mostrar el color de la celda no disponible de la tabla.\n                ul.closest(\"td\").addClass('rojo');\n                //Se añade el icono del profesor para indicar que el aula está ocupada en dicho módulo.\n                ul.closest(\"td\").append(\"<img src='/Symfony/web/bundles/backend/images/menu/room_no_dis.png'>\");\n                //Desplazamos la lista no permitida al div \"listas_nulas\", para que no se pueda insertar ningún elemento.\n                ul.appendTo('#listas_nulas');\n              }\n            }//Si ya estaba desplazada, solo hay que añadir el icono para indicar que el aula está ocupada en dicho módulo.\n            else{\n              $(\"#asignar_horario_grupo_dialog #tabla_horario tr[id='\"+horario+\"'] td[id='\"+dia+\"']\").append(\"<img src='/Symfony/web/bundles/backend/images/menu/room_no_dis.png'>\");\n            }\n          }\n        } \n      })\n      //Se elimina la clase \"rojo\" de las celdas donde hay una asignatura asignada, por si anteriormente se no se eliminase. \n      $(\"#asignar_horario_grupo_dialog #tabla_horario li\").closest(\"td\").removeClass('rojo');\n    }\n  });\n\n  //Se elimina toda la información de los módulos no disponible al soltar el elemento.\n  $(document).on(\"mouseup\",\"#asignar_horario_grupo_dialog li\", function(){\n    //Se eliminan todos los iconos añadidos a las celdas anteriormente.\n    $(\"#asignar_horario_grupo_dialog #tabla_horario td img\").remove();\n\n    //Se le añade un retraso para que se comprueba todo bien una vez acabada la asignación.\n    setTimeout(function() {\n      //Se devuelven a su posición anterior los elementos que se hayan podido quedar almacenados en \"listas_nulas\" por movimientos rápidos de ratón.\n      $(\"#asignar_horario_grupo_dialog #tabla_horario #listas_nulas li\").each (function(){\n        //Se comprueba si estaba en una celda o en la lista inicial de asignaturas.\n        if(dia==0 && horario==0){//Lista Inicial\n          id=$(this).attr(\"id\");\n          $(this).appendTo('#asignar_horario_grupo_dialog #tabla_horario li[asig=\"'+id+'\"]');\n          $('#asignar_horario_grupo_dialog #tabla_horario li[asig=\"'+id+'\"]').removeClass('oculto');\n          error.play();\n        }\n        else{//Celda de la tabla.\n          dia=$(this).attr(\"dia\");\n          horario=$(this).attr(\"horario\");\n          $(this).appendTo('#asignar_horario_grupo_dialog #tabla_horario tr[id=\"'+horario+'\"] td[id=\"'+dia+'\"] ul');\n          error.pause();\n          error.currentTime=0.0;\n          error.play();\n        }\n      });  \n\n      //Se devuelven a su posición anterior los elementos que se hayan podido quedar almacenados en una lista no disponible por movimientos rápidos de ratón.\n      //Se realiza para cada elemento insertado en una celda con la clase \"bloqueo\" añadida anteriormente a todas las celdas no disponibles.\n      $(\"#asignar_horario_grupo_dialog #tabla_horario .bloqueo li\").each (function(){\n        //Se comprueba si estaba en una celda o en la lista inicial de asignaturas.\n        if(dia==0 && horario==0){//Lista Inicial\n          id=$(this).attr(\"id\");\n          $(this).appendTo('#asignar_horario_grupo_dialog #tabla_horario li[asig=\"'+id+'\"]');\n          $('#asignar_horario_grupo_dialog #tabla_horario li[asig=\"'+id+'\"]').removeClass('oculto');\n        }\n        else{//Celda de la tabla.\n          dia=$(this).attr(\"dia\");\n          horario=$(this).attr(\"horario\");\n          $(this).appendTo('#asignar_horario_grupo_dialog #tabla_horario tr[id=\"'+horario+'\"] td[id=\"'+dia+'\"] ul');\n          error.pause();\n          error.currentTime=0.0;\n          error.play();\n        }\n      });\n\n      //Se devuelve a su posición inicial todas las listas no disponibles almacenadas en \"listas_nulas\".\n      $(\"#asignar_horario_grupo_dialog #listas_nulas ul\").each (function(){ \n        $(this).appendTo($(\"#asignar_horario_grupo_dialog #tabla_horario tr[id='\"+$(this).attr(\"horario\")+\"'] td[id='\"+$(this).attr(\"dia\")+\"']\"));\n      }); \n      //Se elimina la clase \"rojo\" de todas las celdas.\n      $(\"#asignar_horario_grupo_dialog #tabla_horario td\").removeClass('rojo');\n      //Se eliminan todos los iconos añadidos a las celdas anteriormente.\n      $(\"#asignar_horario_grupo_dialog #tabla_horario td img\").remove();\n    },150);\n  });\n\n  //Se restablece el horario editable del grupo.\n  $(document).on(\"click\",\"#asignar_horario_grupo_dialog #horario_grupo_restablecer\", function(event){\n    event.preventDefault();\n    $(\"#asignar_horario_grupos #contenedor_registro:not(.oculto) #añadir_modal #img_2\").click();\n  });\n\n\n  //Se guarda el horario editado del grupo.\n  $(document).on(\"click\",\"#asignar_horario_grupo_dialog #horario_grupo_submit\", function(event){\n    event.preventDefault();\n\n    var modificadas = new Object();\n    var eliminadas = new Object();\n    \n    var index = 1;\n    // Se obtienen las asignaturas modificadas.(Nuevas/actualizadas)\n    $(\"#asignar_horario_grupo_dialog #tabla_horario ul[class*='modificada']\").each(function(){\n\n      id=$(this).find(\"li\").attr(\"id\");\n      dia=$(this).attr(\"dia\");\n      horario=$(this).attr(\"horario\");\n      modificadas[index++] = [id, dia, horario];  \n    });\n\n    var index = 1;\n    // Se obtienen las asignaturas eliminadas.\n    $(\"#asignar_horario_grupo_dialog #tabla_horario ul[class*='eliminada']\").each(function(){\n\n      id=$(this).attr(\"carga\");\n      dia=$(this).attr(\"dia\");\n      horario=$(this).attr(\"horario\");\n      eliminadas[index++] = [id, dia, horario];  \n    });\n\n    //Si no existe cambios se avisa.\n    if($.isEmptyObject(modificadas) && $.isEmptyObject(eliminadas)){\n      $('#asignatura_curso_dialog').dialog('close');\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No hay modificaciones en el horario para este grupo.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack_dialog ,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      $(\"#asignar_horario_grupo_dialog #horario_grupo_submit\").prop(\"disabled\",true);\n      $(\"#asignar_horario_grupo_dialog #horario_grupo_restablecer\").prop(\"disabled\",true);\n      return false;\n    }\n\n    grupo=$(this).closest(\".dialog_button\").prev().attr(\"id\");\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('asignar_horario_grupo'),\n      data: {grupo:grupo, modificadas:modificadas, eliminadas:eliminadas},\n      dataType: 'json',\n      success: function(response) {\n        if(response.data==null){\n          ('#asignar_horario_grupo_dialog').dialog('close');\n          errorPNotify.play();\n\n          new PNotify({\n            text:'No hay modificaciones en el horario para este grupo.',\n            addclass: \"custom\",\n            type: \"error\",\n            shadow: true,\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack_dialog,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          return false;\n        }\n      \n        $(\".ui-pnotify\").remove();\n\n        exito.play();\n        new PNotify({\n          text:\"Horario del grupo actualizado.\",\n          addclass: \"custom\",\n          type: \"success\",\n          shadow: true,\n          width: \"335px\",\n          hide: true,\n          buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n          },\n          stack: right_Stack_dialog,\n          animate: {\n            animate: true,\n            in_class: \"fadeInRight\",\n            out_class: \"fadeOutRight\",\n          }\n        });\n      \n        id=$(\"#asignar_horario_grupos .lista_cursos .elected\").attr(\"id\");\n        $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"asignar_horario_show\"), function(){\n          $(\"#asignar_horario_grupos .lista_cursos button[id='\"+id+\"']\").click();\n        });\n\n        $('#asignar_horario_grupo_dialog').dialog('close');\n        \n        //Actualización de la pestaña.\n        $(\"#clases_impartidas\").update_tab();\n      }\n    })\n  });\n\n\n//////////////////////////////////////\n//  Clases Impartidas por Profesor  //\n//////////////////////////////////////\n\n  //Efecto del botón pulsado en la lista de profesores.\n  $(document).on('click',\"#clases_impartidas .contenido_lista button\",function(event){\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n    $(\"#clases_impartidas #contenedor_registro\").addClass('oculto');\n    $(\"#clases_impartidas button\").removeClass('elected');\n    $(this).addClass('elected');\n    $(\"#clases_impartidas #contenedor_registro[index='\"+id+\"']\").removeClass('oculto');\n  });\n\n  //Se muestra la información del horario al colocar el cursor sobre un módulo de clase.\n  $(document).on(\"mouseenter\",\"#clases_impartidas #contenedor_registro td:not(.horario)\", function(event){\n    event.preventDefault();\n\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(\"#clases_impartidas #contenedor_datos #sin_seleccionar\").addClass(\"oculto\");\n    \n    //Se comprueba que no es un aviso predeterminado.\n    if(!$(this).hasClass(\"dataTables_empty\")){\n      if($(this).attr(\"asignatura\")){\n        asignatura=$(this).attr(\"asignatura\");\n      }\n      else{\n        asignatura=\"(Sin asignar)\";\n      }\n      $(\"#clases_impartidas #contenedor_datos #seleccionado #asignatura\").text(asignatura);\n\n      if($(this).attr(\"aula\")){\n        aula=$(this).attr(\"aula\");\n      }\n      else{\n        aula=\"(Sin asignar)\";\n      }\n      $(\"#clases_impartidas #contenedor_datos #seleccionado #aula\").text(aula);\n\n      if($(this).attr(\"curso\")){\n        curso=$(this).attr(\"curso\");\n      }\n      else{\n        curso=\"(Sin asignar)\";\n      }\n      $(\"#clases_impartidas #contenedor_datos #seleccionado #curso\").text(curso);\n\n      $(\"#clases_impartidas #contenedor_datos #seleccionado\").removeClass(\"oculto\");\n      $(\"#clases_impartidas #contenedor_datos #sin_seleccionar\").addClass(\"oculto\");     \n    }\n    else{\n      $(\"#clases_impartidas #contenedor_datos #seleccionado #asignatura\").text(\"\");\n      $(\"#clases_impartidas #contenedor_datos #seleccionado #aula\").text(\"\");\n      $(\"#clases_impartidas #contenedor_datos #seleccionado #curso\").text(\"\");\n\n      $(\"#clases_impartidas #contenedor_datos #seleccionado\").addClass(\"oculto\");\n      $(\"#clases_impartidas #contenedor_datos #sin_seleccionar\").removeClass(\"oculto\");\n    }\n\n  });\n\n  // Se elimina la información mostrada del horario al quitar el puntero de un módulo de clase.\n  $(document).on(\"mouseleave\",\"#clases_impartidas  #contenedor_registro td\", function () {\n    $(\"#clases_impartidas #contenedor_datos #seleccionado #asignatura\").text(\"\");\n    $(\"#clases_impartidas #contenedor_datos #seleccionado #aula\").text(\"\");\n    $(\"#clases_impartidas #contenedor_datos #seleccionado #curso\").text(\"\");\n\n    $(\"#clases_impartidas #contenedor_datos #seleccionado\").addClass(\"oculto\");\n    $(\"#clases_impartidas #contenedor_datos #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n  //Se ejecuta el controlador para la descarga el horario del profesor en PDF.\n  $(document).on('click',\"#clases_impartidas #horario_pdf img \",function(event){\n    event.preventDefault();\n    id=$(this).closest(\"#contenedor_registro\").find(\"#cabecera_lista\").attr(\"profesor\");\n    window.open(Routing.generate('horario_profesor_pdf', {id:id}),\"_self\");\n    $(\"#asignar_horario_grupos #cargando_horario_pdf\").removeClass('oculto');\n    $(\"#asignar_horario_grupos #horario_pdf\").addClass('oculto');\n    setTimeout(function() {\n      $(\"#generar_horarios_pdf\").load(Routing.generate('horario_profesor_pdf', {id:id}), function(){\n        $(\"#asignar_horario_grupos #cargando_horario_pdf\").addClass('oculto');\n        $(\"#asignar_horario_grupos #horario_pdf\").removeClass('oculto');\n        $('#generar_horarios_pdf').empty();\n      });\n    },20);\n    $('#generar_horarios_pdf').dialog('close');\n  });\n\n\n/////////////////////////////////////////\n//  Asignación de Asignatura Opcional  //\n/////////////////////////////////////////\n\n  // Se muestra la lista de alumnos sin asignación de la asignatura opcional.\n  $(document).on('click',\"#asignar_optativa #btn_no_asignados\",function(event){\n    $(\"#asignar_optativa #asignados\").addClass(\"oculto\");\n    $(\"#asignar_optativa #no_asignados\").removeClass(\"oculto\");\n\n    //Se cambia los estilos según el scroll vertical.\n    if( $(\"#asignar_optativa  #no_asignados\").find('table tbody').get(0).scrollHeight>$(\"#asignar_optativa #no_asignados\").find('table tbody').height()){\n        $(\"#asignar_optativa #no_asignados\").find(\"table thead tr>th:last-child\").attr('style', 'width: 10.5% !important');\n    }\n    else{\n        $(\"#no_asignados\").find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n  // Se muestra la lista de alumnos con asignación de la asignatura opcional.\n  $(document).on('click',\"#asignar_optativa #btn_asignados\",function(event){\n\n    $(\"#asignar_optativa #no_asignados\").addClass(\"oculto\");\n    $(\"#asignar_optativa #asignados\").removeClass(\"oculto\");\n\n    //Se cambia los estilos según el scroll vertical.\n\n    if( $(\"#asignar_optativa #asignados\").find('table tbody').get(0).scrollHeight>$(\"#asignar_optativa #asignados\").find('table tbody').height()){\n        $(\"#asignar_optativa #asignados\").find(\"table thead tr>th:last-child\").attr('style', 'width: 10% !important');\n    }\n    else{\n        $(\"#asignar_optativa #asignados\").find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n\n  // Se muestra la información del alumno.\n  $(document).on(\"mouseenter\",\"#asignar_optativa .scrollContent tr\", function () {\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #sin_seleccionar\").addClass(\"oculto\");\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").removeClass(\"oculto\");\n\n    tr=$(this);\n    alumno=$(this).attr(\"id\");\n\n    tr.closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").load(Routing.generate('datos_alumno_optativas', {id:tr.attr(\"id\")}), function(){\n        });\n  });\n\n  // Se elimina la información mostrada del alumno al quitar el puntero.\n  $(document).on(\"mouseleave\",\"#asignar_optativa .scrollContent tr\", function () {\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").addClass(\"oculto\");\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #seleccionado\").empty();\n    $(this).closest(\"div[class*='contenedor_registro']\").find(\".contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n\n  // Se modifica el select de búsqueda de antiguo alumno.\n  $(document).on('change','#asignar_optativa #lista_cursos select',function(event) {\n    event.preventDefault();\n    div=$(this).closest(\"div[class*='asignar_optativa']\");\n    //Se reemplaza el nombre del select añadiendo también una separación antes del \"de\" para que funcione bien la búsqueda.\n    curso=$(this).find(\"option:selected\").text().replace(\" de\", \"\");\n\n    //Se elimina el contenido del buscador cuando se selecciona un curso para la búsqueda.\n    div.find(\"#buscador input\").val(\"\"); \n    div.find(\"#buscador input\").keyup(); \n    \n    //Se asigna el select correspondiente a \"Curso Matriculado\".\n    id=1; \n\n    valor=div.find(\"#lista_cursos select option:selected\").val();\n    // Se modifica el valor en las dos listas.\n    if($(\".lista_asignados select option:selected\").val()!= $(\".lista_no_asignados select option:selected\").val()){\n      $(\"#asignar_optativa #lista_cursos select\").val(valor).change();\n    }\n    // Se selecciona el option del select oculto con z-index para filtrar el curso.\n    if(div.find(\"select[class='\"+id+\"'] option[value='\"+curso+\"']\").length){\n      div.find(\"#buscador input\").prop(\"disabled\",false);    \n      // Se selecciona y se muestra con change().\n      div.find(\"select[class='\"+id+\"']\").val(curso).change();\n    }\n    else if($(this).find(\"option:selected\").text()==\"Todos los cursos\"){\n      div.find(\"#buscador input\").prop(\"disabled\",false);\n      div.find(\"select[class='\"+id+\"']\").val(\"\").change();\n    }\n    else{\n      div.find(\"tbody\").empty();\n      div.find(\"tbody\").append(\"<tr class='odd no_cursor'><td class='dataTables_empty'>Actualmente no existe antiguos alumnos para el curso seleccionado</td></tr>\");\n      div.find(\"thead tr th\").removeClass(\"sorting_asc\");\n      div.find(\"#buscador input\").prop(\"disabled\",true);\n    }\n    //Se cambia los estilos según el scroll vertical.\n    if( div.find('table tbody').get(0).scrollHeight>div.find('table tbody').height()){\n        div.find(\"table thead tr>th:last-child\").attr('style', 'width: 10% !important');\n    }\n    else{\n        div.find(\"table thead tr>th:last-child\").attr('style', 'width: 9% !important');\n    }\n  });\n\n  //Selección de la optativa en la tabla de alumnos sin optativa asignada.\n  $(document).on('click',\"#asignar_optativa #no_asignados table button\",function(event){ \n    td= $(this).closest(\"td\");\n\n    // Se marca la asignatura seleccionada.\n    if(!$(this).hasClass(\"elected\")){\n      td.find(\"button\").removeClass(\"elected\"); \n      $(this).addClass(\"elected\");\n\n      //Se habilita el botón de guardar.\n      $(\"#asignar_optativa #no_asignados #enviar_select button\").prop(\"disabled\",false);\n    }\n    else{\n      $(this).removeClass(\"elected\"); \n      if($(\"#asignar_optativa #no_asignados .elected\").size()==0){\n        //Se deshabilita el botón de guardar.\n        $(\"#asignar_optativa #no_asignados #enviar_select button\").prop(\"disabled\",true);\n      }\n    }\n });\n\n  //Cambio del color de los botones de optativas en la tabla.\n  $(document).on('mouseenter','#asignar_optativa table tbody button',function(event) {\n    $(this).attr('style', 'background:'+$(this).attr(\"color\"));\n  });\n    \n  $(document).on('mouseleave','#asignar_optativa table tbody button',function(event) {\n    $(this).attr('style', 'background: ');\n  });\n\n  //Selección de la optativa en la tabla de alumnos con optativa asignada.\n  $(document).on('click',\"#asignar_optativa #asignados table button\",function(event){ \n    td= $(this).closest(\"td\");\n    // Se marca la asignatura seleccionada.\n    if(!$(this).hasClass(\"elected\")){\n      td.find(\"button\").removeClass(\"elected\"); \n      $(this).addClass(\"elected\");\n\n      //Se habilita el botón de guardar.\n      $(\"#asignar_optativa #asignados #enviar_select button\").prop(\"disabled\",false);\n\n      if($(\"#asignar_optativa #asignados .elected:not(.asignada)\").size()==0){\n        //Se deshabilita el botón de guardar.\n        $(\"#asignar_optativa #asignados #enviar_select button\").prop(\"disabled\",true);\n      }\n    }\n  });\n\n  //Se guardan las optativas asignadas de la tabla donde se pulse el botón.\n  $(document).on('click',\"#asignar_optativa #enviar_select button\",function(event){ \n    container=$(this).closest(\".asignar_optativa\");\n\n    asignadas = new Object();\n\n    container.find(\"table tbody tr .elected:not(.asignada)\").each (function(){ \n      alumno=$(this).closest(\"tr\").attr(\"id\");\n      optativa=$(this).attr(\"id\");\n\n      asignadas[alumno] = [optativa]; \n    });\n\n    //Se comprueba que hay asignaciones.\n    if($.isEmptyObject(asignadas)){\n      errorPNotify.play();\n\n      new PNotify({\n        text:'No se ha asignado optativa a ningún alumno.',\n        addclass: \"custom\",\n        type: \"error\",\n        shadow: true,\n        hide: true,\n        buttons: {\n          sticker: false,\n          labels:{close: \"Cerrar\"}\n        },\n        stack: right_Stack,\n        animate: {\n          animate: true,\n          in_class: \"fadeInRight\",\n          out_class: \"fadeOutRight\",\n        }\n      });\n      container.find(\" #enviar_select button\").prop('disabled', 'true');\n      return false;\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('asignar_optativa'),\n      data: {asignadas:asignadas},\n      dataType: 'json',\n      success: function(response) {\n        if(response.data==null){\n          errorPNotify.play();\n\n          new PNotify({\n            text:'No se ha asignado optativa a ningún alumno.',\n            addclass: \"custom\",\n            type: \"error\",\n            shadow: true,\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          container.find(\" #enviar_select button\").prop('disabled', 'true');\n          return false;\n        }\n      \n        $(\".ui-pnotify\").remove();\n        exito.play();\n\n        if(response.num==1){\n          new PNotify({\n            text:\"1 asignación realizada.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            width: \"335px\",\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack_dialog,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n        }\n        else{\n          new PNotify({\n            text:response.num+\" asignaciones realizadas.\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            width: \"335px\",\n            hide: true,\n            buttons: {\n              sticker: false,\n              labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack_dialog,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n        }\n      \n        id=container.find(\".btn_2opciones .btn_selected\").attr(\"id\");\n        if(id=\"btn_asignados\"){\n          $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"show_optativas\"), function(){\n            $(\"#asignar_optativa .btn_2opciones label[id='btn_asignados']\").click();\n          });\n        }\n        else{\n          $(\"#tabs>div[style='display: block']\").load(Routing.generate(\"show_optativas\"), function(){\n            $(\"#asignar_optativa .btn_2opciones label[id='btn_no_asignados']\").click();\n          });\n        }\n        $(\"#listado_alumnos\").update_tab();\n      }\n    })\n\n  });\n  \n\n  ///////////////////////////////////////////\n  //            Administrativos            //\n  ///////////////////////////////////////////\n\n$(document).on(\"submit\",\".formulario_administrativo\",function(event){\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n      $(this).find(\":input\").each(function(){\n        if((!$(this).attr(\"validated\") || !$(this).attr(\"validated\")==false)){\n          if($(this).attr(\"validation\")){\n            validation($(this));\n          }\n        }\n      });\n\n    //\":input\"añade a los input radio,select...\n    $(this).find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        tab= $(this).closest(\"div[id^='tab']\").attr(\"id\");\n        mostrarTab($(this).closest(\"form\"),tab);\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n          \n    var formdata=new FormData($(this)[0])\n\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: Routing.generate('administrativo_create'),//url: $(this).attr('action')\n        data:formdata, //$(this).serialize()\n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n\n        // Mostramos un mensaje con la respuesta de PHP\n        success: function(response) {\n        \n          limpiarForm(form);\n\n          // Notificación de confirmación.\n          exito.play();\n          new PNotify({\n            text:\"Personal administrativo registrado\",\n            addclass: \"custom\",\n            type: \"success\",\n            shadow: true,\n            hide: true,\n            buttons: {\n            sticker: false,\n            labels:{close: \"Cerrar\"}\n            },\n            stack: right_Stack,\n            animate: {\n              animate: true,\n              in_class: \"fadeInRight\",\n              out_class: \"fadeOutRight\",\n            }\n          });\n          \n          //Actualización de pestañas.\n          $(\"#ficha_administrativo\").update_tab();\n          $(\"#administrativo_antiguo\").update_tab();\n\n\n          event.stopPropagation();   \n        },\n        error: function (response, desc, err){\n          if (response.responseJSON && response.responseJSON.message) {\n            if(response.responseJSON.result == 0) {\n              //Se elimina las clases de error, para luego añadirlas a los campos que siguen inválidos.\n               form.find(\":input\").each(function(i){  \n                $(this).prev().find(\".error\").remove();\n                $(this).next(\".mensaje\").remove();\n                $(this).removeClass(\"invalid\");\n                $(this).attr(\"validated\", true);\n              });\n              //Se muestra los campos inválidos.        \n              for (var key in response.responseJSON.data) { \n                form.find(\":input[id='\"+key+\"']\").addClass(\"invalid\");   \n                form.find(\":input[id='\"+key+\"']\").attr(\"validated\", false);\n                form.find(\":input[id='\"+key+\"']\").after(\"<span class='mensaje'>\"+response.responseJSON.data[key]+\"</span>\");\n                form.find(\":input[id='\"+key+\"']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n              }\n            } \n            alert(response.responseJSON.message);\n          } \n          else {\n            alert(desc);\n          }\n        }\n      })\n    }\n      return false;\n  });\n\n  $(document).on(\"submit\",\"#administrativo_edit\",function(event) {\n    event.preventDefault();\n    form= $(this).closest(\"form\");\n\n    var val=0;\n    // Se recorre los campos del formulario mirando si estan validados o no.\n    form.find(\":input[type!='file']\").each(function(){\n\n      if((!$(this).attr(\"validated\") || $(this).attr(\"validated\")==false)){\n        if($(this).attr(\"validation\")){\n          validation($(this));\n        }\n      }\n    });\n\n    //\":input\"añade a los input radio,select...\n    form.find(\":input\").each(function(){\n      if(($(this).attr(\"validated\")==\"false\")) {\n        //Se muestra el input inválido.\n        $(this).focus();\n        val=1;\n        return false;\n      }       \n    });\n\n    var formdata=new FormData($(this)[0]);\n\n    if(val==0){\n      $.ajax({\n        type: 'POST',\n        url: $(this).attr('action'),\n        data: formdata, \n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        cache: false,\n        success: function(response) {\n      \n          //Actualización de pestañas.\n          $(\"#administrativo_antiguo\").update_tab();\n          $(\"#listarlog\").update_tab();\n\n          var arr = form.attr('action').split('/');\n          div=form.closest(\"div[id^='tabs-']\");\n          $(div).load(Routing.generate('administrativo_edit', {id:arr[5]}), function(responseTxt, statusTxt, xhr){\n            if(statusTxt == \"success\"){\n              form= $(\"#administrativo_edit\");\n\n              // Notificación de confirmación.\n              $(\".ui-pnotify\").remove();\n              exito.play();\n\n              new PNotify({\n                text:\"Datos actualizados\",\n                addclass: \"custom\",\n                type: \"success\",\n                shadow: true,\n                hide: true,\n                buttons: {\n                  sticker: false,\n                  labels:{close: \"Cerrar\"}\n                },\n                stack: right_Stack,\n                animate: {\n                  animate: true,\n                  in_class: \"fadeInRight\",\n                  out_class: \"fadeOutRight\",\n                }\n              });\n            }\n\n            if(statusTxt == \"error\")\n              alert(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n          });\n        } \n      })\n    }\n  });\n\n  //Se restablece la contraseña del administrativo.\n  $(document).on(\"click\",\"#administrativo_edit .btn_restablecer\",function(event) {\n    event.preventDefault();\n    id=$(this).attr(\"id\");\n\n    aviso.play();\n    swal({\n      title: \"Restablecer contraseña del administrativo\",\n      html: \"<p class='justificado'>Se va a restablecer la contraseña del administrativo a la inicial y no se podrá recuperar la actual. ¿Estas seguro de continuar?</p>\",\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('restablecer_contraseña_administrativo', {id:id}),\n          data:{id:id},\n          dataType: 'json',\n  \n          success: function(response) {\n            // Notificación de confirmación.\n            $(\".ui-pnotify\").remove();\n            exito.play();\n\n            new PNotify({\n              text:\"Contraseña restablecida.\",\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    ); \n  });\n\n$(document).on(\"blur\",\"input[id='administrativo_dni']\",function(event) {\n  form= $(this).closest(\"form\");\n\n  if($(this).val()!=''){\n    var dni=$(this).val();\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_dni_administrativo'),\n      data: {dni:dni},\n      dataType: 'json',\n      success: function(response) {      \n        if(response.data!=null){\n          form.find(\"input[id$='administrativo_dni']\").addClass(\"invalid\");   \n          form.find(\"input[id$='administrativo_dni']\").attr(\"validated\", false);\n          form.find(\"input[id$='administrativo_dni']\").after(\"<span class='mensaje'>Este DNI ya existe en el sistema.</span>\");\n          //Se comprueba que no exista el aviso de error para no repetirlo.\n          if(form.find(\"input[id$='administrativo_dni']\").prev().find('span[class=\"error\"]').size()==0){\n            form.find(\"input[id$='administrativo_dni']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n          }\n          form.find(\"input[id$='administrativo_nombre']\").focus();\n          if(form.find(\"input[id$='administrativo_nombre']\").val()==''){\n            form.find(\"input[id$='administrativo_nombre']\").removeClass(\"invalid\");\n            form.find(\"input[id$='administrativo_nombre']\").prev().find(\".error\").remove();\n            form.find(\"input[id$='administrativo_nombre']\").next(\".mensaje\").remove();         \n          }\n        }\n      } \n    })\n  }\n  event.stopPropagation();  \n});\n  \n\n$(document).on(\"blur\",\"input[id='edit_administrativo_dni']\",function(event) {\n  form= $(this).closest(\"form\");\n\n  var arr = form.attr('action').split('/');\n\n  if($(this).val()!=''){\n    var dni=$(this).val();\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('comprobar_dni_administrativo_editado'),\n      data: {dni:dni, id:arr[5]},\n      dataType: 'json',\n      success: function(response) {      \n        if(response.data!=null){\n          form.find(\"input[id$='administrativo_dni']\").addClass(\"invalid\");   \n          form.find(\"input[id$='administrativo_dni']\").attr(\"validated\", false);\n          form.find(\"input[id$='administrativo_dni']\").after(\"<span class='mensaje'>Este DNI ya existe en el sistema.</span>\");\n          //Se comprueba que no exista el aviso de error para no repetirlo.\n          if(form.find(\"input[id$='administrativo_dni']\").prev().find('span[class=\"error\"]').size()==0){\n            form.find(\"input[id$='administrativo_dni']\").prev().append(\"<span class='error'>Dato inválido</span>\");\n          }\n          form.find(\"input[id$='administrativo_nombre']\").focus();\n          if(form.find(\"input[id$='administrativo_nombre']\").val()==''){\n            form.find(\"input[id$='administrativo_nombre']\").removeClass(\"invalid\");\n            form.find(\"input[id$='administrativo_nombre']\").prev().find(\".error\").remove();\n            form.find(\"input[id$='administrativo_nombre']\").next(\".mensaje\").remove();         \n          }\n        }\n      } \n    })\n  }\n  event.stopPropagation();\n});\n\n\n  ///////////////////////////////////////////\n  //       Antiguos administrativos        //\n  ///////////////////////////////////////////\n\n\n  //Se muestra la info del profesor al colocar el cursor.\n  $(document).on(\"mouseenter\",\"#consulta_antiguo_administrativo .scrollContent tr\", function(){\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(\"#consulta_antiguo_administrativo .contenido_info #sin_seleccionar\").addClass(\"oculto\");\n\n    //Se comprueba que no es un aviso predeterminado.\n    if(!$(this).find(\"td\").hasClass(\"dataTables_empty\")){\n\n      $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").load(Routing.generate('datos_antiguo_administrativo', {id:$(this).attr(\"id\")}), function(){\n        $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").removeClass(\"oculto\");\n        $(\"#consulta_antiguo_administrativo .contenido_info #sin_seleccionar\").addClass(\"oculto\");     \n      });\n    }\n    else{\n      $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").empty();\n      $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }\n  });\n\n  // Se elimina la información mostrada del profesor al quitar el puntero.\n  $(document).on(\"mouseleave\",\"#consulta_antiguo_administrativo .scrollContent tr\", function () {\n    $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").addClass(\"oculto\");\n    $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").empty();\n    $(\"#consulta_antiguo_administrativo .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n  // Se elimina la información con retraso al salir de la tabla por si aún se estan cargando datos anteriores.\n  $(document).on(\"mouseleave\",\"#old_admin\", function () {\n    setTimeout(function() {\n      $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo .contenido_info #seleccionado\").empty();\n      $(\"#consulta_antiguo_administrativo .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }, 300);\n  });\n\n\n  $(document).on('click',\"#consulta_antiguo_administrativo #old_admin tbody td\",function(event){\n    event.preventDefault();\n    input=$(this).closest(\"tr\").find(\"td:last-child input\");\n    //Se desactiva seleccionar cuando hay selección en la otra tabla.\n    if(input.is(\":disabled\")){\n      return false;\n    }\n\n    if(!$(event.target).is('input')){\n\n      if(input.is(':checked') ){\n        input.prop(\"checked\",false);\n      }\n      else{\n        input.prop(\"checked\",true);\n      }\n    }\n    else{\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n        if(input.is(':checked') ){\n          input.prop(\"checked\",false);\n        }\n        else{\n          input.prop(\"checked\",true);\n        }\n      }, 5);\n    }\n    // Se habilita/deshabilita el botón enviar selecionados.\n    if( $(\"#consulta_antiguo_administrativo #old_admin td input\").is(':checked') ) {\n      $(\"#consulta_antiguo_administrativo #baja\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo .baja_active\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo #alta\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo .alta_limpiar\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo #old_admin_no_active tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",true);\n      });\n    } \n    else {\n      $(\"#consulta_antiguo_administrativo #baja\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo .baja_disable\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo #alta\").addClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo .alta_disable\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo #old_admin_no_active tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",false);\n      });\n    }\n  });\n\n\n  $(document).on('click',\"#consulta_antiguo_administrativo #old_admin_no_active tbody td\",function(event){\n    event.preventDefault();\n    input=$(this).closest(\"tr\").find(\"td:first-child input\");\n    \n    //Se desactiva seleccionar cuando hay selección en la otra tabla.\n    if(input.is(\":disabled\")){\n      return false;\n    }\n\n    if(!$(event.target).is('input')){\n\n      if(input.is(':checked') ){\n        input.prop(\"checked\",false);\n      }\n      else{\n        input.prop(\"checked\",true);\n      }\n    }\n    else{\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n        if(input.is(':checked') ){\n          input.prop(\"checked\",false);\n        }\n        else{\n          input.prop(\"checked\",true);\n        }\n      }, 5);\n    }\n    // Se habilita/deshabilita el botón enviar selecionados.\n    if( $(\"#consulta_antiguo_administrativo #old_admin_no_active td input\").is(':checked') ) {\n          $(\"#consulta_antiguo_administrativo #alta\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_administrativo .alta_active\").removeClass(\"oculto\");\n          $(\"#consulta_antiguo_administrativo #baja\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_administrativo .baja_limpiar\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo #old_admin tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",true);\n      });\n    } \n    else {\n          $(\"#consulta_antiguo_administrativo #alta\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_administrativo .alta_disable\").removeClass(\"oculto\");\n          $(\"#consulta_antiguo_administrativo #baja\").addClass(\"oculto\");\n          $(\"#consulta_antiguo_administrativo .baja_disable\").removeClass(\"oculto\");\n      $(\"#consulta_antiguo_administrativo #old_admin tbody td input\").each (function(){ \n        $(this).prop(\"disabled\",false);\n      });\n    }\n  });\n  //Se limpia la selección al pulsar el botón correspondiente.\n  $(document).on(\"click\",\"#consulta_antiguo_administrativo .baja_limpiar button\", function () {\n    $(\"#consulta_antiguo_administrativo #old_admin_no_active tbody td input:checked\").each (function(){ \n       //Se realiza el evento en el td ya que en input haría click dos veces.\n       $(this).closest(\"td\").click();\n    });\n  });\n\n  $(document).on(\"click\",\"#consulta_antiguo_administrativo .alta_limpiar button\", function () {\n    $(\"#consulta_antiguo_administrativo #old_admin tbody td input:checked\").each (function(){ \n      $(this).closest(\"td\").click();\n    });\n  });\n\n  //Se realiza la nueva alta del administrativo.\n  $(document).on(\"click\",\"#consulta_antiguo_administrativo .alta_active button\", function(event) {\n    event.preventDefault();\n    var array= Array(); \n    $(\"#consulta_antiguo_administrativo #old_admin_no_active tbody td input:checked\").each (function(){ \n      array.push($(this).closest(\"tr\").attr(\"id\"));\n    });\n\n    if(array.length==1){\n      nombre=\"\";\n      nivel=\"\";\n    $(\"#consulta_antiguo_administrativo #old_admin_no_active tbody td input:checked\").each (function(){ \n      nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n      nivel=$(this).closest(\"tr\").find(\"#nivel\").text();\n    });\n      titulo=\"<table><p>Se va a registrar el alta del antiguo administrativo:<br></p><thead><tr><th>Nombre</th><th>Nivel</th></tr></thead><tbody><tr><td>\"+nombre+\"</td><td>\"+nivel+\"</td></tr></tbody><br></p></table><br>¿Estas seguro de continuar?\";\n    }\n    else{\n      titulo=\"<table ><p>Se va a registrar el alta de los antiguos administrativos:<br></p><thead><tr><th>Nombre</th><th>Nivel</th></tr></thead><tbody>\";\n      $(\"#consulta_antiguo_administrativo #old_admin_no_active tbody td itput:checked\").each (function(){ \n        nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n        nivel=$(this).closest(\"tr\").find(\"#nivel\").text();\n        titulo+=\"<tr><td>\"+nombre+\"</td><td>\"+nivel+\"</td></tr>\";\n       });\n      titulo+=\"</tbody><br></p></table><br>¿Estas seguro de continuar?\";\n    }\n\n    aviso.play();\n    swal({\n      title: \"Alta del Personal Administrativo\",\n      html: titulo,\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"500px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('alta_administrativo'),\n          data: {array:array},\n          dataType: 'json',\n          success: function(response) {\n            if(array.length==1){\n              texto=\"Alta registrada.\";\n            }else{\n              texto=array.length+\" altas registradas.\";\n            }\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n\n            // Se actualiza todas las pestañas con tablas de administrativos.\n            $(\"#administrativo_antiguo\").update_tab();\n            $(\"#ficha_administrativo\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n\n      }\n    );\n  });\n\n  //Se realiza la baja del profesor.\n  $(document).on(\"click\",\"#consulta_antiguo_administrativo .baja_active button\", function(event)  {\n    event.preventDefault();\n    var array= Array(); \n    $(\"#consulta_antiguo_administrativo #old_admin tbody td input:checked\").each (function(){ \n      array.push($(this).closest(\"tr\").attr(\"id\"));\n    });\n\n    if(array.length==1){\n      nombre=\"\";\n      tipo=\"\";\n    $(\"#consulta_antiguo_administrativo #old_admin tbody td input:checked\").each (function(){ \n      nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n      tipo=$(this).closest(\"tr\").find(\"#tipo\").text();\n    });\n      titulo=\"<table><p>Se va a registrar la baja del siguiente administrativo:<br></p><thead><tr><th>Nombre</th><th>Personal</th></tr></thead><tbody><tr><td>\"+nombre+\"</td><td>\"+tipo+\"</td></tr></tbody><br></table><br><br>¿Estas seguro de continuar?\";\n    }\n    else{\n      titulo=\"<table><p>Se va a registrar la baja de los siguientes administrativos:<br></p><thead><tr><th>Nombre</th><th>Personal</th></tr></thead><tbody>\";\n      $(\"#consulta_antiguo_administrativo #old_admin tbody td input:checked\").each (function(){ \n        nombre=$(this).closest(\"tr\").find(\"td:nth-child(2)\").text();\n        tipo=$(this).closest(\"tr\").find(\"#tipo\").text();\n        titulo+=\"<tr><td>\"+nombre+\"</td><td>\"+tipo+\"</td></tr>\";\n       });\n      titulo+=\"</tbody><br></p></table><br><br>¿Estas seguro de continuar?\";\n    }\n\n    aviso.play();\n    swal({\n      title: \"Baja del Personal Administrativo\",\n      html: titulo,\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"500px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('baja_administrativo'),\n          data: {array:array},\n          dataType: 'json',\n          success: function(response) {\n            if(array.length==1){\n              texto=\"Baja registrada.\";\n            }else{\n              texto=array.length+\" bajas registradas.\";\n            }\n\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            // Se actualiza todas las pestañas con tablas de administrativos.\n            $(\"#administrativo_antiguo\").update_tab();\n            $(\"#ficha_administrativo\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n      }\n    );\n  });\n\n  ///////////////////////////////////////////\n  //            Equipo Directivo           //\n  ///////////////////////////////////////////\n\n  $(document).on('click',\"#equipo_directivo tbody td\",function(event){\n    event.preventDefault();\n    input=$(this).closest(\"tr\").find(\"td:last-child input\");\n\n    if(!$(event.target).is('input')){\n        input.prop(\"checked\",true);\n    }\n    else{\n      //Retardo para poder mostar el input seleccionado.\n      setTimeout(function(){\n          input.prop(\"checked\",true);\n      }, 2);\n    }\n\n    // Se habilita/deshabilita el botón enviar selecionados.\n      $(\"#equipo_directivo .alta_active\").removeClass(\"oculto\");\n      $(\"#equipo_directivo .alta_disable\").addClass(\"oculto\");\n  });\n\n\n  //Se muestra la info del profesor al colocar el cursor.\n  $(document).on(\"mouseenter\",\"#equipo_directivo .scrollContent tr\", function(){\n    // Se evita que se muestre el mensaje predeterminado si pasamos de un enlace a otro.\n    $(\"#equipo_directivo .contenido_info #sin_seleccionar\").addClass(\"oculto\");\n\n    //Se comprueba que no es un aviso predeterminado.\n    if(!$(this).find(\"td\").hasClass(\"dataTables_empty\")){\n\n      $(\"#equipo_directivo .contenido_info #seleccionado\").load(Routing.generate('datos_antiguo_profesor', {id:$(this).attr(\"id\")}), function(){\n        $(\"#equipo_directivo .contenido_info #seleccionado\").removeClass(\"oculto\");\n        $(\"#equipo_directivo .contenido_info #sin_seleccionar\").addClass(\"oculto\");     \n      });\n    }\n    else{\n      $(\"#equipo_directivo .contenido_info #seleccionado\").empty();\n      $(\"#equipo_directivo .contenido_info #seleccionado\").addClass(\"oculto\");\n      $(\"#equipo_directivo .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }\n  });\n\n  // Se elimina la información mostrada del profesor al quitar el puntero.\n  $(document).on(\"mouseleave\",\"#equipo_directivo .scrollContent tr\", function () {\n    $(\"#equipo_directivo .contenido_info #seleccionado\").addClass(\"oculto\");\n    $(\"#equipo_directivo .contenido_info #seleccionado\").empty();\n    $(\"#equipo_directivo .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n  });\n\n  // Se elimina la información con retraso al salir de la tabla por si aún se estan cargando datos anteriores.\n  $(document).on(\"mouseleave\",\"#equipo_directivo_teachers\", function () {\n    setTimeout(function() {\n      $(\"#equipo_directivo .contenido_info #seleccionado\").addClass(\"oculto\");\n      $(\"#equipo_directivo .contenido_info #seleccionado\").empty();\n      $(\"#equipo_directivo .contenido_info #sin_seleccionar\").removeClass(\"oculto\");\n    }, 300);\n  });\n\n  //Se realiza la asignación del nuevo jefe de estudios.\n  $(document).on(\"click\",\"#equipo_directivo #asig_jefe_estudios button\", function(event) {\n    event.preventDefault();\n\n    id=$(\"#equipo_directivo_teachers input:checked\").closest(\"tr\").attr(\"id\");\n    nombre=$(\"#equipo_directivo_teachers_wrapper tr[id='\"+id+\"']\").find(\"td:nth-child(2)\").text();\n    titulo=\"<table><p>Se va a asignar la jefatura de estudios al profesor: <br><br> <span class='negrita'>\"+nombre+\"</span> <br><br>El jefe de estudios actual perderá el acceso al área de administración.<br><br>¿Estas seguro de continuar? \";\n  \n    aviso.play();\n    swal({\n      title: \"Asignación de Jefatura de Estudios\",\n      html: titulo,\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"500px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('asignacion_jefe_estudios'),\n          data: {id:id},\n          dataType: 'json',\n          success: function(response) {\n\n              texto=\"Asignación realizada.\";\n\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            // Se actualiza las pestañas..\n            $(\"#equipo_directivo\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n      }\n    );\n  });\n\n  //Se realiza la asignación del nuevo director.\n  $(document).on(\"click\",\"#equipo_directivo #asig_director button\", function(event) {\n    event.preventDefault();\n\n    id=$(\"#equipo_directivo_teachers input:checked\").closest(\"tr\").attr(\"id\");\n    nombre=$(\"#equipo_directivo_teachers_wrapper tr[id='\"+id+\"']\").find(\"td:nth-child(2)\").text();\n    titulo=\"<table><p>Se va a asignar la dirección del centro al profesor: <br><br> <span class='negrita'>\"+nombre+\"</span> <br><br>El director actual perderá el acceso al área de administración.<br><br>¿Estas seguro de continuar? \";\n  \n    aviso.play();\n    swal({\n      title: \"Asignación de la Dirección del Centro\",\n      html: titulo,\n      type: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancelar\",\n      width: \"500px\",\n      confirmButtonColor: color,\n      confirmButtonText: \"¡Adelante!\"\n      }).then(function () {\n\n        $.ajax({\n          type: 'POST',\n          url: Routing.generate('asignacion_director'),\n          data: {id:id},\n          dataType: 'json',\n          success: function(response) {\n\n              texto=\"Asignación realizada.\";\n\n            // Notificación de confirmación\n            exito.play();\n            \n            new PNotify({\n              text:texto,\n              addclass: \"custom\",\n              type: \"success\",\n              shadow: true,\n              hide: true,\n              buttons: {\n                sticker: false,\n                labels:{close: \"Cerrar\"}\n              },\n              stack: right_Stack,\n              animate: {\n                animate: true,\n                in_class: \"fadeInRight\",\n                out_class: \"fadeOutRight\",\n              }\n            });\n            // Se actualiza las pestañas..\n            $(\"#equipo_directivo\").update_tab();\n          }\n        })\n      }, function (dismiss) {\n      }\n    );\n  });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//////////////////////////////////\n//   Finalizar curso académico  //\n//////////////////////////////////\n\n\n  $(document).on(\"click\",\"#finalizar_curso\",function(event){\n    event.preventDefault();\n\n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('obtener_curso_academico'),\n      dataType: 'json',\n      success: function(response) {\n\n      aviso.play();\n      swal({\n        title: \"Finalización del Curso Académico \"+response.inicio+\"/\"+response.fin,\n        html: \"<p class='justificado'>Se va a finalizar el curso académico almacenando todos los datos del curso en el expediente de los alumnos y restableciendo los datos del sistema para el nuevo curso.</p></br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: \"Cancelar\",\n        confirmButtonColor: color_rojo,\n        confirmButtonText: \"Finalizar\"\n        }).then(function () {\n        /*\n          Finalizar curso\n        */\n        }, function (dismiss) {\n\n        }\n      );\n      return false;\n      }\n    })\n  });\n\n\n//////////////////////////////////\n//   Finalizar matriculación    //\n//////////////////////////////////\n\n\n  $(document).on(\"click\",\"#finalizar_matriculacion\",function(event){\n    event.preventDefault();\n   \n    $.ajax({\n      type: 'POST',\n      url: Routing.generate('obtener_curso_academico'),\n      dataType: 'json',\n      success: function(response) {\n\n      aviso.play();\n      swal({\n        title: \"Finalización del proceso de matriculación del curso \"+response.inicio+\"/\"+response.fin,\n        html: \"<p class='justificado'>Se va a finalizar el proceso de matriculación del curso académico desactivando a los alumnos del curso anterior que no han sido matriculados.</p><br><p class='justificado'> Los responsables de estos alumnos también serán desactivados en el sistema si no tiene más alumnos matriculados en el centro.</p></br>¿Estas seguro de continuar? No podrás deshacer este paso...\",\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: \"Cancelar\",\n        confirmButtonColor: color_rojo,\n        confirmButtonText: \"Finalizar\"\n        }).then(function () {\n\n        /*\n          Finalizar curso\n        */\n        }, function (dismiss) {\n        }\n      );\n      return false;\n      }\n    })\n  });\n\n\n\n\n\n\n\n\n\n\n\n\n\n});\n\n",
			"file": "src/Cole/BackendBundle/Resources/public/js/general.js",
			"file_size": 617254,
			"file_write_time": 1500627577000000,
			"settings":
			{
				"buffer_size": 615540,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/public/js/load.js",
			"settings":
			{
				"buffer_size": 43462,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Matricula/anular_matricula.html.twig",
			"settings":
			{
				"buffer_size": 7719,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/ListenerExcepcion.php",
			"settings":
			{
				"buffer_size": 589,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/InteractiveLoginListener.php",
			"settings":
			{
				"buffer_size": 1614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/AuthenticationHandler.php",
			"settings":
			{
				"buffer_size": 4222,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/AccessDeniedHandler.php",
			"settings":
			{
				"buffer_size": 1130,
				"line_ending": "Unix",
				"name": "dgd"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/Seguimiento.php",
			"settings":
			{
				"buffer_size": 9999,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/seguimientos.html.twig",
			"settings":
			{
				"buffer_size": 19601,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/lista_seguimiento.html.twig",
			"settings":
			{
				"buffer_size": 18658,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/seguimiento.html.twig",
			"settings":
			{
				"buffer_size": 9398,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/seguimientos.html.twig",
			"settings":
			{
				"buffer_size": 12186,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/lista_seguimiento.html.twig",
			"settings":
			{
				"buffer_size": 16371,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/seguimiento.html.twig",
			"settings":
			{
				"buffer_size": 9008,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/new.html.twig",
			"settings":
			{
				"buffer_size": 7106,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/asistencia.html.twig",
			"settings":
			{
				"buffer_size": 12446,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/claseAsignada.html.twig",
			"settings":
			{
				"buffer_size": 8133,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{% extends  'IntranetBundle:Profesor:index.html.twig' %}\n\n{% block body %}\n    {{parent()}}\n    <script>\n    	$(\".menu li\").removeClass('active');\n		$(\".menu #calificaciones\").addClass('active');\n        \n        //Se selecciona los valores de los select ocultos.\n        profesor={{entity.id|json_encode()|raw}};\n        $(\"#tarea_profesor option[value='\"+profesor+\"']\").prop('selected', true);\n\n\n        grupos={{grupos|json_encode()|raw}};\n        for(var key in grupos ){\n            $(\"#tabla_tareas_profesor tr[id='\"+key+\"'] #grupos_tareas\").text(grupos[key]);\n        }\n\n        //Se selecciona el trimestre actual.\n        trimestre={{trimestre|json_encode()|raw}};\n        $(\"#tarea_trimestre option[value='\"+trimestre+\"']\").prop('selected', true);\n\n\n    </script>\n {% endblock %}\n\n{% block migas %}\n	<li class=\"tipo\">\n			{% trans %}Profesorado{% endtrans %}\n	</li>\n	<li>\n		<a href=\"{{path('intranet_profesor')}}\">\n			{% trans %}Panel principal{% endtrans %}\n		</a>\n	</li>\n	<li class=\"active no-seleccion\">\n		{% trans %}Calificaciones{% endtrans %}\n	</li>\n{% endblock %}\n\n{% block titulo_cabecera %}\n	<i class=\"fa fa-list-alt page-header-icon\"></i>\n	{% trans %}Calificaciones{% endtrans %}\n{% endblock %}\n{% block titulo_cabecera_movil %}\n    <i class=\"fa fa-list-alt page-header-icon\"></i>\n    {% trans %}Calificaciones{% endtrans %}\n{% endblock %}\n\n{% block contenido %}\n    <h4 id=\"titulo-seccion\" class=\"titulo-seccion\">{% trans %}Calificaciones del curso{% endtrans %}</h4>\n\n	<div id=\"seleccion_calificaciones\" class=\"contenedor_seleccion col-sm-12\" locale=\"{{ app.request.getLocale() }}\" >\n      {% if entity.nivel == \"Primaria\"%}\n\n        <div id=\"1\" class=\"col-sm-4 center\">\n            <p>{% trans %}Seleccione una opción{% endtrans %}:</p>\n            <div id=\"opciones\" class=\"seleccion\" locale=\"{{ app.request.getLocale() }}\">\n                {% if tutor_grupo %}\n                    <button id=\"nueva\" class=\"btn btn-primary col-xs-11 col-lg-5 \">{% trans %}Añadir Tarea{% endtrans %}</button>\n                    <button id=\"evaluar\" class=\"btn btn-primary col-xs-11 col-lg-5 \">{% trans %}Evaluar Tarea{% endtrans %}</button>\n                    <button id=\"trimestre\" class=\"btn btn-primary col-xs-11 \">{% trans %}Evaluar trimestre{% endtrans %}</button>\n                    <a href=\"{{ path('evaluacion_grupo', { 'id': tutor_grupo.id }) }}\" id=\"{{tutor_grupo.id}}\" class=\"verde btn btn-primary col-xs-11 waiting\">{% trans %}Ver evaluación de mi Grupo{% endtrans %}</a>  \n                {% else %}  \n                    <button id=\"nueva\" class=\"btn btn-primary col-xs-11 \">{% trans %}Añadir Tarea{% endtrans %}</button>\n                    <button id=\"evaluar\" class=\"btn btn-primary col-xs-11 \">{% trans %}Evaluar Tarea{% endtrans %}</button>\n                    <button id=\"trimestre\" class=\"verde btn btn-primary col-xs-11 \">{% trans %}Evaluar trimestre{% endtrans %}</button>  \n                {% endif %} \n            </div>\n            <span id=\"orden\">1</span>\n        </div>\n\n        <div id=\"2\" class=\"col-sm-4 center hidden\">\n            <p>{% trans %}Seleccione una asignatura{% endtrans %}:</p>\n            <div id=\"asignatura\" class=\"seleccion\">\n                {% for asignatura in imparte %}\n                    <button id=\"{{asignatura.asignatura.id}}\" asig=\"{{asignatura.asignatura.asignatura.id}}\" class=\"btn btn-primary col-xs-11 \">{{asignatura.asignatura.asignatura.nombre}}</button>\n                {% endfor %}\n            </div>\n            <span id=\"orden\">2</span>\n        </div>\n\n		<div id=\"3_1\" class=\"col-sm-4 center hidden\">\n			<p>{% trans %}Seleccione un grupo{% endtrans %}:</p>\n            <div id=\"cursos\" class=\"seleccion\" locale=\"{{ app.request.getLocale() }}\">\n                    {% for curso in cursos %}\n                    <a id=\"{{curso.grupo}}\" asig=\"{{curso.asignatura.asignatura.id}}\" href=\"{{ path('evaluar_asignatura', {\"id\": curso.grupo.id, \"asig\":curso.asignatura.asignatura.id}) }}\" locale=\"{{ app.request.getLocale() }}\" class=\"btn btn-primary waiting\">{{curso.grupo.curso.curso ~ \" \" ~ curso.grupo.letra}}</a>\n                {% endfor %}   \n			</div>\n			<span id=\"orden\">3</span>\n		</div>\n        <div id=\"3_2\" class=\"multiple_seleccion col-sm-4 center hidden\">\n            <p>{% trans %}Seleccione los grupos{% endtrans %}:</p>\n            <div id=\"cursos\" class=\"seleccion\" locale=\"{{ app.request.getLocale() }}\"></div>    \n            <span id=\"orden\">3</span>\n        </div>\n\n        <div id=\"3_3\" class=\"col-sm-4 center hidden\">\n            <p>{% trans %}Seleccione un grupo{% endtrans %}:</p>\n            <div id=\"cursos\" class=\"seleccion\" locale=\"{{ app.request.getLocale() }}\">\n                    {% for curso in cursos %}\n                    <a id=\"{{curso.grupo}}\" asig=\"{{curso.asignatura.asignatura.id}}\" href=\"{{ path('evaluar_trimestre', {\"id\": curso.grupo.id, \"asig\":curso.asignatura.asignatura.id}) }}\" locale=\"{{ app.request.getLocale() }}\" class=\"btn btn-primary waiting\">{{curso.grupo.curso.curso ~ \" \" ~ curso.grupo.letra}}</a>\n                {% endfor %}   \n            </div>\n            <span id=\"orden\">3</span>\n        </div>\n\n        <div id=\"4\" class=\"hidden clear\">\n        {% set locale = app.request.getLocale() %}\n\n        {{form_start(form, {'method':'Post','attr':{'id':'calificaciones_nuevo', 'data-toggle':\"validator\", 'role':\"form\" ,'novalidate':'novalidate', 'autocomplete':'off'}})}}\n            <div  class=\"col-xs-12 col-sm-10 center\">\n                <p>{% trans %}Seleccione el trimestre e inserte el nombre de la tarea{% endtrans %}:</p>\n\n                <div id=\"descripcion\" class=\" seleccion col-xs-12\" >\n                    {{ form_errors(form) }}\n                    <div class=\"col-xs-12\">\n                        <div class=\"\">\n                            <div class=\"input-group col-xs-12\">\n                                {{ form_widget(form.trimestre, {'attr':{'class': ' col-xs-8 col-sm-3' }}) }}\n\n                                {{ form_widget(form.descripcion, {'attr':{'class': 'col-xs-12 col-sm-offset-1 col-sm-8' }}) }}\n                            </div>\n                            <div class=\"help-block with-errors\"></div>\n                        </div>\n                    </div>\n                </div>\n\n                <span id=\"orden\" class=\"orden_descripcion hidden-xs\">4</span>\n                <span id=\"orden\" class=\"orden_descripcion_movil hidden-sm hidden-md hidden-lg\">4</span>\n\n            </div>\n            <div class=\"boton_enviar col-sm-2\"> \n                {{ form_row(form.submit,{'id':'intranet_'~form.submit.vars.id , 'attr':{'class': 'btn btn-success center-block' }}) }}\n            </div>\n\n            <div class=\"hidden\">\n                {{ form_rest(form) }}\n            </div>\n        {{ form_end(form) }}\n        </div>\n      {% else %}\n\n        <div id=\"3\" class=\"col-sm-4 center\">\n            <p>{% trans %}Seleccione un grupo{% endtrans %}:</p>\n\n            <div id=\"cursos\" class=\"seleccion\" locale=\"{{ app.request.getLocale() }}\">\n                <button id=\"{{cursos.id}}\" class=\"btn btn-primary  active\">{{cursos}}</button>\n            </div>\n            <span id=\"orden\" style=\"background-color: rgb(51, 122, 183);\">1</span>\n        </div>\n        <div id=\"3\" class=\"col-sm-4 center\">\n            <p>{% trans %}Seleccione destinatario{% endtrans %}:</p>\n            <div id=\"alumnos\" class=\"seleccion center\" locale=\"{{ app.request.getLocale() }}\">\n                <div class=\"div_btn\">\n                    <button id=\"individual\" data-target=\"#lista_alumnos_calificaciones\" class=\"btn btn-primary\" data-toggle=\"modal\" data-backdrop=\"static\" data-keyboard=\"false\"><i class=\"fa fa-user\"></i> Alumno </button>\n                    <button id=\"grupo\" class=\"btn btn-primary\" ><i class=\"fa fa-users\"></i> Grupo</button>\n                </div>\n            </div>  \n            <span id=\"orden\">2</span>\n        </div>\n\n      {% endif %}\n\n	</div>\n\n<div id=\"tabla_tareas_profesor\" class=\"panel panel-default tab-content tablas\">\n    <h4 >{% trans %}Tareas Evaluables{% endtrans %}</h4>\n\n    {% if tareas != null %}\n        <div class=\"table-responsive\">\n        <table class=\"table lista-alumnos table_task table-striped \">\n            <thead>\n                <tr>\n                    <th class=\"col-md-4\">{% trans %}Nombre de la tarea{% endtrans %}</th>\n                    <th class=\"col-md-4\">{% trans %}Asignatura{% endtrans %}</th>\n                    <th class=\"col-md-1\">{% trans %}Trimestre{% endtrans %}</th>\n                    <th class=\"col-md-2\">{% trans %}Grupos{% endtrans %}</th>\n                    <th class=\"col-md-1\"></th>\n                </tr>\n            </thead>\n            \n            <tbody class=\"\">\n            {% for entity in tareas %}\n                <tr id=\"{{ entity.id }}\">\n                    <td class=\"col-md-4\">{{ entity.descripcion }}</td>\n                    <td class=\"col-md-4\" >\n                        {{entity.asignatura.asignatura.nombre }}\n                    </td>\n                    <td class=\"col-md-1\">{{entity.trimestre ~ \"º\"}}</td>\n                    <td id=\"grupos_tareas\" class=\"col-md-2\"></td>\n                    <td class=\"col-md-1\">\n                        <a id=\"btn_eliminar\" href=\"javascript:void(0);\"  data-target=\"#eliminar_tarea_modal\" data-toggle=\"modal\" data-backdrop=\"static\" data-keyboard=\"false\">\n                            <i class=\"fa fa-trash-o\"></i>\n                        </a>\n                    </td> \n                </tr>\n            {% endfor %}\n            </tbody>\n        </table>\n      </div>\n    {% else %}\n            <div class=\"alert alert-info alert-block\">\n                <small>\n                    <h4>{% trans %}No tienes traeras evaluables registradas en el sistema{% endtrans %}.</h4>\n                    <h6>{% trans %}Para añadir una nueva tarea pulse sobre la opción \"Añadir Tarea\" y siga los pasos{% endtrans %}.</h6>\n                </small>\n            </div>\n    {% endif %}\n</div>\n\n    <!-- Ventana modal de eliminación de la tarea -->\n  <div id=\"eliminar_tarea_modal\" class=\"modal fade-scale aviso\"  tabindex=\"-1\" role=\"dialog\" data-backdrop=\"true\" >\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n            <h4 class=\"modal-title\" id=\"myModalLabel\">{% trans %}Eliminación de la tarea{% endtrans %}</h4>\n        </div>\n        <div class=\"modal-body\">\n            \n            <p>Se va a eliminar la tarea del sistema y no se podrá recuperar.</p>\n            <p>¿Estas seguro de continuar?</p>\n            <div class=\"class-footer\">\n                <button class=\"btn btn_azul\" type=\"button\" data-dismiss=\"modal\" title=\"\">Cancelar</button>\n                <form >\n                <input name=\"_method\" value=\"DELETE\" type=\"hidden\">\n                <div id=\"form\">\n                    <div>\n                        <button id=\"form_submit\" class=\"btn btn-danger\" type=\"submit\" name=\"form[submit]\">Eliminar</button>\n                    </div>\n    \n                </div>\n                </form>\n            </div>\n            \n        </div>\n        </div>\n    </div>\n  </div>\n\n{% endblock %}",
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/calificaciones.html.twig",
			"file_size": 11292,
			"file_write_time": 1500630940000000,
			"settings":
			{
				"buffer_size": 11276,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Ausencia/eliminarAusencia.html.twig",
			"settings":
			{
				"buffer_size": 442,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluar_asignatura.html.twig",
			"settings":
			{
				"buffer_size": 7474,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluar_tarea.html.twig",
			"settings":
			{
				"buffer_size": 12867,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluar_trimestre.html.twig",
			"settings":
			{
				"buffer_size": 9306,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluacion_grupo.html.twig",
			"settings":
			{
				"buffer_size": 5245,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluacion_alumno.html.twig",
			"settings":
			{
				"buffer_size": 3372,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/boletin_evaluacion.html.twig",
			"settings":
			{
				"buffer_size": 7689,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/lista_tareas_alumno.html.twig",
			"settings":
			{
				"buffer_size": 847,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/views/Noticias/noticia.html.twig",
			"settings":
			{
				"buffer_size": 1396,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/newTutoria.html.twig",
			"settings":
			{
				"buffer_size": 804,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/respuestaSeguimiento.html.twig",
			"settings":
			{
				"buffer_size": 1166,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/respuestaSeguimientoInfantil.html.twig",
			"settings":
			{
				"buffer_size": 1017,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/edit.html.twig",
			"settings":
			{
				"buffer_size": 504,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/eliminarSeguimiento.html.twig",
			"settings":
			{
				"buffer_size": 568,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Tarea/eliminarTarea.html.twig",
			"settings":
			{
				"buffer_size": 404,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Tutorias/eliminarTutorias.html.twig",
			"settings":
			{
				"buffer_size": 404,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/eliminarReserva.html.twig",
			"settings":
			{
				"buffer_size": 409,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/AvisosRepository.php",
			"settings":
			{
				"buffer_size": 5885,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/SeguimientoRepository.php",
			"settings":
			{
				"buffer_size": 24827,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/info_alumno.html.twig",
			"settings":
			{
				"buffer_size": 5523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/info_tutoria.html.twig",
			"settings":
			{
				"buffer_size": 1011,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/info_tutoria.html.twig",
			"settings":
			{
				"buffer_size": 852,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Entity/NoticiasRepository.php",
			"settings":
			{
				"buffer_size": 2062,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/Avisos.php",
			"settings":
			{
				"buffer_size": 3046,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/reservas.html.twig",
			"settings":
			{
				"buffer_size": 6370,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Form/SeguimientoType.php",
			"settings":
			{
				"buffer_size": 3044,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/TutoriasRepository.php",
			"settings":
			{
				"buffer_size": 1602,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Profesor/seguimiento_tutoria.html.twig",
			"settings":
			{
				"buffer_size": 19097,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Alumno/seguimiento_tutoria.html.twig",
			"settings":
			{
				"buffer_size": 13329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Profesor/equipo_directivo.html.twig",
			"settings":
			{
				"buffer_size": 10815,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/GrupoController.php",
			"settings":
			{
				"buffer_size": 42042,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/views/Noticias/new.html.twig",
			"settings":
			{
				"buffer_size": 9739,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/TareaRepository.php",
			"settings":
			{
				"buffer_size": 2891,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/AdministrativoController.php",
			"settings":
			{
				"buffer_size": 16427,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/config/routing/administrativo.yml",
			"settings":
			{
				"buffer_size": 2541,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Form/BusquedaAdministrativoType.php",
			"settings":
			{
				"buffer_size": 1488,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Administrativo/search_old.html.twig",
			"settings":
			{
				"buffer_size": 11197,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Profesor/search_old.html.twig",
			"settings":
			{
				"buffer_size": 11093,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Administrativo/datos_antiguo_administrativo.html.twig",
			"settings":
			{
				"buffer_size": 332,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/ImparteRepository.php",
			"settings":
			{
				"buffer_size": 15303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/Cursa.php",
			"settings":
			{
				"buffer_size": 3703,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/CursaRepository.php",
			"settings":
			{
				"buffer_size": 6281,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/AlumnoRepository.php",
			"settings":
			{
				"buffer_size": 4864,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/AsignaturasCursosRepository.php",
			"settings":
			{
				"buffer_size": 3425,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Profesor/new.html.twig",
			"settings":
			{
				"buffer_size": 14149,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Profesor/edit.html.twig",
			"settings":
			{
				"buffer_size": 17717,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/ProfesorRepository.php",
			"settings":
			{
				"buffer_size": 2987,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/ColeBundle/Resources/views/Noticias/edit.html.twig",
			"settings":
			{
				"buffer_size": 13677,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Controller/MatriculaController.php",
			"settings":
			{
				"buffer_size": 16561,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Resources/views/Grupo/AsignarGrupoConCurso.html.twig",
			"settings":
			{
				"buffer_size": 40689,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/HorarioRepository.php",
			"settings":
			{
				"buffer_size": 1749,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/Ausencia.php",
			"settings":
			{
				"buffer_size": 4656,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/AsignaturasCursos.php",
			"settings":
			{
				"buffer_size": 8215,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/BackendBundle/Entity/Curso.php",
			"settings":
			{
				"buffer_size": 7561,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Entity/AusenciaRepository.php",
			"settings":
			{
				"buffer_size": 1825,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Form/AusenciaType.php",
			"settings":
			{
				"buffer_size": 3192,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cole/IntranetBundle/Resources/views/Ausencia/edit.html.twig",
			"settings":
			{
				"buffer_size": 585,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Alumno/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Form/ContenedorCursaType.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/ProfesorController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/AdministrativoRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Administrativo/search.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Profesor/edit.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Administrativo.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Profesor.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/ProfesorRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias/edit.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Log/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Log.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Form/ProfesorType.php",
		"/home/jose/Escritorio/PFC/resumen/resumen.tex",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/AdministrativoController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Form/AdministrativoType.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/ImparteRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Curso/show.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Grupo/AsignarGrupo.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/MatriculaController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Festivos/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/centro.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/DefaultController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/profesor.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/administrativo.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Profesor/search_old.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Reserva/reserva_instalaciones.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Profesor/asignarTutorias.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/ReservaRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Reserva.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/Cursa.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/cursaRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/AsignaturasCursos.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/cursa.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/AlumnoController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Imparte/profesor_asignaturas_grupos_show.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/log.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Entity/Noticias.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/curso.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Eventos.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/Tutorias.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/CentroController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Centro/horariosAtencion.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Centro.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Security/restablecerPassword.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Profesor/search.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Alumno/new.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/AsignaturasCursosRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Reserva/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/TareaRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/PadresController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Profesor/reservar.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/CursoController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/CursoRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/GrupoRepository.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Controller/LogController.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Entity/Log.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/AlumnoRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Expediente.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/LogController.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/AuthenticationHandler.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/LogController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Grupo/AsignarGrupoConCurso.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Festivos.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Matricula.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Imparte.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Controller/GrupoController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Seguimiento/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Profesor/alumnos_grupo_asignatura.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/public/js/intranet.js",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Controller/EmpleadoController.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Controller/DefaultController.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Controller/UsuarioController.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Controller/SecurityController.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/miomioBundle.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Entity/Role.php",
		"/home/jose/Escritorio/reserva",
		"/opt/lampp/htdocs/Symfony/app/DO_NOT_UPLOAD_HERE",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/MedicoType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/InformeType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/FestivoType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/CitaType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/ProveedorType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/ProductoType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/FamiliaType.php",
		"/media/Data/MEMORIA/Proyecto Parada/optinet-master/optinet-master/src/mio/mioBundle/Form/EmpleadoType.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/grupo.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Profesor/info_profesor.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Profesor/info_alumno.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Grupo.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Seguimiento/show.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Alumno/respuestaSeguimiento.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/SeguimientoRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Alumno/seguimientos.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Controller/AlumnoController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Controller/ProfesorController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Entity/Avisos.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Alumno.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/IntranetBundle/Resources/views/Seguimiento/eliminarSeguimiento.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/festivos.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Centro/horariosAtencion.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias/noticias.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias/noticia.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias/recientes.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Imparte/new_profesores_asignaturas_grupo.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/Padres.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Asignatura/AsignarOptativaAlumno.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Controller/NoticiasController.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias/new.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Form/AlumnoType.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Asignatura/new_asignaturas_curso.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Asignatura/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/asignatura.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Profesor/clases_impartidas.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Grupo/tutor_grupo.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Asignatura/asignaturas_cursos_show.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/FestivosRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/alumno.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Asignatura/listaOptativasCurso.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Alumno/search_multiple.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/equipamiento.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Entity/NoticiasRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias/index.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/MatriculaRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Alumno/edit.html.twig",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Entity/HorarioRepository.php",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/config/routing/padres.yml",
		"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Form/PadresType.php"
	],
	"find":
	{
		"height": 47.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/opt/lampp/htdocs/Symfony/src/Cole/ColeBundle/Resources/views/Noticias",
			"/opt/lampp/htdocs/Symfony/src/Cole/BackendBundle/Resources/views/Grupo"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"alumno",
			"form",
			"edit",
			"btn_edi",
			"Justificación",
			"class",
			"verde",
			"exc",
			"localizeddate",
			"exc",
			"format",
			"GRU",
			"fecha",
			"Faltas",
			"Retrasos",
			"Se ha eliminado la falta de asistencia o restraso correctamente",
			"Se ha eliminado",
			"aviso",
			"elimi",
			"eliminar",
			"btn_eliminar",
			"5",
			"ause",
			"ausencia",
			"createDeleteReservaForm",
			"btn_eliminar",
			"date",
			"format",
			"modal",
			"asistencia",
			"reservar",
			"reserva_",
			"checkbox",
			"setti",
			"reserva_modulos",
			"opciones_reservar",
			"form",
			"createCreate",
			"ausencia",
			"seguimientos",
			"seguimiento",
			"días",
			"día",
			"table",
			"findExistence",
			"findByGrupo($id);",
			"$alumnos",
			"getAsignatura()->Opcional()",
			"if($asignatura->getAsignatura()->getAsignatura()->Opcional()",
			"+ 1 days",
			"request",
			"locale",
			"Alumnos de",
			"old_student_active",
			"datatables",
			"createEditNotasForm",
			"findOneByTarea",
			"evaluarta",
			"tabla_tareas_profesor",
			"Apellidos",
			"Horario",
			"Horario')->findAll();",
			"findAll();",
			"Horario')->findAll();",
			"show",
			"NuevoHorario",
			"nuevo_horario",
			"ComprobacionesHorarioNuevo",
			"button_horario_save",
			"appendTo",
			"asignar",
			":Horario')->findAll();",
			"show.h",
			"            $clase=\"fuera de horario\";\n",
			"N",
			"formar",
			"\":\"",
			"array",
			"inicio",
			"format",
			"explode",
			"exp",
			"HorasImpartidaClaseProfesor",
			"- 10 days",
			"div_datos",
			"seleccion_nuevo_seguimiento",
			".size()>1){",
			"días",
			"selected",
			"hidden",
			"[]",
			"array[]",
			"exc",
			"dia_semanal",
			"getErrorMessages",
			"ini_nav",
			"AsignaturasGrupoProfesor",
			"califica",
			"cali",
			"asignaturasGrupo_profesor",
			"$(\"#seleccion_ausencias #asignatura\").empty();",
			"seleccion_nuevo_seguimiento",
			"event",
			"orden.attr(\"id\")==\"2\"",
			"AlumnosGrupo",
			"Alumnosgrupoasi",
			"blocker",
			"swal",
			"avi",
			"sw",
			"PNotify",
			"aviso",
			"seleccion_nuevo_seguimiento",
			"tutor_grupo",
			"Selecc",
			"asistencia",
			"asiste",
			"new.h",
			"createEditConfirmacionProfesorForm",
			"intranet_confirmar",
			"datos_confirmacion",
			"createEditConfirmacionProfesorForm",
			"jefe",
			"findRolProfesor",
			"antigu",
			"baja",
			"Se va a asignar en el sistema al profesor",
			"Se va asignar en el sistema al profesor"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 51,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/config/config.yml",
					"settings":
					{
						"buffer_size": 4990,
						"regions":
						{
						},
						"selection":
						[
							[
								2997,
								2997
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Cole/BackendBundle/Resources/config/routing.yml",
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								7,
								7
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1326.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Cole/BackendBundle/Resources/config/routing/alumno.yml",
					"settings":
					{
						"buffer_size": 3546,
						"regions":
						{
						},
						"selection":
						[
							[
								1520,
								1520
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 943.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Cole/BackendBundle/Resources/config/routing/festivos.yml",
					"settings":
					{
						"buffer_size": 2671,
						"regions":
						{
						},
						"selection":
						[
							[
								588,
								588
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 220.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/config/routing.yml",
					"settings":
					{
						"buffer_size": 397,
						"regions":
						{
						},
						"selection":
						[
							[
								226,
								226
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/AppKernel.php",
					"settings":
					{
						"buffer_size": 1794,
						"regions":
						{
						},
						"selection":
						[
							[
								1116,
								1116
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "composer.json",
					"settings":
					{
						"buffer_size": 2479,
						"regions":
						{
						},
						"selection":
						[
							[
								1069,
								1069
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 153.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/config/security.yml",
					"settings":
					{
						"buffer_size": 3079,
						"regions":
						{
						},
						"selection":
						[
							[
								1808,
								1808
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1173.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Cole/BackendBundle/Resources/config/services.yml",
					"settings":
					{
						"buffer_size": 202,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Cole/BackendBundle/Resources/views/Default/index.html.twig",
					"settings":
					{
						"buffer_size": 26626,
						"regions":
						{
						},
						"selection":
						[
							[
								1751,
								1751
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4825.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/Cole/ColeBundle/Resources/views/Default/index.html.twig",
					"settings":
					{
						"buffer_size": 2195,
						"regions":
						{
						},
						"selection":
						[
							[
								355,
								355
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 136.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "app/Resources/views/frontend.html.twig",
					"settings":
					{
						"buffer_size": 16745,
						"regions":
						{
						},
						"selection":
						[
							[
								12451,
								12451
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3901.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/Cole/BackendBundle/Resources/views/Security/login.html.twig",
					"settings":
					{
						"buffer_size": 1717,
						"regions":
						{
						},
						"selection":
						[
							[
								1499,
								1499
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/Cole/ColeBundle/Controller/DefaultController.php",
					"settings":
					{
						"buffer_size": 1082,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								322
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "app/Resources/views/base.html.twig",
					"settings":
					{
						"buffer_size": 969,
						"regions":
						{
						},
						"selection":
						[
							[
								838,
								838
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "app/config/parameters.yml",
					"settings":
					{
						"buffer_size": 395,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src/Cole/BackendBundle/Controller/ImparteController.php",
					"settings":
					{
						"buffer_size": 31470,
						"regions":
						{
						},
						"selection":
						[
							[
								20048,
								20048
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 88.0,
						"translation.y": 8494.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/Cole/BackendBundle/Controller/AsignaturaController.php",
					"settings":
					{
						"buffer_size": 23943,
						"regions":
						{
						},
						"selection":
						[
							[
								3200,
								3200
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1381.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/index.html.twig",
					"settings":
					{
						"buffer_size": 29328,
						"regions":
						{
						},
						"selection":
						[
							[
								9735,
								9735
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1377.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/perfil.html.twig",
					"settings":
					{
						"buffer_size": 11373,
						"regions":
						{
						},
						"selection":
						[
							[
								1144,
								1144
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 706.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/seleccion.html.twig",
					"settings":
					{
						"buffer_size": 5175,
						"regions":
						{
						},
						"selection":
						[
							[
								201,
								201
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/confirmar.html.twig",
					"settings":
					{
						"buffer_size": 14471,
						"regions":
						{
						},
						"selection":
						[
							[
								10865,
								10865
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3668.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/perfil.html.twig",
					"settings":
					{
						"buffer_size": 6852,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 340.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "src/Cole/IntranetBundle/Form/TareaType.php",
					"settings":
					{
						"buffer_size": 2553,
						"regions":
						{
						},
						"selection":
						[
							[
								1970,
								1970
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 306.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "src/Cole/IntranetBundle/Resources/public/js/intranet.js",
					"settings":
					{
						"buffer_size": 92033,
						"regions":
						{
						},
						"selection":
						[
							[
								91869,
								91869
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 32680.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "src/Cole/IntranetBundle/Resources/public/css/intranet.css",
					"settings":
					{
						"buffer_size": 80059,
						"regions":
						{
						},
						"selection":
						[
							[
								80005,
								80005
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"spell_check": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60996.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "src/Cole/ColeBundle/Resources/config/routing.yml",
					"settings":
					{
						"buffer_size": 549,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "src/Cole/BackendBundle/Controller/SecurityController.php",
					"settings":
					{
						"buffer_size": 1003,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "src/Cole/BackendBundle/Resources/views/Security/restablecerPassword.html.twig",
					"settings":
					{
						"buffer_size": 3051,
						"regions":
						{
						},
						"selection":
						[
							[
								2148,
								2148
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "src/Cole/BackendBundle/Resources/views/Security/noencontrada.html.twig",
					"settings":
					{
						"buffer_size": 1245,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"auto_name": "asdas",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "src/Cole/BackendBundle/Resources/views/Security/denegada.html.twig",
					"settings":
					{
						"buffer_size": 1229,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "src/Cole/BackendBundle/Resources/translations/messages.en.yml",
					"settings":
					{
						"buffer_size": 20560,
						"regions":
						{
						},
						"selection":
						[
							[
								20249,
								20249
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6101.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "src/Cole/BackendBundle/Resources/translations/messages.es.yml",
					"settings":
					{
						"buffer_size": 503,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "src/Cole/IntranetBundle/Controller/AlumnoController.php",
					"settings":
					{
						"buffer_size": 57177,
						"regions":
						{
						},
						"selection":
						[
							[
								30853,
								30853
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13086.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "src/Cole/BackendBundle/Entity/Alumno.php",
					"settings":
					{
						"buffer_size": 23896,
						"regions":
						{
						},
						"selection":
						[
							[
								7096,
								7096
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4507.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "src/Cole/IntranetBundle/Controller/ProfesorController.php",
					"settings":
					{
						"buffer_size": 90608,
						"regions":
						{
						},
						"selection":
						[
							[
								70874,
								70874
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30167.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "src/Cole/BackendBundle/Entity/Equipamiento.php",
					"settings":
					{
						"buffer_size": 4313,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "src/Cole/BackendBundle/Entity/Horario.php",
					"settings":
					{
						"buffer_size": 5575,
						"regions":
						{
						},
						"selection":
						[
							[
								4855,
								4855
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4539.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "src/Cole/BackendBundle/Entity/Padres.php",
					"settings":
					{
						"buffer_size": 13955,
						"regions":
						{
						},
						"selection":
						[
							[
								4616,
								4616
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3262.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "src/Cole/IntranetBundle/Entity/Tarea.php",
					"settings":
					{
						"buffer_size": 5110,
						"regions":
						{
						},
						"selection":
						[
							[
								678,
								678
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 528.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "src/Cole/BackendBundle/Entity/Grupo.php",
					"settings":
					{
						"buffer_size": 6668,
						"regions":
						{
						},
						"selection":
						[
							[
								1787,
								1787
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1189.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "src/Cole/BackendBundle/Resources/views/Administrativo/new.html.twig",
					"settings":
					{
						"buffer_size": 2432,
						"regions":
						{
						},
						"selection":
						[
							[
								355,
								355
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "src/Cole/BackendBundle/Resources/views/Administrativo/edit.html.twig",
					"settings":
					{
						"buffer_size": 4104,
						"regions":
						{
						},
						"selection":
						[
							[
								2225,
								2225
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 884.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "src/Cole/BackendBundle/Resources/config/routing/profesor.yml",
					"settings":
					{
						"buffer_size": 3777,
						"regions":
						{
						},
						"selection":
						[
							[
								3612,
								3612
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2047.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "src/Cole/BackendBundle/Controller/ProfesorController.php",
					"settings":
					{
						"buffer_size": 31250,
						"regions":
						{
						},
						"selection":
						[
							[
								26298,
								26298
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12472.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "src/Cole/BackendBundle/Controller/CursoController.php",
					"settings":
					{
						"buffer_size": 17546,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "src/Cole/BackendBundle/Entity/Profesor.php",
					"settings":
					{
						"buffer_size": 25336,
						"regions":
						{
						},
						"selection":
						[
							[
								7774,
								7774
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5712.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "src/Cole/BackendBundle/Entity/Administrativo.php",
					"settings":
					{
						"buffer_size": 13659,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "src/Cole/BackendBundle/Controller/PadresController.php",
					"settings":
					{
						"buffer_size": 12431,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "src/Cole/BackendBundle/Controller/AlumnoController.php",
					"settings":
					{
						"buffer_size": 44077,
						"regions":
						{
						},
						"selection":
						[
							[
								17988,
								17988
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8558.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "src/Cole/BackendBundle/Controller/HorarioController.php",
					"settings":
					{
						"buffer_size": 11331,
						"regions":
						{
						},
						"selection":
						[
							[
								845,
								845
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 355.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "src/Cole/IntranetBundle/Controller/AusenciaController.php",
					"settings":
					{
						"buffer_size": 9522,
						"regions":
						{
						},
						"selection":
						[
							[
								7069,
								7069
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3674.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 13,
			"sheets":
			[
				{
					"buffer": 52,
					"file": "src/Cole/ColeBundle/Resources/public/css/estilo.css",
					"settings":
					{
						"buffer_size": 29315,
						"regions":
						{
						},
						"selection":
						[
							[
								28037,
								28037
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22731.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "src/Cole/ColeBundle/Resources/public/js/load.js",
					"settings":
					{
						"buffer_size": 9683,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "src/Cole/ColeBundle/Resources/public/js/e-calendar-master/js/jquery.e-calendar.js",
					"settings":
					{
						"buffer_size": 11854,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "src/Cole/IntranetBundle/Controller/DefaultController.php",
					"settings":
					{
						"buffer_size": 25657,
						"regions":
						{
						},
						"selection":
						[
							[
								16043,
								16043
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7228.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "src/Cole/BackendBundle/Resources/views/Log/listalog.html.twig",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "src/Cole/IntranetBundle/Resources/config/routing.yml",
					"settings":
					{
						"buffer_size": 2784,
						"regions":
						{
						},
						"selection":
						[
							[
								2784,
								2784
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1377.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/tutorias.yml",
					"settings":
					{
						"buffer_size": 1355,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/seguimiento.yml",
					"settings":
					{
						"buffer_size": 2866,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/alumnos.yml",
					"settings":
					{
						"buffer_size": 3675,
						"regions":
						{
						},
						"selection":
						[
							[
								1537,
								1537
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 696.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/profesores.yml",
					"settings":
					{
						"buffer_size": 7355,
						"regions":
						{
						},
						"selection":
						[
							[
								2526,
								2526
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1516.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/index.html.twig",
					"settings":
					{
						"buffer_size": 6136,
						"regions":
						{
						},
						"selection":
						[
							[
								2236,
								2236
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/index.html.twig",
					"settings":
					{
						"buffer_size": 17126,
						"regions":
						{
						},
						"selection":
						[
							[
								11958,
								11958
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 5637.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/curso.html.twig",
					"settings":
					{
						"buffer_size": 18558,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/asistencia.html.twig",
					"settings":
					{
						"buffer_size": 5805,
						"regions":
						{
						},
						"selection":
						[
							[
								5486,
								5486
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2128.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/calificaciones.html.twig",
					"settings":
					{
						"buffer_size": 6389,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/calificacionesTareas.html.twig",
					"settings":
					{
						"buffer_size": 440,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/cursos.html.twig",
					"settings":
					{
						"buffer_size": 15751,
						"regions":
						{
						},
						"selection":
						[
							[
								12968,
								12968
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5652.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/datos_alumnos_grupo.html.twig",
					"settings":
					{
						"buffer_size": 20632,
						"regions":
						{
						},
						"selection":
						[
							[
								9114,
								9114
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3691.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/noticias.html.twig",
					"settings":
					{
						"buffer_size": 9487,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/noticias.html.twig",
					"settings":
					{
						"buffer_size": 8973,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/noticia.html.twig",
					"settings":
					{
						"buffer_size": 2104,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/noticia.html.twig",
					"settings":
					{
						"buffer_size": 2092,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/lista_alumnos_grupo.html.twig",
					"settings":
					{
						"buffer_size": 1965,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/lista_alumnos_optativas.html.twig",
					"settings":
					{
						"buffer_size": 2095,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/datos_horarios.html.twig",
					"settings":
					{
						"buffer_size": 3808,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/datos_horario.html.twig",
					"settings":
					{
						"buffer_size": 3080,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/datos_horario_grupo.html.twig",
					"settings":
					{
						"buffer_size": 4309,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/horario_de_clase.html.twig",
					"settings":
					{
						"buffer_size": 6757,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/header.html.twig",
					"settings":
					{
						"buffer_size": 1802,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "src/Cole/IntranetBundle/Resources/views/Default/header_boletin.html.twig",
					"settings":
					{
						"buffer_size": 1727,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "src/Cole/IntranetBundle/Controller/SeguimientoController.php",
					"settings":
					{
						"buffer_size": 24789,
						"regions":
						{
						},
						"selection":
						[
							[
								15850,
								15850
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 104.0,
						"translation.y": 6913.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "src/Cole/BackendBundle/Resources/views/Curso/ratio.html.twig",
					"settings":
					{
						"buffer_size": 12511,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "src/Cole/BackendBundle/Controller/ReservaController.php",
					"settings":
					{
						"buffer_size": 15426,
						"regions":
						{
						},
						"selection":
						[
							[
								2313,
								2313
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1090.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 85,
					"file": "src/Cole/BackendBundle/Form/ReservaType.php",
					"settings":
					{
						"buffer_size": 2236,
						"regions":
						{
						},
						"selection":
						[
							[
								83,
								83
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 57.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 86,
					"file": "src/Cole/BackendBundle/Resources/config/routing/reserva.yml",
					"settings":
					{
						"buffer_size": 1633,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 87,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/tutorias.html.twig",
					"settings":
					{
						"buffer_size": 29993,
						"regions":
						{
						},
						"selection":
						[
							[
								9210,
								9210
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3540.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 88,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/tutorias.html.twig",
					"settings":
					{
						"buffer_size": 33600,
						"regions":
						{
						},
						"selection":
						[
							[
								8764,
								8764
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3525.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 89,
					"file": "src/Cole/IntranetBundle/Resources/views/Tutorias/new.html.twig",
					"settings":
					{
						"buffer_size": 7550,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 90,
					"file": "src/Cole/IntranetBundle/Form/TutoriasType.php",
					"settings":
					{
						"buffer_size": 3327,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 153.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 91,
					"file": "src/Cole/IntranetBundle/Form/ConfirmacionType.php",
					"settings":
					{
						"buffer_size": 1094,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 92,
					"file": "src/Cole/IntranetBundle/Controller/TutoriasController.php",
					"settings":
					{
						"buffer_size": 15318,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 93,
					"file": "src/Cole/IntranetBundle/Controller/TareaController.php",
					"settings":
					{
						"buffer_size": 27742,
						"regions":
						{
						},
						"selection":
						[
							[
								27347,
								27347
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11966.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 94,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/alumnos_grupo_asignatura.html.twig",
					"settings":
					{
						"buffer_size": 1083,
						"regions":
						{
						},
						"selection":
						[
							[
								742,
								742
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 277.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 95,
					"file": "src/Cole/IntranetBundle/Form/CursaType.php",
					"settings":
					{
						"buffer_size": 968,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 96,
					"file": "src/Cole/IntranetBundle/Controller/CursaController.php",
					"settings":
					{
						"buffer_size": 6066,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 97,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/cursa.yml",
					"settings":
					{
						"buffer_size": 789,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 98,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/tarea.yml",
					"settings":
					{
						"buffer_size": 1603,
						"regions":
						{
						},
						"selection":
						[
							[
								805,
								805
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 306.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 99,
					"file": "src/Cole/BackendBundle/Resources/views/Reserva/index.html.twig",
					"settings":
					{
						"buffer_size": 10386,
						"regions":
						{
						},
						"selection":
						[
							[
								149,
								149
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 100,
					"file": "src/Cole/BackendBundle/Resources/config/routing/horario.yml",
					"settings":
					{
						"buffer_size": 1705,
						"regions":
						{
						},
						"selection":
						[
							[
								985,
								985
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 430.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 101,
					"file": "src/Cole/IntranetBundle/Resources/config/routing/ausencia.yml",
					"settings":
					{
						"buffer_size": 1021,
						"regions":
						{
						},
						"selection":
						[
							[
								442,
								442
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 76,
			"sheets":
			[
				{
					"buffer": 102,
					"file": "src/Cole/BackendBundle/Resources/public/css/backend.css",
					"settings":
					{
						"buffer_size": 171871,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 103,
					"file": "src/Cole/ColeBundle/Resources/views/Noticias/index.html.twig",
					"settings":
					{
						"buffer_size": 6744,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 104,
					"file": "src/Cole/BackendBundle/Resources/public/js/general.js",
					"settings":
					{
						"buffer_size": 615540,
						"regions":
						{
						},
						"selection":
						[
							[
								308328,
								308328
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 128214.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 105,
					"file": "src/Cole/BackendBundle/Resources/public/js/load.js",
					"settings":
					{
						"buffer_size": 43462,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 106,
					"file": "src/Cole/BackendBundle/Resources/views/Matricula/anular_matricula.html.twig",
					"settings":
					{
						"buffer_size": 7719,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 107,
					"file": "src/Cole/ColeBundle/ListenerExcepcion.php",
					"settings":
					{
						"buffer_size": 589,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 108,
					"file": "src/Cole/ColeBundle/InteractiveLoginListener.php",
					"settings":
					{
						"buffer_size": 1614,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 109,
					"file": "src/Cole/ColeBundle/AuthenticationHandler.php",
					"settings":
					{
						"buffer_size": 4222,
						"regions":
						{
						},
						"selection":
						[
							[
								1819,
								1819
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 725.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 110,
					"file": "src/Cole/ColeBundle/AccessDeniedHandler.php",
					"settings":
					{
						"buffer_size": 1130,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"auto_name": "dgd",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 111,
					"file": "src/Cole/IntranetBundle/Entity/Seguimiento.php",
					"settings":
					{
						"buffer_size": 9999,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7238.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 112,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/seguimientos.html.twig",
					"settings":
					{
						"buffer_size": 19601,
						"regions":
						{
						},
						"selection":
						[
							[
								18353,
								18353
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6732.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 113,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/lista_seguimiento.html.twig",
					"settings":
					{
						"buffer_size": 18658,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 114,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/seguimiento.html.twig",
					"settings":
					{
						"buffer_size": 9398,
						"regions":
						{
						},
						"selection":
						[
							[
								2554,
								2554
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 109.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 115,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/seguimientos.html.twig",
					"settings":
					{
						"buffer_size": 12186,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3949.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 116,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/lista_seguimiento.html.twig",
					"settings":
					{
						"buffer_size": 16371,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 117,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/seguimiento.html.twig",
					"settings":
					{
						"buffer_size": 9008,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 118,
					"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/new.html.twig",
					"settings":
					{
						"buffer_size": 7106,
						"regions":
						{
						},
						"selection":
						[
							[
								897,
								897
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2126.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 119,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/asistencia.html.twig",
					"settings":
					{
						"buffer_size": 12446,
						"regions":
						{
						},
						"selection":
						[
							[
								2428,
								2428
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 935.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 120,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/claseAsignada.html.twig",
					"settings":
					{
						"buffer_size": 8133,
						"regions":
						{
						},
						"selection":
						[
							[
								2370,
								2370
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 884.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 121,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/calificaciones.html.twig",
					"settings":
					{
						"buffer_size": 11276,
						"regions":
						{
						},
						"selection":
						[
							[
								9181,
								9181
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3058.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 122,
					"file": "src/Cole/IntranetBundle/Resources/views/Ausencia/eliminarAusencia.html.twig",
					"settings":
					{
						"buffer_size": 442,
						"regions":
						{
						},
						"selection":
						[
							[
								415,
								415
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 123,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluar_asignatura.html.twig",
					"settings":
					{
						"buffer_size": 7474,
						"regions":
						{
						},
						"selection":
						[
							[
								7474,
								7474
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 816.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 124,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluar_tarea.html.twig",
					"settings":
					{
						"buffer_size": 12867,
						"regions":
						{
						},
						"selection":
						[
							[
								11922,
								11922
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3856.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 125,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluar_trimestre.html.twig",
					"settings":
					{
						"buffer_size": 9306,
						"regions":
						{
						},
						"selection":
						[
							[
								505,
								505
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 187.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 126,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluacion_grupo.html.twig",
					"settings":
					{
						"buffer_size": 5245,
						"regions":
						{
						},
						"selection":
						[
							[
								3149,
								3149
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 127,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/evaluacion_alumno.html.twig",
					"settings":
					{
						"buffer_size": 3372,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 128,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/boletin_evaluacion.html.twig",
					"settings":
					{
						"buffer_size": 7689,
						"regions":
						{
						},
						"selection":
						[
							[
								1831,
								1831
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 129,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/lista_tareas_alumno.html.twig",
					"settings":
					{
						"buffer_size": 847,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 51.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 130,
					"file": "src/Cole/ColeBundle/Resources/views/Noticias/noticia.html.twig",
					"settings":
					{
						"buffer_size": 1396,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 131,
					"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/newTutoria.html.twig",
					"settings":
					{
						"buffer_size": 804,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 132,
					"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/respuestaSeguimiento.html.twig",
					"settings":
					{
						"buffer_size": 1166,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 133,
					"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/respuestaSeguimientoInfantil.html.twig",
					"settings":
					{
						"buffer_size": 1017,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 134,
					"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/edit.html.twig",
					"settings":
					{
						"buffer_size": 504,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 135,
					"file": "src/Cole/IntranetBundle/Resources/views/Seguimiento/eliminarSeguimiento.html.twig",
					"settings":
					{
						"buffer_size": 568,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 136,
					"file": "src/Cole/IntranetBundle/Resources/views/Tarea/eliminarTarea.html.twig",
					"settings":
					{
						"buffer_size": 404,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 137,
					"file": "src/Cole/IntranetBundle/Resources/views/Tutorias/eliminarTutorias.html.twig",
					"settings":
					{
						"buffer_size": 404,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 138,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/eliminarReserva.html.twig",
					"settings":
					{
						"buffer_size": 409,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 139,
					"file": "src/Cole/IntranetBundle/Entity/AvisosRepository.php",
					"settings":
					{
						"buffer_size": 5885,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 140,
					"file": "src/Cole/IntranetBundle/Entity/SeguimientoRepository.php",
					"settings":
					{
						"buffer_size": 24827,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 141,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/info_alumno.html.twig",
					"settings":
					{
						"buffer_size": 5523,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 142,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/info_tutoria.html.twig",
					"settings":
					{
						"buffer_size": 1011,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 143,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/info_tutoria.html.twig",
					"settings":
					{
						"buffer_size": 852,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 144,
					"file": "src/Cole/ColeBundle/Entity/NoticiasRepository.php",
					"settings":
					{
						"buffer_size": 2062,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 145,
					"file": "src/Cole/IntranetBundle/Entity/Avisos.php",
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 146,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/reservas.html.twig",
					"settings":
					{
						"buffer_size": 6370,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 85.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 147,
					"file": "src/Cole/IntranetBundle/Form/SeguimientoType.php",
					"settings":
					{
						"buffer_size": 3044,
						"regions":
						{
						},
						"selection":
						[
							[
								437,
								437
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 153.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 148,
					"file": "src/Cole/IntranetBundle/Entity/TutoriasRepository.php",
					"settings":
					{
						"buffer_size": 1602,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 149,
					"file": "src/Cole/IntranetBundle/Resources/views/Profesor/seguimiento_tutoria.html.twig",
					"settings":
					{
						"buffer_size": 19097,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 150,
					"file": "src/Cole/IntranetBundle/Resources/views/Alumno/seguimiento_tutoria.html.twig",
					"settings":
					{
						"buffer_size": 13329,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 151,
					"file": "src/Cole/BackendBundle/Resources/views/Profesor/equipo_directivo.html.twig",
					"settings":
					{
						"buffer_size": 10815,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 152,
					"file": "src/Cole/BackendBundle/Controller/GrupoController.php",
					"settings":
					{
						"buffer_size": 42042,
						"regions":
						{
						},
						"selection":
						[
							[
								6040,
								6040
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2921.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 153,
					"file": "src/Cole/ColeBundle/Resources/views/Noticias/new.html.twig",
					"settings":
					{
						"buffer_size": 9739,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 154,
					"file": "src/Cole/IntranetBundle/Entity/TareaRepository.php",
					"settings":
					{
						"buffer_size": 2891,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 155,
					"file": "src/Cole/BackendBundle/Controller/AdministrativoController.php",
					"settings":
					{
						"buffer_size": 16427,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 156,
					"file": "src/Cole/BackendBundle/Resources/config/routing/administrativo.yml",
					"settings":
					{
						"buffer_size": 2541,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 157,
					"file": "src/Cole/BackendBundle/Form/BusquedaAdministrativoType.php",
					"settings":
					{
						"buffer_size": 1488,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 158,
					"file": "src/Cole/BackendBundle/Resources/views/Administrativo/search_old.html.twig",
					"settings":
					{
						"buffer_size": 11197,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 159,
					"file": "src/Cole/BackendBundle/Resources/views/Profesor/search_old.html.twig",
					"settings":
					{
						"buffer_size": 11093,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 160,
					"file": "src/Cole/BackendBundle/Resources/views/Administrativo/datos_antiguo_administrativo.html.twig",
					"settings":
					{
						"buffer_size": 332,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 161,
					"file": "src/Cole/BackendBundle/Entity/ImparteRepository.php",
					"settings":
					{
						"buffer_size": 15303,
						"regions":
						{
						},
						"selection":
						[
							[
								12663,
								12663
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5807.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 162,
					"file": "src/Cole/IntranetBundle/Entity/Cursa.php",
					"settings":
					{
						"buffer_size": 3703,
						"regions":
						{
						},
						"selection":
						[
							[
								762,
								762
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 163,
					"file": "src/Cole/IntranetBundle/Entity/CursaRepository.php",
					"settings":
					{
						"buffer_size": 6281,
						"regions":
						{
						},
						"selection":
						[
							[
								578,
								578
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 40.0,
						"translation.y": 141.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 164,
					"file": "src/Cole/BackendBundle/Entity/AlumnoRepository.php",
					"settings":
					{
						"buffer_size": 4864,
						"regions":
						{
						},
						"selection":
						[
							[
								4351,
								4351
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2295.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 165,
					"file": "src/Cole/BackendBundle/Entity/AsignaturasCursosRepository.php",
					"settings":
					{
						"buffer_size": 3425,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 85.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 166,
					"file": "src/Cole/BackendBundle/Resources/views/Profesor/new.html.twig",
					"settings":
					{
						"buffer_size": 14149,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 167,
					"file": "src/Cole/BackendBundle/Resources/views/Profesor/edit.html.twig",
					"settings":
					{
						"buffer_size": 17717,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 168,
					"file": "src/Cole/BackendBundle/Entity/ProfesorRepository.php",
					"settings":
					{
						"buffer_size": 2987,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 169,
					"file": "src/Cole/ColeBundle/Resources/views/Noticias/edit.html.twig",
					"settings":
					{
						"buffer_size": 13677,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 170,
					"file": "src/Cole/BackendBundle/Controller/MatriculaController.php",
					"settings":
					{
						"buffer_size": 16561,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 171,
					"file": "src/Cole/BackendBundle/Resources/views/Grupo/AsignarGrupoConCurso.html.twig",
					"settings":
					{
						"buffer_size": 40689,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 172,
					"file": "src/Cole/BackendBundle/Entity/HorarioRepository.php",
					"settings":
					{
						"buffer_size": 1749,
						"regions":
						{
						},
						"selection":
						[
							[
								1007,
								1007
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 710.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 173,
					"file": "src/Cole/IntranetBundle/Entity/Ausencia.php",
					"settings":
					{
						"buffer_size": 4656,
						"regions":
						{
						},
						"selection":
						[
							[
								1369,
								1369
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 548.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 174,
					"file": "src/Cole/BackendBundle/Entity/AsignaturasCursos.php",
					"settings":
					{
						"buffer_size": 8215,
						"regions":
						{
						},
						"selection":
						[
							[
								1899,
								1899
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1093.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 175,
					"file": "src/Cole/BackendBundle/Entity/Curso.php",
					"settings":
					{
						"buffer_size": 7561,
						"regions":
						{
						},
						"selection":
						[
							[
								1488,
								1488
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1173.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 176,
					"file": "src/Cole/IntranetBundle/Entity/AusenciaRepository.php",
					"settings":
					{
						"buffer_size": 1825,
						"regions":
						{
						},
						"selection":
						[
							[
								1444,
								1444
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 766.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 177,
					"file": "src/Cole/IntranetBundle/Form/AusenciaType.php",
					"settings":
					{
						"buffer_size": 3192,
						"regions":
						{
						},
						"selection":
						[
							[
								823,
								823
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 712.0,
						"translation.y": 218.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 178,
					"file": "src/Cole/IntranetBundle/Resources/views/Ausencia/edit.html.twig",
					"settings":
					{
						"buffer_size": 585,
						"regions":
						{
						},
						"selection":
						[
							[
								282,
								282
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"devel": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": "load-save",
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				0,
				2,
				1,
				3
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.434268833087,
			0.651403249631,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"6894",
				"app/cache/dev/profiler/a8/94/6894a8"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 301.0,
	"status_bar_visible": true
}
