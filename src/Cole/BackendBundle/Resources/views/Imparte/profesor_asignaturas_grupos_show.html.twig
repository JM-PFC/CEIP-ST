{% extends 'BackendBundle:Default:index.html.twig' %}

{% block head %}{% endblock %}
{% block stylesheets %}{% endblock %}
    
{% block javascript %}
    <script>
    $("#añadir_modal").hover(function() {
        $(this).find("#img_1").addClass("oculto");
        $(this).find("#img_2").removeClass("oculto");

    }, function() {
        $(this).find("#img_2").addClass("oculto");
        $(this).find("#img_1").removeClass("oculto");    }
    );

    $("#profesor_asignatura_grupo_dialog").dialog(
       {
        bgiframe: true,
        autoOpen: false,
        height: 570,
        width: 1000,
        modal: true,
        resizable: false,
       }
    );
    $('#profesor_asignatura_grupo_dialog').on('dialogclose', function(event) {
        $('#profesor_asignatura_grupo_dialog').empty();
    });
    //Se activa el primer curso por defecto.
    $("#asignar_profesor #contenedor_registro[idcurso='1']").removeClass('oculto');
    $("#asignar_profesor button[id='1']").addClass('elected');
    //Efecto del botón pulsado en la lista.
    $(document).on('click',"#asignar_profesor .contenido_lista button",function(event){
        event.preventDefault();
        id=$(this).attr("id");
        $("#asignar_profesor #contenedor_registro").addClass('oculto');
        $("#asignar_profesor button").removeClass('elected');
        $(this).addClass('elected');
        $("#asignar_profesor #contenedor_registro[idcurso='"+id+"']").removeClass('oculto');

        //Se asigna el nombre y el id del grupo al botón de eliminar asignaciones por grupo.
        $("#asignar_profesor #eliminar_grupo span").text($("#asignar_profesor .lista_cursos .elected").text());
        $("#asignar_profesor #eliminar_grupo").attr("grupo",$("#asignar_profesor #contenedor_registro:not(.oculto) #cabecera_lista").attr("grupo"));
        //Se muestra o se oculta el botón de Eliminar por grupo.
        if($("#asignar_profesor #contenedor_registro:not(.oculto) tr:not(.cabecera_tipo) td[class='']").size()>0){
            $("#asignar_profesor #eliminar_grupo").prop("disabled",false);
        }
        else{
            $("#asignar_profesor #eliminar_grupo").prop("disabled",true);
        }

        //Se oculta la cabecera de la tabla si no hay registros.
        if($("#asignar_profesor #contenedor_registro:not(.oculto) tr .dataTables_empty").size()==0){
            $("#asignar_profesor #lista_asignaturas thead").removeClass('oculto');
        }
        else{
            $("#asignar_profesor #lista_asignaturas thead").addClass('oculto');  
        }
    });

    //Comprobacón de existencia de cursos.
    if($("#asignar_profesor .contenido_lista button").size()==0){

        // Se establece las variables con los audios para las notificaciones.
        if (navigator.userAgent.search("Firefox") >= 0) { //Firefox sólo admite archivos .ogg
            var error = new Audio();
            error.src = "/Symfony/web/bundles/backend/sounds/error.ogg";
        }
        else{
            var error = new Audio();
            error.src = "/Symfony/web/bundles/backend/sounds/error.mp3";
        }
        error.play();
          swal({
            title: "Cursos no registrados",
            text: 'Actualmente no existe ningún curso registrado en el sistema. Debe registrar los cursos para poder asignarles los profesores.',
            type: "error",
            confirmButtonColor: color
          });          
        $("#tabs ul li[aria-selected='true'] span").trigger("click");
    }
    
    //Comprobacón de existencia de asignaturas.
    if({{numAsignaturas|json_encode()|raw}}==0){

        // Se establece las variables con los audios para las notificaciones.
        if (navigator.userAgent.search("Firefox") >= 0) { //Firefox sólo admite archivos .ogg
            var error = new Audio();
            error.src = "/Symfony/web/bundles/backend/sounds/error.ogg";
        }
        else{
            var error = new Audio();
            error.src = "/Symfony/web/bundles/backend/sounds/error.mp3";
        }
        error.play();
          swal({
            title: "Asignaturas no registradas",
            text: 'Actualmente no existen asignaturas registrada en el sistema. Debe registrar las asignaturas para poder asignarles los profesores.',
            type: "error",
            confirmButtonColor: color
          });          
        $("#tabs ul li[aria-selected='true'] span").trigger("click");
    }

    //Comprobacón de existencia de profesores.
    if({{numProfesores|json_encode()|raw}}==0){

        // Se establece las variables con los audios para las notificaciones.
        if (navigator.userAgent.search("Firefox") >= 0) { //Firefox sólo admite archivos .ogg
            var error = new Audio();
            error.src = "/Symfony/web/bundles/backend/sounds/error.ogg";
        }
        else{
            var error = new Audio();
            error.src = "/Symfony/web/bundles/backend/sounds/error.mp3";
        }
        error.play();
          swal({
            title: "Profesores no registrados",
            text: 'Actualmente no existen profesores registrados en el sistema. Debe registrar los profesores para poder asignarlos.',
            type: "error",
            confirmButtonColor: color
          });          
        $("#tabs ul li[aria-selected='true'] span").trigger("click");
    }
    //Botón para eliminar asignaciones de profesores de un grupo.
    //Se asigna el nombre y el id del grupo al botón de eliminar asignaciones por grupo.
    $("#asignar_profesor #eliminar_grupo span").text($("#asignar_profesor .lista_cursos .elected").text());
    $("#asignar_profesor #eliminar_grupo").attr("grupo",$("#asignar_profesor #contenedor_registro:not(.oculto) #cabecera_lista").attr("grupo"));

    //Se desactiva botón para grupos que no tienen profesores asignados.
    setTimeout(function(){ 
        if($("#asignar_profesor #contenedor_registro:not(.oculto) tr:not(.cabecera_tipo) td[class='']").size()==0){
            $("#asignar_profesor #eliminar_grupo").prop("disabled",true);
        }

        //Botón para eliminar todas las asignaciones de profesores en los grupos.
        //Se desactiva botón cuando no hay ningún profesor asignado en el sistema.
        if($("#asignar_profesor #contenedor_registro tr:not(.cabecera_tipo) td[class='']").size()==0){
            $("#asignar_profesor #eliminar_todo").prop("disabled",true);
        }
    }, 20);

        //Se oculta la cabecera de la tabla si no hay registros.
        if($("#asignar_profesor #contenedor_registro:not(.oculto) tr .dataTables_empty").size()==0){
            $("#asignar_profesor #lista_asignaturas thead").removeClass('oculto');
        }
        else{
            $("#asignar_profesor #lista_asignaturas thead").addClass('oculto');  
        }

  //Se añade cabecera a la tabla para diferencias los tipos de asignaturas.
  $("#asignar_profesor #contenedor_registro").each(function(){  
    grupo=$(this).find("#cabecera_lista").attr("grupo");

    $('<tr class="cabecera_tipo"><td id="cabecera_troncal" class="">Troncales</td></tr>').insertBefore($(this).find("tbody tr[tipo='Troncal']:first")); 
    $('<tr class="cabecera_tipo"><td id="cabecera_troncal" class="">Específicas</td></tr>').insertBefore($(this).find("tbody tr[opcional='']:first"));
    $('<tr class="cabecera_tipo"><td id="cabecera_troncal" class="">Específicas (Opcionales)</td></tr>').insertBefore($(this).find("tbody tr[opcional='1']:first"));
  });



    </script>
{% endblock %}

{% block body -%}
    <div id="asignar_profesor">
    <div class="parent_no_form">
    <div class="child">
      <div class="simple_column">
        <div class="block_insert">
            <h2>Asignación de Profesores</h2>
            <ul>
                <li>Para <span>mostrar</span> las asignaciones de profesores de un grupo pulse sobre el botón del grupo correspondiente.</li>
                <li>Para <span>añadir</span> ó <span>modificar</span> asignaciones de profesores de un grupo pulse sobre el icono de añadir <img id="img_1" class="add_registro" src="/Symfony/web/bundles/backend/images/menu/añadir_azul.png"> del grupo correspondiente.</li>
                <li>Para <span>eliminar todas</span> las asignaciones de un grupo o de todos los grupos a la vez, pulse sobre los botones inferiores.</li>
            </ul>
            <div>
                <button id="eliminar_grupo" title="Elimina todas las asignaciones de profesores del grupo"><strong>Eliminar</strong><br>Prof. de <span></span></button>
                <button id="eliminar_todo" title="Elimina todas las asignaciones de profesores de todos los grupos"><strong>Eliminar</strong><br>Todos los Prof.</button>
            </div>
        </div> 
      </div>
      <div class="lista_cursos">
        <div class="cabecera_lista">Primaria</div>
        <div class="contenido_lista">
            {% for entity in entities %}
                {% if entity.curso.nivel == "Primaria" %}
                <button class="buttonface" id="{{ loop.index }}">{{ entity.curso.curso ~ " " ~ entity.letra }} </button>
                {% endif %}
            {% endfor %}    
        </div>
      </div>
    {% for entity in entities %}
      <div class="derecha contenedor_registro oculto" idcurso="{{ loop.index }}"id="contenedor_registro">  
        <div>
            <div id="cabecera_lista" grupo="{{ entity.id}}">
                <h2>{{ entity.curso.curso ~ " de " ~ entity.curso.nivel ~ " - Grupo " ~ entity.letra }}
                    <a id="añadir_modal" title="Asignar Profesores" href="javascript:void(0);">
                        <img id="img_1" class="add_registro" src="{{ asset('bundles/backend/images/menu/añadir_azul.png')}}">
                        <img id="img_2" class="add_registro oculto" src="{{ asset('bundles/backend/images/menu/añadir_azul2.png')}}">
                    </a>
                </h2>
            </div>
            <div id="lista_asignaturas">
                <table class="records_list">
                    <thead>
                    <tr>
                        <th>Asignatura</th>
                        <th>Profesor</th>
                        <th>Aula</th>
                    </tr>
                    </thead>
                </table>
                <div class="inner_table">
                    <table id="lista_color">
                        {{render (controller('BackendBundle:Imparte:ProfesoresAsignaturasGrupos',{'id': entity.id }))}}
                    </table>
                </div>
            </div>
        </div>          
      </div>
    {% endfor %}

      <div id="profesor_asignatura_grupo_dialog" title="Asignación de profesores">
    </div>
    </div>
    </div>
    {% endblock %}